(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    693871,      13581]
NotebookOptionsPosition[    692857,      13549]
NotebookOutlinePosition[    693344,      13568]
CellTagsIndexPosition[    693301,      13565]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.528782481988389*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}], "**", "**"}], "*", "\[IndentingNewLine]", "Copyright", " ", 
    RowBox[{"(", "c", ")"}], " ", "2013"}], ",", " ", 
   RowBox[{"Duncan", " ", 
    RowBox[{"J", ".", " ", "Wingham"}]}], ",", " ", "\[IndentingNewLine]", 
   " ", 
   RowBox[{
   "Center", " ", "for", " ", "Polar", " ", "Observation", " ", "and", " ", 
    "Modelling"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"University", " ", "College", " ", "London"}], ",", " ", "London", 
   ",", " ", 
   RowBox[{
    RowBox[{"U", ".", "K", ".", "\[IndentingNewLine]", "\n", "Permission"}], 
    " ", "is", " ", "hereby", " ", "granted"}], ",", 
   RowBox[{"free", " ", "of", " ", "charge"}], ",", 
   RowBox[{
   "to", " ", "any", " ", "person", " ", "obtaining", " ", "a", " ", "copy", 
    "\n", "of", " ", "this", " ", "software", " ", "and", " ", "associated", 
    " ", "documentation", " ", "files", " ", 
    RowBox[{"(", 
     RowBox[{"the", " ", "\"\<Software\>\""}], ")"}]}], ",", 
   RowBox[{
   "to", " ", "deal", "\n", "in", " ", "the", " ", "Software", " ", "without",
     " ", "restriction"}], ",", 
   RowBox[{
   "including", " ", "without", " ", "limitation", " ", "the", " ", "rights", 
    "\n", "to", " ", "use"}], ",", "copy", ",", "modify", ",", "merge", ",", 
   "publish", ",", "distribute", ",", "sublicense", ",", 
   RowBox[{
    RowBox[{"and", "/", "or"}], " ", "sell", "\n", "copies", " ", "of", " ", 
    "the", " ", "Software"}], ",", 
   RowBox[{
   "and", " ", "to", " ", "permit", " ", "persons", " ", "to", " ", "whom", 
    " ", "the", " ", "Software", " ", "is", "\n", "furnished", " ", "to", " ",
     "do", " ", "so"}], ",", 
   RowBox[{"subject", " ", "to", " ", "the", " ", "following", " ", 
    RowBox[{"conditions", ":", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
     "The", " ", "above", " ", "copyright", " ", "notice", " ", "and", " ", 
      "this", " ", "permission", " ", "notice", " ", "shall", " ", "be", " ", 
      "included", " ", "in", "\n", "all", " ", "copies", " ", "or", " ", 
      "substantial", " ", "portions", " ", "of", " ", "the", " ", 
      RowBox[{
      "Software", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "THE"}], 
      " ", "SOFTWARE", " ", "IS", " ", "PROVIDED", " ", "\"\<AS IS\>\""}]}]}],
    ",", 
   RowBox[{"WITHOUT", " ", "WARRANTY", " ", "OF", " ", "ANY", " ", "KIND"}], 
   ",", 
   RowBox[{"EXPRESS", " ", "OR", " ", "\[IndentingNewLine]", "IMPLIED"}], ",", 
   RowBox[{
   "INCLUDING", " ", "BUT", " ", "NOT", " ", "LIMITED", " ", "TO", " ", "THE",
     " ", "WARRANTIES", " ", "OF", " ", "MERCHANTABILITY"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{
   "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", "PURPOSE", " ", 
    "AND", " ", 
    RowBox[{"NONINFRINGEMENT", ".", "IN"}], " ", "NO", " ", "EVENT", " ", 
    "SHALL", " ", "THE", " ", "\[IndentingNewLine]", "AUTHORS", " ", "OR", 
    " ", "COPYRIGHT", " ", "HOLDERS", " ", "BE", " ", "LIABLE", " ", "FOR", 
    " ", "ANY", " ", "CLAIM"}], ",", 
   RowBox[{
   "DAMAGES", " ", "OR", " ", "OTHER", "\[IndentingNewLine]", "LIABILITY"}], 
   ",", 
   RowBox[{
   "WHETHER", " ", "IN", " ", "AN", " ", "ACTION", " ", "OF", " ", 
    "CONTRACT"}], ",", 
   RowBox[{"TORT", " ", "OR", " ", "OTHERWISE"}], ",", 
   RowBox[{"ARISING", " ", "FROM"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{
   "OUT", " ", "OF", " ", "OR", " ", "IN", " ", "CONNECTION", " ", "WITH", 
    " ", "THE", " ", "SOFTWARE", " ", "OR", " ", "THE", " ", "USE", " ", "OR",
     " ", "OTHER", " ", "DEALINGS", " ", "IN", "\[IndentingNewLine]", "THE", 
    " ", 
    RowBox[{"SOFTWARE", ".", "\[IndentingNewLine]", 
     RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**"}], "*"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.528782482901331*^9, 3.528785018906268*^9, {3.590222862516675*^9, 
   3.590223090357587*^9}, {3.590224254527259*^9, 3.590224385851264*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Description", ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "This", " ", "code", " ", "computes", " ", "the", " ", "CryoSat"}], "-", 
      RowBox[{"2", " ", "pulse"}], "-", 
      RowBox[{"limited", " ", 
       RowBox[{"(", "PL", ")"}]}]}]}], ",", " ", 
    RowBox[{"SAR", " ", "and", " ", "SARin", " ", 
     RowBox[{"echoes", ".", " ", "No"}], " ", "input", " ", "from", " ", 
     "the", " ", "user", " ", "is", "\[IndentingNewLine]", 
     RowBox[{"required", ".", " ", "Output"}], " ", "files", " ", "of", " ", 
     "the", " ", "calculated", " ", "model", " ", "are", " ", "generated", 
     " ", "and", " ", "written", " ", "by", " ", "this", " ", 
     RowBox[{"script", ".", " ", "A"}], " ", "usage", " ", "example"}], ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{
    "which", " ", "plots", " ", "examples", " ", "of", " ", "the", " ", 
     "model", " ", "output", " ", "waveforms"}], ",", " ", 
    RowBox[{"is", " ", "provided", " ", 
     RowBox[{
     "below", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "Please"}], 
     " ", "do", " ", "familiarise", " ", "yourself", " ", "with", " ", "the", 
     " ", "code"}], ",", " ", 
    RowBox[{
    "as", " ", "certain", " ", "segments", " ", "of", " ", "this", " ", 
     "code", " ", "should", " ", "be", " ", "\[IndentingNewLine]", "modified",
      " ", "depending", " ", "of", " ", "which", " ", "echo", " ", 
     RowBox[{"(", 
      RowBox[{"PL", ",", " ", 
       RowBox[{"SAR", " ", "or", " ", "SARin"}]}], ")"}], " ", "you", " ", 
     "would", " ", "like", " ", "to", " ", 
     RowBox[{
     "generate", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "A"}], " ", "detailed", " ", "description", " ", "of", " ", "the", " ", 
     "theory", " ", "on", " ", "which", " ", "this", " ", "code", " ", "is", 
     " ", 
     RowBox[{
     "built", ":", " ", "\[IndentingNewLine]", 
      "\"\<Precise Estimates of Ocean Surface Parameters from the CryoSat-2 \
Synthetic Aperture, Interferometric\nAltimeter\>\""}]}], ",", " ", 
    RowBox[{"Katharine", " ", 
     RowBox[{"A", ".", " ", "Giles"}]}], ",", " ", 
    RowBox[{"Duncan", " ", 
     RowBox[{"J", ".", " ", "Wingham"}]}], ",", " ", 
    RowBox[{"Natalia", " ", "Galin"}], ",", " ", 
    RowBox[{"Robert", " ", "Cullen"}], ",", " ", 
    RowBox[{"Walter", " ", 
     RowBox[{"H", ".", " ", "F", ".", " ", "Smith", "."}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"!!", 
    RowBox[{"!!", 
     RowBox[{"!!", 
      RowBox[{"!!", 
       RowBox[{"!", 
        RowBox[{
         RowBox[{
         "BY", " ", "DEFAULT", " ", "THE", " ", "ROUTINE", " ", "CALCULATES", 
          " ", "CRYOSAT"}], "-", 
         RowBox[{"2", " ", "SAR", " ", "MODE", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ECHOES", "!!"}], "!!"}], "!!"}], "!!"}], 
           "!!"}]}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "c", ",", "t", ",", "h", ",", "eta", ",", "r", ",", "k0", ",", "lambda", 
     ",", "del", ",", "d", ",", "zeta", ",", "d0", ",", "thetaint", ",", 
     "thetastart", ",", "theta", ",", "thetaw", ",", "kinc"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2.99792458", " ", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "h", " ", "IS", " ", "THE", " ", "REFERENCE", " ", "SATELLITE", " ", 
     "ALTITUDE", " ", "IN", " ", "METRES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "720000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "r", " ", "IS", " ", "THE", " ", "REFERENCE", " ", "EARTH", " ", "RADIUS",
      " ", "IN", " ", "METRES"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "6380000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", "=", 
     RowBox[{"1", "+", 
      RowBox[{"h", "/", "r"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "lambda", " ", "IS", " ", "THE", " ", "CARRIER", " ", "WAVELENGTH", " ", 
     "IN", " ", "METRES"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", "=", 
     RowBox[{"c", "/", 
      RowBox[{"(", " ", 
       RowBox[{"13.575", " ", 
        RowBox[{"10", "^", "9"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k0", "=", 
     RowBox[{"2", " ", 
      RowBox[{"Pi", "/", "lambda"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "del", " ", "IS", " ", "THE", " ", "SPACING", " ", "OF", " ", "THE", " ", 
     "SAMPLES", " ", "IN", " ", "THE", " ", "SYNTHETIC", " ", "APERTURE"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"del", "=", 
     RowBox[{"7200.", "/", "18182"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "zeta", " ", "IS", " ", "THE", " ", "ANGULAR", " ", "WIDTH", " ", "OF", 
     " ", "A", " ", "SYNTHETIC", " ", 
     RowBox[{"BEAM", ".", " ", "SEE"}], " ", "NOTE", " ", "CONCERNING", " ", 
     "NUMBER", " ", "OF", " ", "BEAMS", " ", 
     RowBox[{"BELOW", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta", "=", 
     RowBox[{"Pi", "/", 
      RowBox[{"(", 
       RowBox[{"64", " ", "k0", " ", "del"}], ")"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
     RowBox[{
      RowBox[{"set", " ", "zeta"}], " ", "=", " ", "0"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"zeta", " ", "=", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"d0", " ", "IS", " ", "THE", " ", "SYNTHETIC", " ", "BEAM", " ", 
       RowBox[{"GAIN", ".", " ", "d0"}]}], "=", 
      RowBox[{
      "4096", " ", "IS", " ", "FOR", " ", "A", " ", "RECTANGULAR", " ", 
       "WEIGHTING", " ", "ON", " ", "THE", " ", "SYNTHETIC", " ", 
       "APERTURE"}]}], ";", " ", 
     RowBox[{
      RowBox[{
      "IF", " ", "USING", " ", "A", " ", "HAMMING", " ", "WEIGHTING", " ", 
       RowBox[{"(", 
        RowBox[{"SEE", " ", "BELOW"}], ")"}], " ", "use", " ", "d0"}], "=", 
      RowBox[{"1162.8100000000006`", " ", 
       RowBox[{"INSTEAD", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"d0", "=", "4096"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
     RowBox[{
      RowBox[{"set", " ", "d0"}], " ", "=", " ", "1"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"d0", " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "bandwidth", " ", "IS", " ", "THE", " ", "COMPRESSED", " ", "PULSE", " ", 
     "BANDWIDTH"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bandwidth", "=", "320000000."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "res", " ", "IS", " ", "THE", " ", "SAMPLING", " ", "INTERVAL", " ", "IN",
      " ", "DELAY", " ", "TIME", " ", "OF", " ", "THE", " ", "ECHOES"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res", "=", 
     RowBox[{"1", "/", "bandwidth"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammabar", "=", "0.012215368000378016`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammahat", "=", "0.0381925958945466`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma1", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "+", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma2", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", "=", 
     RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"THE", " ", "NEXT", " ", "LINE", " ", "SETS", " ", "THE", " ", 
       RowBox[{"BASELINE", ".", " ", "IF"}], " ", "THIS", " ", "PARAMETER", 
       " ", "IS", " ", "NON"}], "-", "ZERO"}], ",", " ", 
     RowBox[{
     "THE", " ", "CODE", " ", "WILL", " ", "EVALUATE", " ", "THE", " ", 
      "INTEFEROMETRIC", " ", "CROSS", " ", 
      RowBox[{"PRODUCT", ".", " ", "IF"}], " ", "YOU", " ", "SET", " ", 
      "THIS", " ", "PARAMETER", " ", "TO", " ", "ZERO"}], ",", " ", 
     RowBox[{
     "IT", " ", "WILL", " ", "EVALUATE", " ", "THE", " ", "SARIN", " ", "OR", 
      " ", "SAR", " ", "ECHO", " ", 
      RowBox[{"POWER", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"set", " ", "baseline"}], " ", "=", " ", "0"}], ";"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"baseline", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"1.1676", ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
     "ANTENNA", " ", "GAIN", " ", "PATTERN"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gainsqr", "[", 
     RowBox[{"roe_", ",", "thetaw_"}], "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"roe", " ", 
             RowBox[{"Cos", "[", "thetaw", "]"}]}], ")"}], "/", "gamma1"}], 
          ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"roe", " ", 
             RowBox[{"Sin", "[", "thetaw", "]"}]}], ")"}], "/", "gamma2"}], 
          ")"}], "^", "2"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
     "COMPRESSED", " ", "PULSE", " ", "SHAPE"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pulse", "[", "t_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"t", "\[Equal]", "0"}], ",", "1", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", " ", 
           RowBox[{"t", "/", "res"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"Pi", " ", 
           RowBox[{"t", "/", "res"}]}], ")"}]}], ")"}], "^", "2"}]}], "]"}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
     "SURFACE", " ", "ROUGHNESS", " ", "DISTRIBUTION"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rough0", "[", 
     RowBox[{"t_", ",", "sigma_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", "Pi"}], "]"}], " ", "sigma"}], ")"}]}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "/", "sigma"}], ")"}], "^", "2"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "CODE", " ", "SPECIFIES", " ", "RECTANGULAR", 
     " ", "WEIGHTING", " ", "ON", " ", "THE", " ", "SYNTHETIC", " ", 
     "APERTURE"}], "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "[", "theta_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4096"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"109.82593388049635`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"329.47780164148907`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"549.1296694024817`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"768.7815371634745`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"988.433404924467`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"1208.0852726854598`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"1427.7371404464525`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"1647.3890082074452`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"1867.040875968438`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2086.6927437294307`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2306.344611490423`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2525.996479251416`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2745.6483470124085`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2965.3002147734014`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"3184.9520825343943`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"3404.6039502953868`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"3624.2558180563797`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"3843.9076858173717`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4063.5595535783646`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4283.211421339358`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4502.86328910035`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4722.515156861343`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4942.167024622336`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"5161.818892383329`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"5381.470760144321`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"5601.1226279053135`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"5820.774495666306`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"6040.426363427299`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"6260.078231188292`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"6479.730098949284`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"6699.381966710277`", " ", "theta"}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"6919.03383447127`", " ", "theta"}], "]"}]}], ")"}], "^", 
      "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
     "IF", " ", "YOU", " ", "WANT", " ", "HAMMING", " ", "WEIGHTING", " ", 
      "ON", " ", "THE", " ", "SYNTHETIC", " ", "APERTURE"}], ",", " ", 
     RowBox[{"USE", " ", "THIS", " ", "CODE", " ", 
      RowBox[{"INSTEAD", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"d", "[", "theta_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "1162.8100000000006`"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1.9988563675214088`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"109.82593388049635`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9897243601271184`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"329.47780164148907`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9715511033307518`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"549.1296694024817`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9445172111230358`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"768.7815371634745`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9088913584702256`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"988.433404924467`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.8650276111015833`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1208.0852726854598`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.8133619066450888`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1427.7371404464525`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.7544077220834402`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1647.3890082074452`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.6887509705891108`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1867.040875968438`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.6170441784560068`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2086.6927437294307`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.5400000000000003`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2306.344611490423`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.4583841348801627`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2525.996479251416`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.37300771823155`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2745.6483470124085`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.2847192592398093`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2965.3002147734014`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.1943962082756865`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3184.9520825343943`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.1029362363990272`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3404.6039502953868`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.0112483139004902`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3624.2558180563797`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.9202436765464241`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3843.9076858173717`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.8308267693084356`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4063.5595535783646`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.7438862575829166`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4283.211421339358`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.6602861952350905`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4502.86328910035`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.5808574372435015`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4722.515156861343`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.5063893822899657`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4942.167024622336`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.4376221273608131`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5161.818892383329`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.3752391123305404`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5381.470760144321`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.31986032762928496`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5601.1226279053135`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.27203615249938984`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5820.774495666306`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.23224188507922494`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6040.426363427299`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.20087301867675067`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6260.078231188292`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.17824131117933972`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6479.730098949284`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.1645716866638307`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6699.381966710277`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.16000000000000003`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6919.03383447127`", " ", "theta"}], "]"}]}]}], ")"}], "^",
        "2"}]}]}], " ", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"WHEN", " ", "GENERATING", " ", "PL", " ", "ECHOES", " ", 
      RowBox[{"SET", ":", " ", 
       RowBox[{"d", "[", "theta_", "]"}]}]}], ":=", " ", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"d", "[", "theta_", "]"}], ":=", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "THE", " ", "TOTAL", " ", "NUMBER", " ", "OF", " ", "BEAMS", " ", "IS", 
       " ", "2", " ", "knrange"}], " ", "+", " ", 
      RowBox[{
      "1.", " ", "THIS", " ", "CODE", " ", "HAS", " ", "BEEN", " ", "SET", 
       " ", "UP", " ", "TO", " ", "DEAL", " ", "WITH", " ", "THE", " ", 
       "AZIMUTHAL", " ", "FFT", " ", "OF", " ", "A", " ", "BURST"}]}], ",", 
     " ", 
     RowBox[{"WHICH", " ", "HAS", " ", "63", " ", 
      RowBox[{"BEAMS", ".", " ", "AS"}], " ", "THIS", " ", "CODE", " ", "IS", 
      " ", "SET", " ", "UP"}], ",", " ", 
     RowBox[{
     "IT", " ", "ASSUMES", " ", "THAT", " ", "THERE", " ", "IS", " ", "AS", 
      " ", "MANY", " ", "FORWARD", " ", "BEAMS", " ", "AS", " ", "BACKWARD", 
      " ", 
      RowBox[{"ONES", ".", " ", "NOTE"}], " ", "THAT", " ", "IF", " ", "YOU", 
      " ", "WISH", " ", "TO", " ", "APPLY", " ", "TO", " ", "A", " ", 
      "STACK"}], ",", " ", 
     RowBox[{
     "WHICH", " ", "IN", " ", "SAR", " ", "MODE", " ", "HAS", " ", "MORE", 
      " ", "BEAMS"}], ",", " ", 
     RowBox[{
     "YOU", " ", "WILL", " ", "NEED", " ", "TO", " ", "ALTER", " ", "NOT", 
      " ", "JUST", " ", "THE", " ", "NUMBER", " ", "OF", " ", "BEAMS"}], ",", 
     " ", 
     RowBox[{
     "BUT", " ", "ALSO", " ", "ACCOUNT", " ", "FOR", " ", "THE", " ", "FACT", 
      " ", "THAT", " ", "THE", " ", "ANGULAR", " ", "SAMPLING", " ", "OF", 
      " ", "A", " ", "STACK", " ", "IS", " ", "NOT", " ", "EQUAL", " ", "TO", 
      " ", "THE", " ", "ANGULAR", " ", "WIDTH", " ", "OF", " ", "A", " ", 
      RowBox[{"BEAM", ".", " ", "HOWEVER"}], " ", "IN", " ", "PRACTICE"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
      "THE", " ", "ANGULAR", " ", "BEHAVIOUR", " ", "IS", " ", "HIGHLY", " ", 
       "SAMPLED", " ", "EVEN", " ", "WITH", " ", "63", " ", 
       RowBox[{"BEAMS", ".", " ", "INCREASING"}], " ", "THE", " ", "NUMBER", 
       " ", "OF", " ", "BEAMS", " ", "DOES", " ", "NOT", " ", "IN", " ", 
       "PRACTICE", " ", "ALTER", " ", "THE", " ", "SHAPE", " ", "OF", " ", 
       "THE", " ", "MULTI"}], "-", 
      RowBox[{"LOOKED", " ", "ECHO"}]}], ",", " ", 
     RowBox[{"SIMPLY", " ", "ITS", " ", 
      RowBox[{"POWER", ".", " ", "IF"}], " ", "YOU", " ", "WISH", " ", "TO", 
      " ", "APPLY", " ", "TO", " ", "STACKS"}], ",", " ", 
     RowBox[{
     "YOU", " ", "NEED", " ", "SIMPLY", " ", "TO", " ", "MULTIPLY", " ", 
      "THE", " ", "POWER", " ", "BY", " ", "THE", " ", "RATIO", " ", "OF", 
      " ", "THE", " ", "NUMBER", " ", "OF", " ", "BEAMS", " ", "IN", " ", 
      "THE", " ", "STACK", " ", "TO", " ", "THE", " ", "NUMBER", " ", "IN", 
      " ", "THIS", " ", "CALCULATION", " ", 
      RowBox[{"(", 
       RowBox[{
       "63", " ", "AS", " ", "IT", " ", "IS", " ", "PRESENTLY", " ", "SET", 
        " ", 
        RowBox[{"UP", "."}]}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"knrange", "=", "31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "IMPULSE", " ", "RESPONSE", " ", "VARIES", " ", "VERY", " ", 
      "RAPIDLY", " ", "WHEN", " ", "THE", " ", "BEAM", " ", "IS", " ", "NEAR",
       " ", "NORMAL", " ", 
      RowBox[{"INCIDENCE", ".", " ", "IN"}], " ", "THE", " ", "CODE", " ", 
      "BELOW"}], ",", " ", 
     RowBox[{
     "THE", " ", "NUMERICAL", " ", "INTEGRATION", " ", "OF", " ", "THESE", 
      " ", "BEAMS", " ", "IS", " ", "DONE", " ", "FOR", " ", "A", " ", 
      "HIGHER", " ", "SAMPLING", " ", "RATE", " ", "THAN", " ", "THE", " ", 
      "OTHER", " ", 
      RowBox[{"BEAMS", ".", " ", "knmid"}], " ", "SPECIFIES", " ", "THE", " ",
       "NUMBER", " ", "OF", " ", "BEAMS", " ", "AROUND", " ", "THE", " ", 
      "NADIR", " ", "BEAM", " ", "FOR", " ", "WHICH", " ", "THIS", " ", 
      "HIGHER", " ", "SAMPLING", " ", "INTERVAL", " ", "IS", " ", 
      RowBox[{"USED", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knmid", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "istart", " ", "SPECIFIES", " ", "THE", " ", "EARLIEST", " ", "DELAY", 
     " ", "TIME", " ", "IN", " ", "ns", " ", "FOR", " ", "WHICH", " ", "THE", 
     " ", "IMPULSE", " ", "RESPONSE", " ", "IS", " ", "EVALUATED"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"istart", "=", 
     RowBox[{"-", "50"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "iend", "  ", "SPECIFIES", " ", "THE", " ", "LATEST", " ", "DELAY", " ", 
     "TIME", " ", "IN", " ", "ns", " ", "FOR", " ", "WHICH", " ", "THE", " ", 
     "IMPULSE", " ", "RESPONSE", " ", "IS", " ", "EVALUATED"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iend", "=", "180"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zetab", "=", 
     RowBox[{"500", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"npoints", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"iend", "-", "istart"}], ")"}], "/", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "nsigma", " ", "SPECIFIES", " ", "THE", " ", "NUMBER", " ", "OF", " ", 
     "VALUES", " ", "OF", " ", "SURFACE", " ", "ROUGHNESS", " ", "IN", " ", 
     "THE", " ", "LOOK", " ", "UP", " ", "TABLES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsigma", "=", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sigmaint", " ", "SPECIFIES", " ", "THE", " ", "SAMPLING", " ", 
     "INTERVAL", " ", "IN", " ", "METRES", " ", "OF", " ", "THE", " ", 
     "SURFACE", " ", "ROUGHNESS", " ", "STANDARD", " ", "DEVIATION", " ", 
     "OF", " ", "THE", " ", "LOOK", " ", "UP", " ", 
     RowBox[{"TABLES", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaint", "=", "0.10"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "WHAT", " ", "FOLLOWS", " ", "NOW", " ", "ARE", " ", "FOUR", " ", 
      "BLOCKS", " ", "OF", " ", "CODE", " ", "THAT", " ", "ARE", " ", 
      "ESSENTIALLY", " ", "SIMILAR"}], ",", " ", 
     RowBox[{
     "AND", " ", "WHICH", " ", "ARE", " ", "SEPARATED", " ", "BY", " ", "THE",
       " ", "WRITING", " ", "OF", " ", "A", " ", "LOOK", " ", "UP", " ", 
      "TABLE", " ", "TO", " ", 
      RowBox[{"DISC", ".", " ", "THESE"}], " ", "FOUR", " ", "BLOCKS", " ", 
      "CORRESPOND", " ", "TO", " ", "THE", " ", "TERMS", " ", "IN", " ", 
      "THE", " ", "SERIES", " ", "REPRESENTATION", " ", "THAT", " ", "GIVES", 
      " ", "AS", " ", "PERTURBATIONS", " ", "THE", " ", "EFFECT", " ", "OF", 
      " ", "PITCH"}], ",", " ", 
     RowBox[{"ROLL", " ", "AND", " ", "HEIGHT", " ", "RESPECTIVELY"}], ",", 
     " ", 
     RowBox[{
     "WITH", " ", "THE", " ", "FIRST", " ", "BLOCK", " ", "PROVIDING", " ", 
      "THE", " ", "UNPERTURBED", " ", "LOOK", " ", "UP", " ", 
      RowBox[{"TABLES", ".", " ", "IN"}], " ", "WHAT", " ", "FOLLOWS"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "ONLY", " ", "THE", " ", "FIRST", " ", "BLOCK", " ", "IS", " ", 
       "COMMENTED"}], ";", " ", 
      RowBox[{"IN", " ", "THE", " ", "REMAINING", " ", "BLOCKS"}]}], ",", " ", 
     RowBox[{"ONLY", " ", "DIFFERENCES", " ", "ARE", " ", 
      RowBox[{
      "IDENTIFIED", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "NOTE"}], " ", "THAT", " ", "THIS", " ", "CODE", " ", "ASSUMES", " ", 
      "THAT", " ", "PITCH", " ", "AND", " ", "ROLL", " ", "ARE", " ", 
      RowBox[{"SMALL", ".", " ", "IF"}], " ", "YOU", " ", "WANT", " ", "THE", 
      " ", "RESULT", " ", "FOR", " ", "A", " ", "LARGE", " ", "PITCH", " ", 
      "OR", " ", "ROLL"}], ",", " ", 
     RowBox[{
     "YOU", " ", "WILL", " ", "NEED", " ", "TO", " ", "INCLUDE", " ", "THEIR",
       " ", "EFFECT", " ", "DIRECTLY", " ", "IN", " ", "THE", " ", 
      "DEFINITION", " ", "OF", " ", "THE", " ", "ANTENNA", " ", "GAIN", " ", 
      "PATTERN", " ", "gainsqr", " ", 
      RowBox[{"ABOVE", ".", " ", "IN"}], " ", "THAT", " ", "CASE"}], ",", " ",
      "HOWEVER", ",", " ", 
     RowBox[{
     "YOU", " ", "ONLY", " ", "NEED", " ", "TO", " ", "RUN", " ", "THE", " ", 
      "FIRST", " ", "BLOCK", " ", "OF", " ", "CODE", " ", 
      RowBox[{"BELOW", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "icre", " ", "EQUALS", " ", "THE", " ", "SAMPLING", " ", "INTERVAL", " ", 
     "IN", " ", "ns", " ", "WITH", " ", "WHICH", " ", "THE", " ", "IMPULSE", 
     " ", "RESPONSE", " ", "IS", " ", "SAMPLED"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"WITHIN", " ", "THIS", " ", "BLOCK"}], ",", " ", 
     RowBox[{
      RowBox[{
      "THERE", " ", "ARE", " ", "THREE", " ", "REPEATED", " ", "SUB"}], "-", 
      RowBox[{"BLOCKS", " ", "OF", " ", "INTEGRATION"}]}], ",", " ", 
     RowBox[{
     "IDENTIFIABLE", " ", "BY", " ", "THE", " ", "CALL", " ", "TO", " ", 
      RowBox[{"Monitor", ".", " ", "THE"}], " ", "FIRST", " ", "SET", " ", 
      "DOES", " ", "THE", " ", "BACKWARD", " ", "LOOKING", " ", "BEAMS"}], 
     ",", " ", 
     RowBox[{
     "THE", " ", "SECOND", " ", "THE", " ", "FORWARD", " ", "LOOKING", " ", 
      "BEAMS"}], ",", " ", 
     RowBox[{"THE", " ", "THIRD", " ", "SET", " ", "THE", " ", "CENTRAL", " ", 
      RowBox[{"BEAMS", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "CALL", " ", "TO", " ", "Monitor", " ", "INDICATES", " ", 
      "THE", " ", "CALCULATION", " ", "OF", " ", "THE", " ", "IMPULSE", " ", 
      "RESPONSE", " ", "AT", " ", "SUCCESSIVE", " ", "INSTANTS", " ", "OF", 
      " ", "ECHO", " ", "DELAY", " ", "TIME", " ", 
      RowBox[{"tor", ".", " ", "THE"}], " ", "INTEGRATION", " ", "IS", " ", 
      "PERFORMED", " ", "AROUND", " ", "A", " ", "RANGE", " ", 
      RowBox[{"RING", ".", " ", "WHEN"}], " ", "tor", " ", "IS", " ", 
      "SMALL"}], ",", " ", 
     RowBox[{
     "THE", " ", "INTEGRAND", " ", "OCCUPIES", " ", "MOST", " ", "OF", " ", 
      "THE", " ", "DOMAIN"}], ",", " ", 
     RowBox[{"BUT", " ", "WHEN", " ", "tor", " ", "IS", " ", "LARGE"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "THE", " ", "INTEGRAND", " ", "IS", " ", "EFFECTIVELY", " ", "NON"}], 
      "-", 
      RowBox[{
      "ZERO", " ", "ONLY", " ", "FOR", " ", "A", " ", "SMALL", " ", "PART", 
       " ", "OF", " ", "THE", " ", 
       RowBox[{"DOMAIN", ".", " ", "THUS"}], " ", "MOST", " ", "OF", " ", 
       "THE", " ", "CODE", " ", "IS", " ", "CONCERNED", " ", "WITH", " ", 
       "IDENTIFYING", " ", "THAT", " ", "PART", " ", "OF", " ", "THE", " ", 
       "DOMAIN", " ", "FOR", " ", "WHICH", " ", "THE", " ", "INTEGRAND", " ", 
       "IS", " ", "EFFECTIVELY", " ", "NON"}], "-", 
      RowBox[{"ZERO", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "AND", " ", "NEXT", " ", "IS", " ", "THE", " ", "ACTUAL", " ", 
                 RowBox[{"INTEGRATION", ":", " ", 
                  RowBox[{
                  "thetaw", " ", "IS", " ", "THE", " ", "INTEGRATION", " ", 
                   "VARIABLE", " ", "EQUAL", " ", "TO", " ", "AN", " ", 
                   "ANGLE", " ", "SPECIFYING", " ", "THE", " ", "POSITION", 
                   " ", "ON", " ", "THE", " ", "RANGE", " ", 
                   RowBox[{"RING", "."}]}]}]}], " ", "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"THIS", " ", "SUMS", " ", "OVER", " ", "THE", " ", "BEAMS"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f0", "=", 
     RowBox[{"Interpolation", "[", "part1sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f0", "=", 
     RowBox[{"Interpolation", "[", "part3sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f0", "=", 
     RowBox[{"Interpolation", "[", "part2sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "SUMS", " ", "THE", " ", "THREE", 
     " ", "SETS", " ", "OF", " ", "BEAMS", " ", "TOGETHER"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "BLOCK", " ", "OF", " ", "CODE", " ", "DOES", 
     " ", "THE", " ", "CONVOLUTION", " ", "WITH", " ", "THE", " ", 
     "COMPRESSED", " ", 
     RowBox[{"PULSE", ".", " ", "IT"}], " ", "USES", " ", "FFT", " ", 
     "METHODS", " ", "TO", " ", "IMPLEMENMT", " ", 
     RowBox[{"THIS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g01", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "NEXT", " ", "BLOCK", " ", "OF", " ", "CODE", " ", "DOES", 
      " ", "THE", " ", "CONVOLUTION", " ", "OVER", " ", "THE", " ", "SURFACE",
       " ", "ROUGHNESS", " ", "DISTRIBUTION"}], ",", " ", 
     RowBox[{
     "FOR", " ", "A", " ", "SEQUENCE", " ", "OF", " ", "VALUES", " ", "OF", 
      " ", "ROUGHNESS", " ", "STANDARD", " ", 
      RowBox[{"DEVIATION", ".", " ", "IT"}], " ", "USES", " ", "FFT", " ", 
      "METHODS", " ", "TO", " ", "IMPLEMENT", " ", "THIS"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g01"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g01", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"FOR", " ", "ZERO", " ", "WAVEHEIGHT"}], ",", 
     RowBox[{
      RowBox[{
      "THE", " ", "ROUGHNESS", " ", "DISTRIBUTION", " ", "IS", " ", "A", " ", 
       "DELTA", " ", 
       RowBox[{"FUNCTION", ".", " ", "THE"}], " ", "NEXT", " ", "LINE", " ", 
       "APPENDS", " ", "TO", " ", "THE", " ", "FRONT", " ", "OF", " ", "THE", 
       " ", "LOOK"}], "-", 
      RowBox[{"UP", " ", "TABLE"}]}], ",", " ", 
     RowBox[{"THE", " ", "ZERO", " ", "WAVEHEIGHT", " ", "RESULT"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes0", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   " ", 
   RowBox[{"(*", 
    RowBox[{"echoes0", ">>", "\"\<SAR Rectangular 63 beams h0\>\""}], "*)"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes0", ">>", "\"\<PL h0\>\""}], " ", 
   RowBox[{"(*", 
    RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "BLOCK", " ", "CALCULATES", " ", "THE", " ", 
     RowBox[{"cos", "^", "2"}], " ", "TERM", " ", "IN", " ", "THE", " ", 
     "PERTURBATIONS", " ", "FOR", " ", "PITCH", " ", "AND", " ", "ROLL"}], 
    "  ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out2", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f21", "=", 
     RowBox[{"Interpolation", "[", "part1sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out2", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f21", "=", 
     RowBox[{"Interpolation", "[", "part3sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out21", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out21", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out21", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f21", "=", 
     RowBox[{"Interpolation", "[", "part2sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g11", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g11"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g11", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes1", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes1", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes1", " ", ">>", "\"\<SAR Rectangular 63 beams h11\>\""}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes1", ">>", "\"\<PL h11\>\""}], 
   RowBox[{"(*", 
    RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"THIS", " ", "NEXT", " ", "BLOCK", " ", "DOES", " ", "THE", " ", 
     RowBox[{"sin", "^", "2"}], " ", "PERTURBATION"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out3", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum31", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out3", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out3", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f22", "=", 
     RowBox[{"Interpolation", "[", "part1sum31", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out3", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out3", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out3", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f22", "=", 
     RowBox[{"Interpolation", "[", "part3sum22", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out22", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out22", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out22", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f22", "=", 
     RowBox[{"Interpolation", "[", "part2sum22", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g12", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g12"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g12", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes2", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes2", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes2", ">>", " ", "\"\<SAR Rectangular 63 beams h12\>\""}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes2", ">>", "\"\<PL h12\>\""}], 
   RowBox[{"(*", 
    RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "FINAL", " ", "BLOCK", " ", "DOES", " ", "THE", " ", 
     "PERTURBATION", " ", "FOR", " ", "ALTITUDE", " ", 
     RowBox[{"VARIATIONS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delh", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", "=", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"h", "+", "delh"}], ")"}], "/", "r"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f4", "=", 
     RowBox[{"Interpolation", "[", "part1sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f4", "=", 
     RowBox[{"Interpolation", "[", "part3sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f4", "=", 
     RowBox[{"Interpolation", "[", "part2sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g03", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g03", "[", 
           RowBox[{
            RowBox[{"istart", " ", "ns"}], "+", 
            RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "-", 
          RowBox[{"g01", "[", 
           RowBox[{
            RowBox[{"istart", " ", "ns"}], "+", 
            RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ")"}], "/", 
        "delh"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zero", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"istart", " ", "ns"}], " ", "+", 
           RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g03", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "-", 
             RowBox[{"g01", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ")"}], "/", 
           "delh"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "zero"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes3", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes3", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes3", ">>", "\"\<SAR Rectangular 63 beams h2\>\""}], "*)"}], 
   
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes3", ">>", "\"\<PL h2\>\""}], 
   RowBox[{"(*", 
    RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.515496104028763*^9, 3.515496149498328*^9}, {
   3.515496351280484*^9, 3.515496351718273*^9}, {3.515496456815542*^9, 
   3.515496527573731*^9}, {3.515496580492104*^9, 3.515496650848164*^9}, {
   3.5154967054097424`*^9, 3.515496825217165*^9}, {3.515496931949819*^9, 
   3.5154969587830048`*^9}, {3.5154970008127193`*^9, 3.515497015914208*^9}, {
   3.515497100106382*^9, 3.515497404668605*^9}, {3.5154978210383883`*^9, 
   3.515497824942484*^9}, {3.515497858375709*^9, 3.515497881234404*^9}, {
   3.515497970155409*^9, 3.51549805879143*^9}, {3.515498125131435*^9, 
   3.515498360366353*^9}, 3.515498775775654*^9, {3.515498879217325*^9, 
   3.515499034709236*^9}, {3.5154990678539877`*^9, 3.515499091264365*^9}, {
   3.5154991249354353`*^9, 3.515499151416088*^9}, 3.515499405539707*^9, {
   3.515501192749812*^9, 3.515501201043469*^9}, {3.5155012616773376`*^9, 
   3.515501280934024*^9}, 3.515501372488554*^9, 3.515501652725111*^9, {
   3.5155016883083076`*^9, 3.5155016972695312`*^9}, {3.515501738902297*^9, 
   3.515501836690682*^9}, {3.5155019474029417`*^9, 3.515501990773386*^9}, {
   3.515502039842441*^9, 3.515502078425764*^9}, {3.515502112186919*^9, 
   3.515502156003956*^9}, {3.515502194014173*^9, 3.515502489599432*^9}, {
   3.515655792968363*^9, 3.515655897963221*^9}, {3.515655934210167*^9, 
   3.515655946994842*^9}, {3.515656014194841*^9, 3.5156560220584583`*^9}, {
   3.515656083550305*^9, 3.515656110034143*^9}, 3.5156561546786203`*^9, {
   3.515656292951713*^9, 3.5156563879913807`*^9}, {3.5156564219995937`*^9, 
   3.515656437061945*^9}, 3.5156565774619417`*^9, {3.515656609396636*^9, 
   3.515656667968286*^9}, {3.515656703041975*^9, 3.5156567194237623`*^9}, 
   3.515656766124291*^9, {3.515656836815136*^9, 3.515656902488792*^9}, {
   3.515656932546947*^9, 3.515656948299868*^9}, {3.515656999287771*^9, 
   3.515657067107432*^9}, {3.515657109404316*^9, 3.51565718792299*^9}, {
   3.515657332282896*^9, 3.51565743651686*^9}, {3.51565753431513*^9, 
   3.515657832167728*^9}, {3.515657889055279*^9, 3.515657937240484*^9}, {
   3.515657968324638*^9, 3.515658091798609*^9}, {3.5156581423774767`*^9, 
   3.5156582044306173`*^9}, {3.5156584433325644`*^9, 
   3.5156585806863823`*^9}, {3.5156591129551983`*^9, 3.515659130423605*^9}, {
   3.515659388367186*^9, 3.515659412352222*^9}, {3.515659450375848*^9, 
   3.515659532592469*^9}, 3.515659603366726*^9, {3.515659792202013*^9, 
   3.515659900327581*^9}, {3.515659952731409*^9, 3.515659989105094*^9}, 
   3.515660056007991*^9, {3.515660093246912*^9, 3.515660166842596*^9}, {
   3.515660217869231*^9, 3.515660218829144*^9}, {3.5156602500834417`*^9, 
   3.515660376963245*^9}, {3.515660411162406*^9, 3.515660470841935*^9}, {
   3.515660525758458*^9, 3.51566053114184*^9}, {3.515660582503138*^9, 
   3.515660607911036*^9}, {3.515661152740817*^9, 3.515661164210013*^9}, {
   3.515661205988532*^9, 3.515661227934959*^9}, 3.515661259856578*^9, 
   3.5156613436427813`*^9, {3.5156626122710733`*^9, 3.515662622921948*^9}, {
   3.515662654244792*^9, 3.51566269923796*^9}, {3.515662764948962*^9, 
   3.515662849368432*^9}, {3.515663359607514*^9, 3.515663376867951*^9}, {
   3.515663422323456*^9, 3.5156634624457493`*^9}, {3.5156635876765003`*^9, 
   3.515663589021448*^9}, 3.515663627269321*^9, {3.515663661007909*^9, 
   3.5156637394159527`*^9}, 3.5156637930795183`*^9, {3.5156639035881767`*^9, 
   3.515663921044973*^9}, {3.515663957290153*^9, 3.515663963289465*^9}, {
   3.515664017992876*^9, 3.5156640193410397`*^9}, {3.5156641202180977`*^9, 
   3.515664178164987*^9}, 3.5156643162691183`*^9, {3.515665660035932*^9, 
   3.515665663035152*^9}, {3.515666152631455*^9, 3.515666161060845*^9}, {
   3.515666458167102*^9, 3.5156665016283693`*^9}, {3.515666538833308*^9, 
   3.515666561038364*^9}, {3.5156666137819242`*^9, 3.515666664674678*^9}, {
   3.5156669060468187`*^9, 3.515666971295648*^9}, 3.515667003258651*^9, {
   3.515667174740018*^9, 3.515667179052874*^9}, {3.515667348981717*^9, 
   3.515667357764979*^9}, 3.515667422851121*^9, {3.515667495027136*^9, 
   3.5156674985708027`*^9}, {3.5156676472788897`*^9, 3.515667649448433*^9}, {
   3.515667962823824*^9, 3.515667997097547*^9}, {3.515668040185996*^9, 
   3.515668076764433*^9}, {3.515668151507264*^9, 3.515668153117828*^9}, {
   3.515669338191284*^9, 3.515669350892942*^9}, {3.5156700208590603`*^9, 
   3.5156700956287947`*^9}, {3.5156701439240923`*^9, 3.515670173741852*^9}, {
   3.5156702462329903`*^9, 3.51567024725534*^9}, 3.515670469593704*^9, {
   3.515670619451536*^9, 3.515670620728855*^9}, {3.51567087356114*^9, 
   3.515670874680497*^9}, 3.51567114052001*^9, 3.515671454406889*^9, 
   3.515671805063664*^9, 3.5156718988453197`*^9, 3.51567461130079*^9, {
   3.5156746747374697`*^9, 3.515674680824589*^9}, {3.515685240646447*^9, 
   3.515685258263543*^9}, 3.515685306917157*^9, 3.515685423446417*^9, {
   3.515736726996923*^9, 3.515736744008194*^9}, {3.515736882202867*^9, 
   3.5157368858668137`*^9}, {3.5157369453684683`*^9, 3.515737002630946*^9}, {
   3.515737340856639*^9, 3.515737380833439*^9}, {3.5157377806541367`*^9, 
   3.515737803697007*^9}, {3.515740376956777*^9, 3.515740391377859*^9}, 
   3.515740526308412*^9, {3.51574087485261*^9, 3.515740909962079*^9}, {
   3.515741006626918*^9, 3.515741037223425*^9}, {3.5157455720957003`*^9, 
   3.515745575806095*^9}, {3.5157456059116297`*^9, 3.5157456224705477`*^9}, {
   3.5157457025222178`*^9, 3.515745709517146*^9}, 3.515745819995215*^9, 
   3.515746128915063*^9, 3.51574622178929*^9, 3.5157468532102203`*^9, 
   3.515747192527976*^9, {3.515747591406253*^9, 3.515747608614398*^9}, {
   3.515759718301772*^9, 3.515759729693933*^9}, {3.515759988089261*^9, 
   3.515759994569558*^9}, {3.515760311606072*^9, 3.515760322584004*^9}, {
   3.515760440309575*^9, 3.515760531529414*^9}, {3.51576066475184*^9, 
   3.515760672736753*^9}, {3.515760880768643*^9, 3.515760881524618*^9}, {
   3.515760915096724*^9, 3.51576092445934*^9}, {3.515761697053841*^9, 
   3.515761698108527*^9}, 3.515761920143606*^9, 3.5157622511858063`*^9, {
   3.5157625027600737`*^9, 3.515762503405876*^9}, {3.5184291508915567`*^9, 
   3.518429160448699*^9}, {3.51861327560638*^9, 3.518613328891626*^9}, 
   3.51861844245011*^9, {3.5193850865449038`*^9, 3.519385105259985*^9}, 
   3.519385277606029*^9, 3.519391468585589*^9, {3.5210933798123283`*^9, 
   3.5210933962479057`*^9}, {3.521093453633881*^9, 3.52109349444317*^9}, {
   3.5210946588402853`*^9, 3.521094700981801*^9}, 3.521094739095024*^9, {
   3.5210948679222107`*^9, 3.521094888669132*^9}, 3.5210961588181143`*^9, {
   3.5210967185261927`*^9, 3.521096733013101*^9}, {3.521096835776966*^9, 
   3.5210969316232843`*^9}, {3.52109704867945*^9, 3.521097196309169*^9}, {
   3.521097230676124*^9, 3.521097258505887*^9}, {3.521097855434773*^9, 
   3.521097860060626*^9}, {3.521097895263051*^9, 3.521097907328603*^9}, {
   3.521097968072967*^9, 3.52109805327995*^9}, {3.521098141209262*^9, 
   3.521098145986524*^9}, {3.5210983193553953`*^9, 3.521098322177978*^9}, {
   3.521098353072262*^9, 3.521098357807642*^9}, {3.521099509663163*^9, 
   3.521099517703116*^9}, {3.521099547727479*^9, 3.521099674657055*^9}, {
   3.521101822347871*^9, 3.5211019183668833`*^9}, {3.521102235942152*^9, 
   3.521102272666346*^9}, 3.521102485744646*^9, 3.521102530374342*^9, 
   3.521102828879282*^9, 3.521105605686521*^9, {3.52118100844051*^9, 
   3.52118103494169*^9}, {3.521181087456065*^9, 3.5211811048677998`*^9}, {
   3.521192785343821*^9, 3.521192798125957*^9}, {3.521203179303115*^9, 
   3.521203197972115*^9}, {3.521205277721571*^9, 3.521205282133932*^9}, {
   3.5212152370310287`*^9, 3.521215261470613*^9}, {3.521215325628908*^9, 
   3.521215364022368*^9}, {3.521218536636606*^9, 3.5212185560912247`*^9}, {
   3.521220866597843*^9, 3.521220892028755*^9}, {3.521277592931569*^9, 
   3.521277599547017*^9}, {3.52334869094523*^9, 3.5233486945522633`*^9}, 
   3.5284534501881723`*^9, 3.5284535288093853`*^9, {3.528453573485911*^9, 
   3.528453661343608*^9}, {3.5284537047727413`*^9, 3.528453736177889*^9}, {
   3.5284537688803463`*^9, 3.528453802077166*^9}, {3.5284538458182*^9, 
   3.528453884041647*^9}, {3.528459127115532*^9, 3.528459148612048*^9}, {
   3.528459191909628*^9, 3.528459306687847*^9}, {3.5284593445142183`*^9, 
   3.528459419719838*^9}, 3.528460339017084*^9, {3.528460369924755*^9, 
   3.5284604003531103`*^9}, {3.528462185278585*^9, 3.528462186059991*^9}, {
   3.5284622162728443`*^9, 3.528462287600769*^9}, {3.5284629041295137`*^9, 
   3.5284630213426332`*^9}, {3.528463230931856*^9, 3.528463395318369*^9}, {
   3.5284634434261103`*^9, 3.528463452647113*^9}, {3.5284634888234177`*^9, 
   3.52846349191042*^9}, 3.5284635357815733`*^9, {3.528463727215082*^9, 
   3.528463731733924*^9}, {3.528463786113894*^9, 3.528463799443843*^9}, {
   3.528466271763154*^9, 3.528466302134081*^9}, {3.52846637139144*^9, 
   3.528466504327694*^9}, {3.528467531763872*^9, 3.52846756352661*^9}, {
   3.528467859566617*^9, 3.52846786030963*^9}, {3.5284907525206833`*^9, 
   3.528490784394211*^9}, {3.528609082767376*^9, 3.528609089599114*^9}, 
   3.5286102107420893`*^9, {3.5286105118123493`*^9, 3.528610517886154*^9}, 
   3.528611524710408*^9, {3.528611565055792*^9, 3.528611658711721*^9}, {
   3.5286117495314302`*^9, 3.528611753572937*^9}, {3.52861263837055*^9, 
   3.528612647947386*^9}, {3.528613590744814*^9, 3.5286136114487057`*^9}, {
   3.528615217026223*^9, 3.528615245803746*^9}, {3.528615281409237*^9, 
   3.528615304329337*^9}, {3.5286156267573423`*^9, 3.528615643535913*^9}, {
   3.52861656813097*^9, 3.528616574022826*^9}, {3.528616715212943*^9, 
   3.528616715745164*^9}, 3.5286168442137403`*^9, 3.528619077768298*^9, {
   3.5286192528741817`*^9, 3.528619308270259*^9}, {3.52861947445816*^9, 
   3.528619553969985*^9}, {3.528619846451778*^9, 3.528619851010841*^9}, {
   3.5286203707363358`*^9, 3.52862039446984*^9}, {3.5286209799640102`*^9, 
   3.5286209969420843`*^9}, {3.5286214118276167`*^9, 3.528621432639242*^9}, {
   3.52862191484402*^9, 3.528621939228897*^9}, {3.528622285388783*^9, 
   3.528622302997924*^9}, {3.528622668086989*^9, 3.528622672626255*^9}, {
   3.5286257318905354`*^9, 3.528625905260508*^9}, {3.5286260431474857`*^9, 
   3.5286260472268763`*^9}, 3.528626198443654*^9, {3.5286267124788303`*^9, 
   3.52862671309578*^9}, {3.5286269924433823`*^9, 3.528627006008219*^9}, {
   3.528627242746305*^9, 3.528627249387505*^9}, {3.528627504904559*^9, 
   3.528627505838077*^9}, {3.528644709830933*^9, 3.528644719903716*^9}, 
   3.5286449648489723`*^9, {3.528645355673154*^9, 3.528645403546397*^9}, 
   3.5286455138326607`*^9, {3.5286456945789957`*^9, 3.528645708373333*^9}, {
   3.528645865676517*^9, 3.528645875681754*^9}, {3.528646524277804*^9, 
   3.528646599580608*^9}, {3.528650608275622*^9, 3.5286506101258173`*^9}, {
   3.528651622061694*^9, 3.528651627481578*^9}, {3.528651716401659*^9, 
   3.5286517235813837`*^9}, {3.528651754265719*^9, 3.528651757672708*^9}, {
   3.52869311217583*^9, 3.5286931232296877`*^9}, {3.528693176145794*^9, 
   3.528693179882845*^9}, {3.528693213880589*^9, 3.5286932257948303`*^9}, {
   3.528697192527348*^9, 3.528697207179769*^9}, {3.528697283144153*^9, 
   3.528697340231691*^9}, {3.528697406942621*^9, 3.52869749079469*^9}, 
   3.5287007826373158`*^9, {3.528701982279889*^9, 3.528702001465667*^9}, {
   3.528702044652479*^9, 3.5287020898984613`*^9}, {3.52870274650109*^9, 
   3.528702796600779*^9}, {3.528702921929538*^9, 3.528702928959017*^9}, {
   3.5287029709892817`*^9, 3.528703023365521*^9}, {3.5287031410608807`*^9, 
   3.528703200686873*^9}, 3.528703549685376*^9, {3.528703674139077*^9, 
   3.528703768681168*^9}, {3.528704127829911*^9, 3.528704221662591*^9}, 
   3.528704282604609*^9, {3.5287043170766287`*^9, 3.52870439470756*^9}, 
   3.5287044752445307`*^9, {3.528704528059586*^9, 3.5287045618525467`*^9}, {
   3.528704616864245*^9, 3.52870464630967*^9}, {3.52870471720126*^9, 
   3.5287047825147533`*^9}, {3.528704823599968*^9, 3.528704842912033*^9}, {
   3.528705184842555*^9, 3.5287051881808577`*^9}, {3.528706659997571*^9, 
   3.528706665114995*^9}, {3.528710757115138*^9, 3.528710818431251*^9}, 
   3.528712866321169*^9, {3.52878250574104*^9, 3.52878252392083*^9}, {
   3.528782588338345*^9, 3.528782793976869*^9}, {3.528782850908862*^9, 
   3.5287829047160673`*^9}, {3.528782951629311*^9, 3.528782959736553*^9}, {
   3.528783077968442*^9, 3.528783078961878*^9}, {3.5287833494016447`*^9, 
   3.528783511433688*^9}, {3.528783542117281*^9, 3.528783608284964*^9}, {
   3.528783647948126*^9, 3.5287837939842653`*^9}, 3.528784575453944*^9, {
   3.5287849150698967`*^9, 3.528784943943536*^9}, {3.528819875601866*^9, 
   3.528819898997925*^9}, {3.5291494558007812`*^9, 3.5291494677426033`*^9}, {
   3.5291498130669622`*^9, 3.529149816334527*^9}, {3.52914993493475*^9, 
   3.5291499380976877`*^9}, {3.529150887622643*^9, 3.529150891809832*^9}, {
   3.529151250347857*^9, 3.529151255299712*^9}, {3.529151365604075*^9, 
   3.529151369447962*^9}, {3.5291514493439627`*^9, 3.5291514705340347`*^9}, {
   3.5291515721283827`*^9, 3.5291515879500217`*^9}, {3.529151930318048*^9, 
   3.529151994635723*^9}, {3.52915208228515*^9, 3.529152111603569*^9}, {
   3.529152160120593*^9, 3.529152287569373*^9}, {3.529154052833702*^9, 
   3.5291541674263277`*^9}, {3.52915425656667*^9, 3.529154274375388*^9}, {
   3.529154449630601*^9, 3.5291544581898746`*^9}, {3.52915454570903*^9, 
   3.529154555308913*^9}, {3.5291546624425993`*^9, 3.5291546698765097`*^9}, {
   3.529155139610425*^9, 3.529155176606374*^9}, {3.529155661467154*^9, 
   3.529155684779582*^9}, {3.529156039235121*^9, 3.529156067192027*^9}, {
   3.5293072536857367`*^9, 3.529307298137765*^9}, {3.529312814495343*^9, 
   3.529312821786593*^9}, {3.529318367330422*^9, 3.529318379891724*^9}, {
   3.5293184388010473`*^9, 3.529318653851577*^9}, 3.529318687833156*^9, {
   3.529320948437397*^9, 3.5293209706271973`*^9}, {3.529326404397769*^9, 
   3.529326407188408*^9}, {3.5293264421207848`*^9, 3.529326539246595*^9}, {
   3.529327412758999*^9, 3.529327437276369*^9}, {3.529327498518293*^9, 
   3.529327530383168*^9}, {3.529327595527802*^9, 3.529327671166376*^9}, {
   3.529327710733425*^9, 3.529327906515565*^9}, {3.529327956208671*^9, 
   3.529328157694911*^9}, 3.529331750541798*^9, {3.529331790985186*^9, 
   3.529331815171466*^9}, {3.529408273239997*^9, 3.529408343336643*^9}, 
   3.52948490145466*^9, 3.529586349659568*^9, {3.529593561826153*^9, 
   3.529593631330681*^9}, {3.5297618601861973`*^9, 3.52976196182626*^9}, {
   3.59004957444214*^9, 3.590049674320869*^9}, {3.5900497817815237`*^9, 
   3.590050089319837*^9}, {3.590050177437586*^9, 3.590050276741997*^9}, 
   3.5900503280521297`*^9, {3.5900503604340477`*^9, 3.590050742325436*^9}, {
   3.590050856397376*^9, 3.590051208442842*^9}, {3.590051244853063*^9, 
   3.590051304263579*^9}, {3.590051342340474*^9, 3.590051844066038*^9}, {
   3.5900518772548428`*^9, 3.590052087121571*^9}, {3.590052181022422*^9, 
   3.590052229564169*^9}, {3.590052261042511*^9, 3.590052408365066*^9}, {
   3.590052487025482*^9, 3.590052602183083*^9}, {3.590052654894951*^9, 
   3.5900527050304203`*^9}, {3.590052765763001*^9, 3.590053176272037*^9}, {
   3.590053219706134*^9, 3.590053333709778*^9}, {3.590077873521262*^9, 
   3.5900778748401413`*^9}, {3.590078125610531*^9, 3.590078130641815*^9}, {
   3.590137454109568*^9, 3.5901375251538877`*^9}, {3.5902230957410297`*^9, 
   3.590223316601674*^9}, {3.590223568910942*^9, 3.590223722141643*^9}, 
   3.590223933030911*^9, {3.590224002163494*^9, 3.590224195513894*^9}, {
   3.590224244289555*^9, 3.5902242463783703`*^9}, {3.5902244386770687`*^9, 
   3.590224497381166*^9}, {3.590224543299828*^9, 3.590224705745573*^9}, {
   3.590224744780533*^9, 3.590225083936329*^9}, {3.590225145793448*^9, 
   3.590225391353436*^9}, {3.590225423563868*^9, 3.590225494614128*^9}, {
   3.590499998358035*^9, 3.590500005854748*^9}, {3.590500062281437*^9, 
   3.590500094390738*^9}, {3.5905001769041843`*^9, 3.590500196210487*^9}, 
   3.590500270562593*^9, {3.590500334183487*^9, 3.59050034906425*^9}, {
   3.590500659651369*^9, 3.590500700527958*^9}, {3.590500760743272*^9, 
   3.590500794581601*^9}, {3.5905008424195547`*^9, 3.590500899524432*^9}, {
   3.590500976573674*^9, 3.590501040887536*^9}, {3.59050113089885*^9, 
   3.590501222309634*^9}, 3.5905012611600513`*^9, 3.590501292097145*^9, {
   3.590501322627693*^9, 3.590501330585494*^9}, {3.5906000252546377`*^9, 
   3.5906000541859426`*^9}, {3.590601269965214*^9, 3.590601270254654*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Description", ":", "\[IndentingNewLine]", " ", 
    RowBox[{
    "THIS", " ", "CODE", " ", "PROVIDES", " ", "THE", " ", "MODEL", " ", "OF",
      " ", "THE", " ", "SARIN"}]}], ",", " ", 
   RowBox[{
    RowBox[{"SAR", " ", "AND", " ", "PULSE"}], "-", 
    RowBox[{"LIMITED", " ", 
     RowBox[{"ECHOES", ".", " ", "NOTE"}], " ", "THAT", " ", "THE", " ", 
     "ACTUAL", " ", "MODELS", " ", "\[IndentingNewLine]", "DEPEND", " ", "ON",
      " ", "THE", " ", "LOOK", " ", "UP", " ", "TABLES", " ", "THAT", " ", 
     "ARE", " ", "READ", " ", "IN", " ", "AT", " ", "THE", " ", 
     RowBox[{"START", ".", " ", "THESE"}], " ", "ARE", " ", "NUMERICALLY", 
     " ", "CALCULATED", " ", "USING", "\[IndentingNewLine]", "THE", " ", 
     "SAME", " ", "VALUES", " ", "OF", " ", "THE", " ", "CONSTANTS", " ", 
     "AS", " ", "APPEAR", " ", "IN", " ", "THIS", " ", 
     RowBox[{"FILE", ".", " ", "IF"}], " ", "YOU", " ", "CHANGE", " ", "THE", 
     " ", "CONSTANTS", " ", "IN", " ", "THIS", " ", "FILE"}]}], ",", 
   "                ", 
   RowBox[{
   "WITHOUT", " ", "HAVING", " ", "RERUN", " ", "THE", " ", "INTEGRATION", 
    " ", "PROGRAM", " ", "THAT", " ", "GENERATES", " ", "THE", " ", "LOOK", 
    " ", "UP", " ", "TABLES", " ", "WITH", " ", "THE", " ", "SAME", " ", 
    "CHANGES"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"THE", " ", "RESULTS", " ", "WILL", " ", "BE", " ", 
    RowBox[{"INCORRECT", ".", " ", "IN"}], " ", "A", " ", "MORE", " ", "USER",
     " ", "FRIENDLY", " ", "VERSION"}], ",", " ", 
   RowBox[{
   "THE", " ", "CONSTANTS", " ", "WOULD", " ", "ALSO", " ", "BE", " ", 
    "PASSED", " ", "BY", "\[IndentingNewLine]", 
    RowBox[{"FILE", ".", " ", "I"}], " ", "AGREE", " ", "THAT", " ", "THIS", 
    " ", "PRESENT", " ", "WAY"}], ",", " ", 
   RowBox[{
    RowBox[{"ISN", "'"}], "T", " ", "A", " ", "VERY", " ", "SECURE", " ", 
    "WAY", " ", "TO", " ", "DO", " ", 
    RowBox[{"THINGS", "."}]}]}], " ", "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{
  3.590225605811021*^9, {3.590225662468236*^9, 3.590225798669176*^9}, {
   3.590501374291164*^9, 3.5905013814373837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"WARNING", ":", " ", 
    RowBox[{"USER", " ", "MODIFIABLE", " ", 
     RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}]}], "********)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"echoes0", "=", 
     RowBox[{"<<", "\"\<SAR Rectangular 63 beams h0\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes1", "=", 
     RowBox[{"<<", "\"\<SAR Rectangular 63 beams h11\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes2", "=", 
     RowBox[{"<<", "\"\<SAR Rectangular 63 beams h12\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes3", "=", 
     RowBox[{"<<", "\"\<SAR Rectangular 63 beams h2\>\""}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes0", "=", 
     RowBox[{"<<", "\"\<PL h0\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes1", " ", "=", 
     RowBox[{"<<", "\"\<PL h11\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes2", "=", 
     RowBox[{"<<", " ", "\"\<PL h12\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes3", "=", 
     RowBox[{"<<", "\"\<PL h2\>\""}]}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "DO", " ", "NOT", " ", "CHANGE", " ", "THE", " ", "VALUE", " ", "OF", " ",
      "THESE", " ", "CONSTANTS", " ", "OR", " ", "NAMES", " ", "OF", " ", 
     "THESE", " ", 
     RowBox[{"FUNCTIONS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"istart", "=", 
     RowBox[{"-", "50"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iend", "=", "140"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"npoints", "=", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"iend", "-", "istart"}], ")"}], "/", "0.1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsigma", "=", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", "=", 
     RowBox[{"c", "/", 
      RowBox[{"(", " ", 
       RowBox[{"13.575", " ", 
        RowBox[{"10", "^", "9"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k0", "=", 
     RowBox[{"2", " ", 
      RowBox[{"Pi", "/", "lambda"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"del", "=", 
     RowBox[{"7200.", "/", "18182"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta", "=", 
     RowBox[{"Pi", "/", 
      RowBox[{"(", 
       RowBox[{"64", " ", "k0", " ", "del"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaint", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2.99792458", " ", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "720000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "6380000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammabar", "=", "0.012215368000378016`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammahat", "=", "0.0381925958945466`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma1", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "+", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma2", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h0approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes0", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h11approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h12approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sar51echoapproxv3", "[", 
     RowBox[{
     "sigma_", ",", "tor_", ",", "pitch_", ",", "roll_", ",", "delh_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pitch", "/", "gamma1"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roll", "/", "gamma2"}], ")"}], "^", "2"}]}], ")"}]}]}], 
       ")"}], 
      RowBox[{"h0approx", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pitch", "^", "2"}], "/", 
           RowBox[{"gamma1", "^", "4"}]}], ")"}], 
         RowBox[{"h11approx", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"roll", "^", "2"}], "/", 
           RowBox[{"gamma2", "^", "4"}]}], ")"}], " ", 
         RowBox[{"h12approx", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}]}], 
       ")"}]}], "+", 
     RowBox[{"delh", " ", 
      RowBox[{"h2approx", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f0approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes0", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f11approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f12approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f2approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoapproxv2", "[", 
     RowBox[{
     "sigma_", ",", "tor_", ",", "pitch_", ",", "roll_", ",", "delh_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pitch", "/", "gamma1"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roll", "/", "gamma2"}], ")"}], "^", "2"}]}], ")"}]}]}], 
       ")"}], " ", 
      RowBox[{"f0approx", "[", 
       RowBox[{"sigma", ",", "tor"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"c", " ", 
        RowBox[{"tor", "/", 
         RowBox[{"(", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"h", "/", "r"}]}], ")"}]}], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pitch", "^", "2"}], "/", 
           RowBox[{"gamma1", "^", "4"}]}], ")"}], 
         RowBox[{"f11approx", "[", 
          RowBox[{"sigma", ",", "tor"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"roll", "^", "2"}], "/", 
           RowBox[{"gamma2", "^", "4"}]}], ")"}], " ", 
         RowBox[{"f12approx", "[", 
          RowBox[{"sigma", ",", "tor"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"delh", " ", 
      RowBox[{"f2approx", "[", 
       RowBox[{"sigma", ",", "tor"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "END", " ", "OF", " ", "CONSTANTS", " ", "AND", " ", "FUNCTIONS", " ", 
     "BLOCK"}], "  ", "*)"}], " ", "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "CODE", " ", "ILLSTRATES", " ", "THE", " ", "USE", " ", "OF",
      " ", "THE", " ", "MODELS"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pitch", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"roll", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delh", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"SOME", " ", "SAR", " ", "MODE", " ", "EXAMPLES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "roll", ",", "delh"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"0.3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", "pitch", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"0.3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{
         RowBox[{"0.5", "i"}], ",", " ", "tor", ",", "pitch", ",", "roll", 
         ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"0.3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"0.", ",", " ", "tor", ",", "pitch", ",", "roll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], " ", "20000"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"0.3", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"SOME", " ", "PULSE"}], "-", 
     RowBox[{"LIMITED", " ", "EXAMPLES"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "roll", ",", "delh"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", "pitch", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{
         RowBox[{"0.5", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", " ", "tor", ",", "pitch", 
         ",", "roll", ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"0.", ",", " ", "tor", ",", "pitch", ",", "roll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], " ", "20000"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.590225573482934*^9, 3.590225575670396*^9}, 
   3.590225680165053*^9, {3.5902257918988657`*^9, 3.590225913290474*^9}, {
   3.590226012810783*^9, 3.590226037364781*^9}, {3.590500352850472*^9, 
   3.5905003559898453`*^9}, 3.5905013913444443`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "10", ",", "8", ",", "9", ",", "0", ",", 
   "43.44577`8.39052247616594"}], "}"}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.5902260434488573`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwdlnc0F/73x42yR/ZM1vudItmz15W919vMikglIyWyIpKRkGigkiQhyizy
KtmSndKHJGWvjLeR8fP9/XXP49x77rn3Ps+594qc8iOdpqKgoPCnpKD4ny3X
bm5ICj6Nw0cIo6w0GJmOcCp3XTyNxUbnzJW5MRq7euoFm/dpbE9N3+pAxIiv
eutWmstpbBejGpWuh9FVGQW7DO3TmPJM3tzADYwM9j+ZfMZ8Gh+afeFaTvMe
/UcOYal94oGvDWcwYaoPiKpA2n661R3bdAgMqtPXIboS2pTMj+74rv3GsUD2
OsRS/rPZuMYdj02P+lQJ1CEBnKpcVOSOvbrEM82k65BCD5nbJ9kd74xp5PRY
1SHPDfxlztodH5+Zeq+bXYfajMytFodP4WyVO/KxGh9R6rSf2fqKG17iU0qc
zqpHWmwhKYR5N0x7qUWi83k9+qt0vcdywg0XHzstX1tajyyi7tsWfHfDCUXa
IW9a6hELX52L4/tdf0Hn18Mr9Shej92vNm6X5Wmi580bUOST8uRrAm7YWSxL
YIOxEfnarXfRa7piqiPfkmxvN6FShnxHezVXHOSxLez0sAmt1tqO5cnvsr3N
6KkXTShSvPyfNtEVe1HyRAbUNaHUv77Eq4yu2Fb1/oeiv03Il6d19XfhSexT
ea4wh9SMKCIfm1Z+ccFnP9fVVPG2oPixzVNWLS7YxlBazpXQgthNHa4sVLvg
QPlEMQ65FiTOz/X0cLYLnts7OvjAuAUZliesPfJywb0adrYKES0odeLy09gd
513hvI9PTrQggqXJuv0hZ9w2Zx/6uKUVxd348KCX3xlfiWtWCf3WimZqFNTM
mJyxxCv9Sr+JVlRK3B+qPe+EO6v+S8ila0OwObt5pMIJ0zlGPTcwakP2z5Mp
qDWdcPUj8nBHTxtK3OqhfWnviF/eqjej+vcJzcvp5x80csQ51+1ts1jaEels
jUGOuiPeN1ggYC/ajvh6n8bfE3LENENsxopG7SgvP4Ax6rcDPpAv+DMusx29
t+JmtbvggENXiI7PdT6jxRcnuCnjTuAa5pqSuNcdKF9Y5tOlkBP4x6GKyZXm
DuR8jyZyzPsE9kjT+X79RwdquV42+cnyBD4posBIz9SJHp1krr0rcAIvrX8r
KTvbiYy56tylSuyx7oRk1UXOLkSReI/38RN7XEsXr98u3IUqqXw/s6XZ4xs/
sr+qHulCogv8yqtX7DGjGe26pV4XWmsLYPioZY9/BsZ+Dg/uQrmREq/t+u2w
NaWKJM3vLuSwun26rcUOtx5wEv74twux+n7hRzV2ePY+L929nS4U4hh1XTTb
Dpfm2krfEuhGlkqDdrPn7HBWVCNTpXU32p5O3o7assWV399lObZ3Izu7VeNi
cVusGUslFN7Xg8ayft/c5rLFsjM5DXi8BwX+6v5kRmuLB9wCV2X+9aC7PkXG
85M2+IxIzJ4C0V7UF+1mLFNigyu/jqdQB/Qiy1efjEpVbfBDkeDFZeE+9HPl
TQKVpA0OvN0se1e5D11Qz2sjCdrgj6kU4pfM+lBKU6TR0rY1rpDQjvoV1oc6
BhWNFBqs8aGXEwrPB/uQMX22YaWZNc44XLugkf8FfTe7FU9z3BpTKM1Z/fj4
BXmlhbTaylrj0F+vhz8MfUEJB2wMVzms8ZvFTR9rzn7UoshgqDJghVXfRTbW
X+9HuqcCDKrdrfAVnmgVzUtfkUaNgT6+QsICZoK/um8OoDWBCF4rLxJOoLJ4
lV4ygErDKibHHUmY1eu5XHnvACKCaCKbBglf0C0+TLP/O2Kp+9flsZeEV/fq
N4uUf0c/moodGFMtcVV92Uuvlf/Q/YN/JLOjLXFDv9nX4AODiBQnsKVw2RJP
n+ER3DAcRE2GcY9d7C2x7d1aZ+vsQfSy3e33ayFLTCMuE/aQNITCejh97Qst
8FRFtCFV5w+kJG+sMZtlgf/Kd9fOUgyjhTvX9kUlWeCD4Rr2nvLDyMNmrrTQ
3wJfLVr9TpMxjIy/Na9uK1vgw/T3fwop/0SK71aojOPN8cb2v1gZ/hGUH37q
WYC3OVbj/UxgVhlBghqd+o/MzTGVws0mTdsRtOdjfuJfLnMc3tc+U3VnBPU1
O3LfzzHDP72oczfYf6GLvXWH/tSYYvWxZp4NsVGUwLO0vJ1tijPNyKrXdEfR
U0fxD7w3TLFk6u15zzOjqG/0hq2JhSm2JRfcIhWNIqVl4+iy3yb4dl/jnja1
3+gfZ//gNWYTrNQ3d1j1/B/EeYI2P3PRGJ+4llkge+cPknqocqniqzG2/OK2
P7PmD3IhZNJPPjHG//SrixuZx9AHRVclCyVjbEGeqsysGkPXbaeShU4aYf6m
Iq2zohMoK0PAUUXHCHtxSY/SkCZQxQ8TIumQEabRrLCSjJpAY54l72KWDLHE
5+hYxt8TyCAoYHIm1hAzOJ0RsC6eRMz3t7VqXhlg4feVlIEu04g4eJTlS7oB
3nfLU0bu3jQCYbeBuRADvEomWiV3TaML+fV+oroG2Ib2pIGC7gzqeROXFT+g
j28IsYWdUppFdwfYyXZU+jjJa2lYSW0eudf4f5X6o4cjS9q0PkbPI5mHXW8o
W/Rw0ofJHoWOedTqmhRaeEsPrx10oZ2TW0Cb4/SUO7x6OPabzQu9rgXkRqZg
yjuqiyv0mQ8pii0i6W8nZ0PYdfHq1c3SDfNFtPEWd5iv6GBR9W/c5uGLKC08
7PZ6tQ7WHFxaKhxYRE171rhN9XQwHTv74vkHS0iKY15k2UkbZ3TejelUWkHr
y6bUrRra+M2nb0wBPiuoqb/o90NRbdwvftmhNXcFnczweq4/oYWdU8cNU7jI
KFVkTCrzkhaO9LBIGNgho9WjQ8paCZq48HV94e/1NdTAdoyPx0cTfwz6WjZ+
bB2lLGVsTJtrYs3Sg7TtkevocJV9bTqXJnY4Zfhcn3EDOUGf1mT2cUzxh9h3
RfIfin5wN1PYTwNXcuVfiMraQp6nhkoKVDSw+IsyboqpLWQgKd6gQLXrTxq9
F6GyjVhqX88YpANO3L1o6d+2UcbPduRfgzCh7B3+xE4Brw9S/6yjPYanHQc2
k0IpIW3BcNm4Wx3zHzUevlhICYFvU+j6M9TxcUrbmu3/KOGYsZDs1BF1zPp4
vYFPgwpafFWj2K3VcLXJnfESZmoYrvATd89WwZ/YpoSJnXvg49VKldlzKtjM
vP7nNsNeyNXfMgmSV8EjzA125fp7wWsg4fLNJmWcLuin0Fi/F8ibz5rKZpSw
blf59EITDQw0znxHlUrY6K+KuwgDLbxLkp9vjlDC+6W3GC3MaCFKuI5nkF0J
+z2hdKgeoAVmncGze1QVsVN006zeFh0sMImFJ1Ep4r6knaYZA3ro+XLuNm+7
ApYaV9esSqeH+2dW30qdVMAmztY5HXIMIH6TndEmRh4Hb5So3w9lBPUeg5fP
umVxho/hvLQJCzTRltNoZcni6W7BM3kFLEBCB1x/eMpiVY3LN28wsIJX/go7
z6YM1ph9a5XawQoZV3OuxBFl8HUOo3pi+T5YtlmL7SdLYc2gI/jVRXZgqutQ
Y02UwmXD+VUsxewgLvVsVl9ECvM95tRWnWIHayqS1VtjSfzdJ4NmxYMDyooL
hbKyD+F92sBD7cEJF2lPVrgZETFZ9u3ru7HckHBR8WzGMAHv376l5NnJDTlD
jAK9AQT8Rz1o/zQPD/SUvYnUeSyOY67Gt9EU8oCsK7vJwWVRTCWjvEw/wAsj
/jcbB9QPYM53RFUvcwH40WcvvPCLDZc5OriSlYWh5P5FZbV/+7CieDeNoYcw
RDolml3n2IfnVNeX/FKEQaslYl0mjglL6LTRC00IQ8uYaek1o72Y8yBbvFya
CHj5XvvJFUqNu8xebbhgEWAkl7MUFFLilc8sacQJEchiUOnP5dus5WnNR+fV
RMEiOT858dh0bTff1g/GAVHofxloMLQ9WpvPX+RN2hGFN/fjqZyiBmpN/Bsp
dsTFIPLcfDfd00Lk+712wt93l8PGXsy+mkP2XaHeIutisCWdeMVsdRGVH8/5
scYnDtUHCILEu2Qk5JlwklFNHBQo7dy/9G6h37kzJ7uCxIHz1NDag4M0EL/i
I3hhUhwufn/RtneVFrTcLQzLqQnQTQrM8m+ih2fyxbU8+wmQpM163PA0M7x6
shquYEqA2Zr/2CoUWOFh54jklDsBiPx9/vui9sFt6+XVqmACXE/N1g6zZAee
A5vW93MIUNZxQ0pOlQN6SuziX1QQ4BeDD9eEMCewj2QbdDUTgF3favshHRe8
vLzzkmmAAJrRquNWC1yQVb9GcXKSABfeH+ii/8YNxJjqvuY1AmT/2/v2/Xse
8ExgZDKgJcL2pZ4EyWQ+MP09K3dHhAhHXr25NBLID5/fSLG5HSGC08wjp3su
AjBxX8XYRIUIiRIxuqZ6gkD6GN5gq0WEGo/z0tTS+6GL+sVOlDERprIted5y
CYGsV5JerxUR+IeUKfy2hOCKf3uikSMRDPmEJsX/HICrtmtx025EeHeY6pyP
pzAcR0Y33p4hQp/BZWeD78LAdin2eZU3EaY9JyzFzESAwFFzbfICEahiHPW2
60RgtDj3ASlgN//TDrUBRVHo9X/WSA4kglyd5tHyF6LgfipreOAKEYyGy8WS
94sBf8IQeSeYCKe2DvJ63RYD+oczUj4hRAgWyGTS3SsOJ5Ra6gi7vC296XzS
XxxOesQy6+zGR2k5lwQPicM7xrjL7UFE2H0FKdIMCWDCQPv04+XdeZw7QCr+
ny7DygaHLxFhX3jk05bdOd7+wSpGu1tvesrI8q9bRHBjKt9w2u2HP1dLb2ud
CNyfUObRs0R4VPX0Ho/nQdievP4typ0IYp/2TMr2HAQLq/M3HFyIkP/jtJoJ
SIC/SHp4tT0RpBabbnoWSEDn1bt38khEeL1XYiiS+xA0pno+EjUhghJfvHRm
1CHIno7xk9MlQrXUVETF3CF4I6b7/99bg1WR6FTTYTBnGffc3tXX4AxzwB55
SQjajGKKJhDhc4hvo9BjSci8MSBRLEiE/icyZ62CpODtPlodGgYiTM6Xv3x3
UBoGQV5YeIQAvtTcO/13pGH2bzydej8BFrmDLP7uSENOo3ALzycCbCLVJcK3
o1CV+NRdrJwAtE0uWfoNMmD/kfLdl2gCtJmzNlpvyMCjUGpKqyACJA68n3WT
kQXT+NWlfC8C7JsV1gjLkgVFmqy9kxYE4OccHXkVIAcg9Fp/Q4AAUqfOHOQn
KMCtA5mbosXiYLntVzoTowxl9hTXutvFoMiksTj6gzIURBsF3asVA5pM/kL+
f8qgmthc6l4sBtXKjU8NLqhA0OybXLYUMRD150/PdVCF1nL9vl4rMVgcbQhy
OqoOLXv8yCeGRCGtlQ+1fwMwia92vLUhAnM8fqruHBrwZivWemRGBAw8GxQ3
TDVgQbb3kO6wCGxS+UlL1GsAL8tmxbEGEZAT+sX60fY4CGl6Dc8kiUCGnTKl
kKYmXJJ6ZW53UATOt42MfuHShsDmXxHSu/tURz1E476cNmiPB9dW2guDYBF7
poO5NoyJMSabmgrD51vapOE4beCga87JUxKGo5bPPkz80wab3riwPQzCsPT1
7MN/Izqgona3qNbzAIT+mbcVKdYDpnPmV6SFhcDaNq50tE0PEv+ran/MJARS
zcIseeN6UO1dynt4fT8M5Vs2HhbRB6OlF4LxPftBw7tMXiFNH4qvGV7wubEf
qJcC9+mHGECMiIxH2aIg3KTYbvXWMwJrvhMiJoMCgOe6N8HNCHwpG9vetQvA
4uCzo2xhRrCcVPVYo1YAHN6aple8NgLFE3NnQh8JgMTFh67bgsZQAKfrWtwE
oGn02GrykjGMZo1x503zA1VzqHhZtimo2Wp49zHyg1KFuV1MjSks8Em3umzz
gddTsQS7flPIz9/KWlvgg+6IT/P/GM2gwrPYzqGfD7JVBGp0gswgxCf6S+8T
PoCCast+U3N49ovaK1GdD2qbwt6HhVtAXM6nspBgXtic6zSlS7SA/Uy17Z+9
eeEYj9jgnQwLUIkcGj/qygvvzrSuFVRZwIzp+XfC+rtMxy038NcCcKwAVykX
L1QbleQqelrCRKvF1asVPFDVMRI/Z0aCb6vB3Yd2uIFMVuANcSZBVuKqn+wy
NygdiMvb602C6+mCl3UnuaHST7peMJ4Exiec/VJ7d3lf6KZRPQmiFPsMcD43
lJM4/Z4rW4Gb741GMxtueN2vZ+0qbA0hMWZaQ5Vc8KhWuWPpiDWcO/szZ+kl
FyTmShjEqluDYdIjao5nXOB5keFYsa01nM4kpnnf4QJBlg6xzURr2OHYyIi/
wAVxujZL99atIeax5S9XKS44We6e2tljA+yrS4KKBZzAnBrZBTF24K38mW+n
hgOECxzeL9+xA5NJDY/T5Ryg8FGhuCDHDrYEjOZ6ijjAYXHiJvcHO9h4GZ5c
/5AD8kmW+nMbdsDp8fvtegQHaHOI4ocX7EFsYS/1K10OCE6rL9x0PAG5JBpm
yn52+HOXJrZazhGeNt0r86Jjh447935LajoCiSmbL4CKHd6kSGg9NHeEz6Jh
l6I22SAhwWgrwtsRSsKHp14usIH01aRLunmO4Cx7QUdjgA0CT3O7dvE5AcVF
3zy9QjagUyCqjlE4Q7Hb34APJDaQ6tadZut0Adu4r6N7iveBj2OIQCm3G7xx
fJ6idIwVqJaCfhyaOgWlQYsXvY8zg7HrEa7HjzzgSkfiiHUOIxiffS8aZeQJ
ZcRS9iwlBqBPD/pcxn8W4hhDTFT76CD03vj0r0/n4IXEUOKjF7RQhMOfuz45
D+fCakOORNFAWuSCqomvDzzpZVgzC9kLMrwCxxUF/aB2deO48IM9oDtV4a8U
dAF6hs2uXKuiBhN5ta0uC3+4I/pxLmWZCkpapQJEiReBwX1lv6o2FfhfLFXN
ZL4Ed6+nnk9KpgRmGs63qX8uQZ5tvljjXwqgK6KLfd0ZACdC1c6tWlDA0LEB
FvOCy8DDan17IXYHsQjwRj2NDAT2YDcljqht9IhxSvvAuSDo4+YqvBmwhejG
773n07oCzJm5s5yxm6i771u8+pFg0Npe/nom/R8is8ZpcHKGwAWhqQtnKzfQ
iiJHyfnpEDiYI+758u86svKV9ZnqC4WdqhMivhLr6OZtyT/jxWEghtTu1QWt
ISGqNIOs6+GQb95yvL93Fe2LSd4I8r4K10N58hQOr6LBRU/PHp0IILp+yjma
Skatz4cv3zeIAH+d2dT0ZDKqdLKPcTGJgKmR2fl/iWSU0mSYO2UVAXDRc6E1
loy0M6R+UblHgFH0V4bz4WRUoLnoLH8tAiojjj2vO0tGQSnhNmm1EfCK8tjJ
Dxpk5KFL9nCoi4B/Fa+H5REZWWz4Bgg3RkCF3ljbczUyOuzheqeoPQIGDgX/
TFEkox/K2t0N/0XA0WP2FGclyUhnmM50ZT0CIg6kfj7EQ0ayadecarYiQMdP
o/8pJxkli29VfKCIBHa/Bh0hdjIKG7jceGNPJLzOEyFxMpORrfaZ3+xMkSCQ
IULcS01G7Q/FZlaYI0EmJdQmimK3n7XhpW+skSAUHTixs7WCZF7aUz/miIRx
ZieVzbUVlEfLxRjFFQmrNl3LIeQVJHiqm/00TySEbK9zbCytoNR3t/gN+CLB
QvNJevDfFUTPYyQqKRAJEmkpwetzK+j/AO1hxME=
     "]], LineBox[CompressedData["
1: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
F8mva+h/ICasXg==
     "]], LineBox[CompressedData["
1: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
RzY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 3.*^-9}}, {{-4.*^-8, 1.2*^-7}, {0, 3.*^-9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.59022604982417*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
lLw=
     "]], LineBox[CompressedData["
1:eJwVlmc4Fv4Xxo2EZO+R/TwpEhHC98iWvbIzI2RnJfKkyCoqGkYpKpXITOFL
ssrIHv3MiIyM5FFWf/9X5/qc61znus99zosj4upv7k5FQUHhQ0lB8f9Yptnc
cPOiO37z1Wbmklo1MprgUOwMcsfV70/ssTGuRtOXXV+w+rjjsLLjskfPVCPe
99s30hzd8aVtY9eOiGp0WUbeOkPTHY8/rdbrLK9Gegcezz5ldMeezuaPNg/X
oP/IEUw1j89i6sq7HovsGFG9lLaZ/+SGx6uqZyzXahFdEW1qZr0bhgKVfCnq
OsRUNt5sUOWGP5+MPFTBUIf48W3FggI3/DiEK2pMoA7Jd5O5fFPccHGFkdlN
tTrksYH7Fi3d8PqBJdvguDr0Wd/E4teYKw74/CBakv8Duj3vb/x3zQVbG2SY
BXnUIw3WiFTCkgv+TXdxfCygHq0oXOs2++GCs9VKhm0u1SPTmPtWL7+64H1/
FSh8U+sRE+8HR/taF/xmTaZfoKoeJeiw+dfEu2BZK5fEBLaPiPS4LOUKvwsO
vydAd7nlI/Kz/ttJr+6M++c6lxs1GlHJvnx7G2VnPPjW0CDYuBGt11hNP5Nz
xiaE3lwxu0ZEEi/b1CQ64+iPmh2xgY3o9oof8TKDM1YpMCM55DQiP+5P61Ov
nPDeSwMFV3caEQXpkVFFnyO+MOiU14KbUML0lqtFiyOuJG8VsLY2ITYju/Dl
946YRzJ8/OxAExLn48w9nOOI/7tSRJRcbkKnyhL/PPR2xF8UmB+fFG1Gt3+E
5F7/dwYX8vq3D8Y3I4KZ4V+bQ2fwGNfjsiWXFhQfV/egh+8MpmIq5zMPbEEL
VfLKxvt36/PKddpILaiEeOCS5pIDHteo8qDPaUGw9XPrSLkDhl777jdjLcjm
eQoFtboDFhRV8/rn9gklb3fTvraxx35/lLx8Yj6jpWO6+Qf17XEph4GMVfpn
ZO5ZpfdExR73uSvOOOZ/Rrw9uQn3BO1x2RcphfaOz+hZfjBDzJQdtmsoDTxw
oBXVWnAxWwfYYWrPOrOE2lb064UtF2W8Lb6QwJSTxd+O8oVlWi9E2OI6O6tf
kzLt6My9vaRpH1us5f/+ta5OO2q5VjrbamaLX3I9lXEPbEcPnRhr7vLbYqNj
r+d2WtqRAecHN6kiG+zoEhu/ENWB8kgSxdb91jjUQG22iKIT2a3vuH9uscZp
vmrvfBk7EbNfHx+qssbyeTYuJ/k6UYR9zDXRHGtccSwjgSDficwUhq1/ellj
y8IF4l/PTrQzn7ITs22FJX70dQkMdCJr63WDQnEr/LQkbyOhpQtNZ00l7XBa
4Sd3jlewfO1Cod+6Wo1prXBm7x63D/Nd6K5vgcHS7GkcIrxmmMvcjXqvuhjI
FJ3GYWO2CpG23cjsTat+yYnTmGI8P46V3I3G1yoTqSRP4xTbBIHYfT0oQOXZ
Z3OB09iVdZYkJdSDUptI+qs7lvihuWUJz6ke1DF8XF++wRKfpWNbvfCoBxnQ
55yqMLbEh4rCjqdb9aKvxjcS9p60xBddhygu+fUi77SIT1aylrjMjc8oM64X
JQqdPrXObolrGGx+JL/tRS3H951SGrLACs+m2dQE+pC2a7DeezcLXJLQIKK+
0ofUqvR0cbg5npzv1tlqH0B/+KN5LLzNce9qZuKLnwOoJLJ8dsZ+l/drJOUx
DiIiiCazqpnj/IEEuXjjQcT0YbPzLI05pmkdhoO9g2i0qdCO4bYZZohTeDGx
NITuH/wumXPVDBtobhz6x/EVmcfzb8uHmGESe7l2tPJX1HQq/pGjjRm+65p7
+nXcV/S6zWWqWNAMV55035oX+w9FdnP42bwyxWxuNsJOF4aRgpyB2s8sUzwa
s73o/mgYLd+5whJz0xSff/JxZbZ1GJ09vVjyKtAU91z34Q4kjiCDweb1HUVT
zH4r9FjJxAg6Xr1GZZBggheo6O62Bo2h/CjXp8E+Jvj+BzWVe8/HkIDaF92H
JiZY5uifIsqRMbSnPj95hdME32k1VxkVH0e9zfZc958Y44b+wAdx6eMoqOfD
oe9VRli9XdXv2fUJlMi9+nsnxwiPREba+T2dQLn24nU8cUaYgsV7KvnjBOqd
jLMyNDXC1eMM0t0U35DCb4OrpVOG2Ah+a2ZFf0ObHP3DVxgN8UaSQsbBlEnE
YUubn/nLALOXdKiOlkwiqWylC+UDBvili7LPdv8kciRk0s8+NsBLrEMSEcJT
qO64s4KpggHWMvyVfrNyCl2zmksRdNLHisLnppR3vqOsDH57JS19LMAc68x0
aBqVjxoSzQ/p44o28UVHy2k07VFUHbt6Cm/KxXNEFUwjvbDg2YXrp3CfFI3C
oOsMYry/o1H1Rg/HBbWWXJz9gYjDR5n60vUwS6Zp8KjALAJhl6HFCD1sGBIZ
9p/pLArI/+gvqq2Hv3kZSj57P4u6K+OzEoZ0Medv03uV6XPo7hAb2ZpKF3cs
bdjXnV9AblWBA1LfdfCLXJH5n4ULSCa7s5KyRQenpcQe/vtrAX1yvnnp1Q0d
fLK/7H551E+0NUNP+Y9HBzfpMbaJPlxELmSK/c+OamOVh+f+/YhbRtKDTj8j
2HYZ3k8pvVlGG+9wh8maFv6ba/Oc/esySouKvPX3vRbWXWZODjy6gpr2/OEy
0tHCkGuTtXdiBUmxL4n8dtDEjbHzVwJdVtHf30bUn9Q08RqO9/ZKW0VN/QVT
2aKa2MJQxZ+5ZRU5ZXg/1/2hgdUKDDQDZH+j2yLTUpkXNPC/l4eLu/evofWj
I4oaieq48JrYUtMPMmpgVeXl9lXHdIY0D6gl1lHqasbGvIk6NlT94iviuY4O
v7WpSedUx6zzy7dY5teRA/RqzOacxMlBb2xkt/6gqw/uZgr7q2HbrNSKMJNN
5OE6UvRSSQ0zVs8WJjzYRHqS4g3yVGq4QWWv+uOpTcRUU7yglw74WvE579Wo
LZQx3oYCqxA+1nv9Tn7NNio+SD3+gVYVv8p5t29SmQLSlk/9NuhSwTKMvw5p
eFFA6LtUuv4MFfxrY2XY6D4FqBoIys4dUcFXlUlKYX8ooMXvRAybpTKu7/+v
wPsDJYyV+4u75SjhZomKnz3h1FB/uULpp5cSZqrxD7tRSg15utuGYXJK+DVR
z0xqiRq8hxJDkpoUsWlh6OZhrz1A3nraVLqggEfcDwQ+96SBocaFr6hCAQ8v
UofvfUUD1TfllpqjFTDhQeKy3yINxAh/4B5mU8BeD67yB4TvBUatYc89J45j
OtcxzvoHtLC8XyzqJtVxvJyJ5DenaKG7z+sWT5s8ljyZbnVOlg7un1t/J+Uk
j7vH46YX2+lAPImN4XSsHPamexNjw7UPVLr1Xj/tksWJGYLht2f3QxNt2V6N
LFlsuKn6vUyPEcyRkPOohyyOKLxfZvmCEbzz19i4t2Rwou2/DCF/Jsi4/CQ8
niiD2descfFeFvh9+s/1frIUbndNNKFqY4X9HzqUmZOl8BVj941AOjYQl3r6
U1dECu8nxulUabOBJZW5xTsDSTxZlcozXM8GpYWvBLNyDuE1amV3y2Z2CKJ1
KnfRJ+KA0qNran84ITHouGfGGAEzKDeNralzwZMRBv6eYALmzxzY9k3mgu7S
SpLWI3FskbS5nC7GDbLObIYHf4vi57JtRzTteGAiMKlxSEUIC1IVROxM8sFo
r43w8jdWLB+281ySRxiK7gcpKm+yYG+uNhMaHWEgOSQbX2NnwboWWlYlF4RB
oyX6r0z8fpx3AMl6dghDy7RRyRV9GmxLefGqH0kEvP2ujHNeosbEVbVKpgIR
YCCXMb18RYl56wbrtAdEIGufUn8e71YN/aO5h3ZSomCakp+SrDpfo6jom3a6
UxT6X4fqjexM1rA0H+icWBeFyvsJVA4xQzXL679T2gTFgOS11EWX+wrdvdbX
l+u9y5HTL36+WUROU1QTJX/FYFs6Odx4/RfiT6MhJfKLw3shggDxLhldW74u
dkdVHOQprd36erZRY5evESFSHDhcR/48OLgX2sYc54eXxSHo64vPNOu08H07
e+AzAwG6zEOzApvoYZV2b3AbgQA3NZlPnnJnBHxI1ZbKmgA/q/5jLZdnBqui
soFjfgQg8vUGssSwgI9Qaqz/NQJcu52jGWnGBqmSJ2voCwlQ2hEndewEO1B0
qEy6fyDAt32+nD+EOeCFucmD1h4CsOla7GTTccJ+8+/UKt8JoH71xIzFMic4
St8NLVsjQECtUCf9IBdsqYSmK9EQIWeT5l1tLTe8fqhi28JOhJ0L3YmSKbzw
hutwI7M0EY68qbwwEcoHz7qeZ3w+QQSHhYcO9xz5QTpDJfmeFhGSJWK1jXQE
QD0kIDfcmAhVZ89LU0sfAHeVP7cDrIkwl2PG/Y5TEIbHJLquOBGBb0SRwn9b
EC7TZcQXeRDhFK/grPh3Ifj5jy93y4cI1YepvHw9hGH5+tF8nyAi9OqFnNH7
Kgye1wN/U4URYd7jh5mYsQgMjj458zGCCFSx9jo7H0RAyFs5vzhqt39uh/LQ
cVF4lHdwqSuaCMc+qB8teyEK6c8ozSSuEEF/rEws5YAYuCUui7/bZdftgzze
t8SgzUi7L36XL/Jn7temEQenyPiFTNKuH9JbZ5wCxYFpp2+cZ7dfjMaZoosj
4nAiqvfK30gi7L6CFGmnCBDynaZSfVdPspeQeWE5AQxWnELWQonAEkXKbREh
Ag87fSXPBSKkp078/naDCA+rP10v8tvVm6ehs/13V2fiuZUar93829x73B4H
weZyMb3eWSKIte6Zle0+CGKCWt/NHImQP+qubAgSIPHsevbYrr/FNBIjJK5D
4G3AsHX3FBEUeBOkM2MOQcGdS59a1InwXmouunzxEFC82q66ubu/BosC0bmm
w7B0JubAzEEi6J1jDN4jJwmn2asirwgSoT3Cr1HwkSTMnL81VMtBhP7HMp4W
YVJA+7R9TZGCCLNLZa+rD0rDrRu2W1G79+ZHzfWv/440DHP70T5uJsAvrjDT
lX/SoMJdRoitIsAWOrFKGDwKpu9yydlPCEDb5Jil2yAD41aKN7x27/2zCXOj
5YYMUNtc/PrTmQDJQ7U/XWRkYf+Rxz4GFgRg+SmsFpklC1SldlzZigTg45ic
eBN8DOLv9MeN7oiDlOu5g3wEeVC1kogvTRAHsx3/koVYRUgJ1uB3zxSDAsPG
wqt1ihDxKcjAJUkM9mbyveLbVIRMGb4hj0ti8F6xMVcvQAni50k1qfZiIBrI
l55ndwK8Gx/sCxAQg1+TDWEOR1Ug5KNZycccUUj7xIvaBgF+DOnH1ZeLwCK3
/wk3djW4/SL16svnIqDn0XB8w0gN7tPuI+c9EIEtKn9piY9qEDYd4NMVJQLH
BL8x11udBBY9cT96XRHIsFakFFRXh562mLS1YWE4/3liso9TE36MSoR4cAmD
lkqE2v1jmqBzT4vy0z5hEChgy7Qz0YQktvC0sB0haL+haT4Wrwmd/ocdcjuF
4KjZ07ofm5rQUrFNER4qBKsDntmbE1qgt1O3Z75ZEC59X7ISKdSBGboUpVrS
AbC0ii+Z/KwD8zHsOSd8D4BUszDTsxkd+CEcRPnF9gCM5Js1HhbRhYfZcpz6
cgdAzadUTj5NF66Uy8hFzQgA9Wooi26EHli7PrMvsxSAJIqdTz46+jDyLuDs
KXV+wItdW+CiD/1Bvz2XZfnh1/DTo6yR+pAQpZb8UpQf7N4ZpZcX68NR4qO3
1nv4QSIo23lHwADeWFzzvd3CB02TquspqwZQf35gJcCSD6iaL4mX5hiBz4vk
OqGLvKBQbmIdW2UEglrnasjnecE7VyzRut8Ikte6no848kJXdOvSJoMxnHdS
mvmqxQs5SvxVWmHGcNa+LjSVlRfg5XuzfiMTiAysquh+zQM1TZG1kVGmkDTQ
RkG7wg1bi1+M6JJNwb81UPftFDeocosN38kwhZLi+PLQQW6oPvfpz8u3ptAr
+ilNtG6X6biODa2Ygt9XNwPJVG54r1+Ud9zDDGIbxP1mj3HD246JhEVjc8hy
zOoJieECMlmeJ+KMOdQn1S5+DeMCBaH4ZzQ+5jD0QMbK0JcLKvylPwokmIPu
o8I6C5tdZrm0pf/RHKhsp/asSnNBmTmH/3NFC8he0/BzG+WE4n4dS2dhS1Db
vhZ7U5sTHtYodqwesYRzGw1U66qckJwnoXddxRKsLWQNPeU5wSNon2qhlSVo
jo4xu4txggBTh9hWsiUU7LNYa6TkhHjt06v3/lrCvo9MF/jqOMCpzO32l+7T
sJKbEF6twQGMt0mdEGsNl23ORrucYQfhl3a1v+9YA4luYpDZih3k6+ULXz6x
hofD90UajdnB7tePJK46a3BIWzfWOskO+eZmuosb1vCL06b9jhg7aLKL4uwA
G3gR71fjO88GF9M+vtqyt4XLlNXardFs8P3u3uvvj9kDBzsXMfAdK3TcuTcl
qW4Pp1ZL9hSVskJlqoRGtok9vBxTvr/ymhUSE/W3o33sodLyQfO1J6wgffnm
Be1n9oDunX/9LYkVQt25nDt5HWDeSGQ2zIkV6OSJJ6YpzsBrwbmFb/SsINWl
Pc/6xREsrQt6ArxZwNc+gr+EywX6+47J2jUyAdVq2OihOVfoTNsImhnYDwbO
RzgfPTwL5dae9NHaDGDgWSsao+8BM5bWyiZT9ECfHtZeyucJRTzKdhXJdHDp
3sz8t1YvWK9cuJp7nhYKcNRz58fnYYm/+kqv0V5IIy2fMPTzBd3z/2izjGlA
hof/5HEBf9Asft79NngPaM+VByqEBUBeOzlAKoMaDOWUtztNA2GyjMNUfIQK
ij5JBYsSg8AyMWiJUZYKAoNKTmQyXoD+YJnhvBhKYNzL8e729wtgq1sfcnGW
AugK6K4XfwmGM0stjQFGFDCiOsRk8jIEAlzbvc4m/ENM/DwxuaRQkGtrfxSe
tIMeMsxpCnmFwTV/h0v/YrcR3cy9Wl6NcOgqnkGmj7ZQV+9ggsqRi/Anu7lz
uXQTkZnj1Tg4IkD5qMe+1aENtHacvej8fAS0tLy42c6zgSz8ZH3nei/B3oTV
YU3zvyjpluT3mcJIONQjVMeb+wcJUqXpZV2LAqEB1e3Zf+uIJTZlI8znMtTu
Dz6cbrWOhn95eHRrRQNXn8fpEkxGn56PhdzXi4bR8ItrPNVkVOFgE+toGA0V
GQ17SO/IKLXpVN6cRTRMJ8sFmpSRkWaG1Dcqt2gYyfa8uvqCjF6q/zojdyUa
OJ4aPjZNJ6Ow1KjTaTXRUFnQJOfkQ0Zntcln7T5Eg4aS/0CPFxmZbvgFCzdG
wz/7wjm9c2R0+KzznYK2aJifEXOSdyWjUUXNrob/oqEtZe4iiw0ZaY3RGa39
jQYlcyb1EU0ykk274lC1HQ1OQbX1NupklCK+XV5HQYLcm+pveoGMIodCGuP2
kOA1XU97+wkystI8N8W2nwQERgvGxqNk1JYttrDGSIK7jC9mNI/szvNnbHWQ
mQQL6ipSHw+TkcxrG+pH7CS4MxKyWk8go2e0nAwxnCRYKeoO0RQjIwHXLjZ3
bhKY5fa5NAiT0e3qG3x6vCRoT3N4qy1IRvTc+qKS/CSob9INbeYno/8BZcav
Zg==
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 3.*^-9}}, {{-4.*^-8, 1.2*^-7}, {0, 3.*^-9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226050904395*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwVl3c4190bx62QlZUZPskqI5twbiGb7L1nm4hI4psWEhKRkSQeKZTo8Rin
yIrskUo2lTIyvsjo9/39da7XdV/nnPt+3+M6Z793oLUfDRUVlQs1FdX/1wq9
lsbES36YKtm1gftXLTIf51brDvbDM8LrwU+o6tBMlPdTjrN+uDpUVUlpbx3i
r96+k+ruhwu+21sdhzoUJa/skKnnh5dRpXhUch0yEsr7UcDqh4+M8GqNKGP0
hRzBVpfni33HZY+Sot4gmmI5x5/vffBi7cyJB2z1iLGMITmrwQe/GvAYkBOo
R2wVYy2mNT74mzid8HvxeiSIU9SeP/fBq7vcKlhQPVLuJfOcS/LBciX/ived
qUf+f/DAvK0P5rqQoRnWVo/aTCxslka98S2+3ktrCQ2o20Lq9uMhb/zUwrDa
50EDGrSlfmfd442/O6V1DRU0oEn3V4qvGrxxX5EzwwhuQFvBvJwhBd74U+CZ
bMffDUgua7R79bQ3FtGM7pRzfIdSfgYe31j1whWjNweC5RqRLkdEsviCF5Yu
9lFy0mxEv1Wv91p998K0d7wemxo1IsuYDPviz144IIXa1M67EbHx17u7vPHC
5LaG1b/3G1GcAWdgXawXlrA/bD9A04RIeRVJVwW9sONnr+qn001IvgX3lHB7
YfWxVRHvlSY0+quV6zOrF5YHNgYZ2mYE6l/TFako92M6yVWiGW117no0OeWJ
U3Rf+Hi7NaOwLfsX+qWeWJSpznPoUzMKcNjo3q3jiff8tCztmmhB5UxFLo4a
nngrmt61a7kFrdXZzxQqeeKT753Ev9G1IpJYxaaehCf+tri9z1OyFaX8DpCI
YvbEH16Mm0Wfa0UBvO/Xpp55YHUm15bynVZERco1fz3gjlMrBZaF1NpQ3MyW
t02rO94SS4bXpm2I09w5fLHaHdvLBs+d92xDYgJ78w89csevCGMai/g2ZFwR
v/7wtDv2aimQ/W+0DaV8D82/9dcNJx98/u7x3XYkbmW24XjQDb/t2++2yd2B
Ym++fdAn4IavhpcemJXvQL9qlDWOs7hhx+863FzmHahcQuiy3oIrtiud9uS5
2YFga25LttIVK9Jw3V7704Ec/0miotVxxReeKdf0LXaimmHavCuKrljobmRV
PXsXEuYM11k/4IpTv5SXkeW70HSkZ8wcvSvmeX9M8EhwFwq2VqAb+uCClxS0
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
eksiD44LkdFuXhNRaUESnFfgdtIXJKP/AZTZGU0=
     "]], LineBox[CompressedData["
1:eJwVlXc0F+4Xx42MZO+V9flkZe/1XHvvPZNdISqlkiIpO75KC1kN0VLIfChC
Ej5WKsqWXeRDVj+/v+55nXPPfd73vO45j6hfuEMgFQUFRQAlBcX/a7lha/P1
84E4opPat1mxHlmPcqp3nwrENDV0AU769Wjqkt8TttBAPFDKJjZtV4/4arbT
bnoH4stnSClcJ+rRJQUV13uGgXhQT5J873k9MttfMPOQKRCHdkRWhcpg9I0c
xVxfEIB7tI20FWUaEFWJnNvcB3+8Ol/WWljQiOhf0GVkv/PH/ZUKFgyljYi5
fKTVstYfh4/KaJ8rb0QCOFP96VN/rCKzXnKktRGp9JC5j6f74zHclnproREF
beD+RSd/HCHwWMVA+y1qt7B1XP7hh+seMfSrDb1FmXPhNn9XffFsW5UUl3oT
MmCLyjiw5Isz9HvO1uk3od9q8T32P31xjHZnQ4hVE7KLu+NS8tUXJ89o2Y35
NiFmvrfeng2+OL95nSyf1oSSTNjD6xN98bWg7Tv2k00otqA8/bKAL443cZbq
z25GYa5/u/fq++Co8CanXkILesVQ7Omm5YObYerIGYUWtFbvMvVI2Qe/yS3t
EEUtKJZYvmko7oPdU6sn77q0oMzfYeKX9vngwc8BC3uTW1AYz4e1idLDeKf0
XO2/5RZEEZtnXdnvjVUTh6tYO1tR0tSWn2ObNybTahUqDbUidmuPc79qvLGV
68Azv9lWROTnKpLO98Ypqc9bF2jbkHl58vr9YG/8tCXiaLleG8r8eaYo4d8h
rLaoxCj5pg0dsLf66yZ1CHstPnw5/fIDSrzWeLeX/xDu6LaYvvLuA5qvVdGy
YTyEw7Y1s9X7PqBX4vsvGC554aLO4BtTax8QbC1syVZ4YY/Hc6nBeu3I7XE6
BbW+F9ZSbzW1HGhHqds9dM/cPPFKw6WsXJ4OtKRkWixh4YkNC8vGsEwHcjha
a1ao7YmVHTTGKQ06EF9vUdJtIU/c/vbclcXQDvSo+PS+uAkPbLBdK3C8uQM1
OHKzuJ7wwA/2j53xiPqElp+4c1MmumMZ7/FT7DRdqFhE4WNElDs+T1N2/+L+
LnToNm3sVKg7djTymWJX60Jt8a9nPtq74+p3Obn1R7rQ/cNM9bcE3DEpN6db
5FMXsuR66y/zwg2H9X7UNrHrRhSpt3nzCtzw/oUrtTOHulElVdgntptuONVN
w/pRSDcS+8WvvnbODZNKVt+FJHSj9fbTDO8M3HDh/MCOfGM3ehArWeY64Ip1
2+23R9RIyGNtJ7C9zRUz4kBGTRMSYgnr50e1rnietYbzhTMJRXnGxYvlu+Kx
FekQ8mkSslcbcl045orNfr/f3iwnoZ259J24bRc89CD2i4p2D3J1XbN8TnTB
de109+X9e9FUzkTKDpcLblwbayk714six0gfbehc8MKEQXvQ9V506/hTy6UZ
Z3zo5Bo5pKYX9V3xtVR44YyTFDfTVzn7kP3LjxavNJ1xfnHBj8K+PjSyWpVM
ddAZz437+j9c6EMntB+1Owg6Y1kih9YUbT/KaIm1WNlxwrS/WYXEtfpR55Cq
hUqzE673ntyqKOpHlnvzzSttnLCKcKH41ysD6KtNWhKtnhOmof3OLlUwgIJv
Rn1wUXTCQ8+eP27GAyhZ2Nl8jcMJ74mP657cGEBtqgzmGl8cceWNFf2FyM/I
2O+0WY2/Ix4VSomljRlEurVmpvicA77KdSvxz+evaF0ghtcx2AFXsq10eFB8
Q6+iK2amPR3wsaltViWpb0gcxFLZdB2wVBpVtmb0N8T8drM7gMYBz5fkhg1K
DKHvLc899mXaY78Rg773t4bRHYnJg/lX7PGjd4FD2y3DyCFRYFvljD1WYq/p
fbs2jFrME/O83exxxaq41qrHd/Ssw3eiTMge184bd+tJ/kDRPZxhbqV2eN35
/dv9J0aQmrKl7kKOHXar+y+cI20E/bpxmTXuuh02M4pj8ykZQQHOi69KT+72
y8lRUE+NIMvB1rUddTvsVKarnek7ilTrVqksk2yxhk1Y/mbwGCq+6PfwdKgt
vlrR1L+RNoYEdbtM79va4o2kq+eDysbQnnfFqb+5bLFELoVY0t8x1NfqyX2n
0AZ/tEyklkwfR6d630pN1lrjuMKnvPqkCZTMs/JnJ98ad39zZ5xbn0BFnsRG
3mvW2PhI3iaD6CTqG7/mYmVnjVvbr8m+PjWJ1P5YXnk9YYV9KZ+b9whMoU3O
gaHLTFZYRfNI+8dr04jTna44e9kSu680jOVVTiOZXI2Iis+W2FFbh4t2ehp5
H8jeO1NgibeZhz5mmP9Ejao+anZqlrg1zuHnINcMineZTRc6bIGf5s3X8X2a
RTn3BDw1jCwwzV8Kbha6OVTx3UrcQcoCo3Qfnhr9OTQV9KLu6oo53hP4Wki7
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
AB6wbRU=
     "]], LineBox[CompressedData["
1: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
0f8Aup7dPA==
     "]], LineBox[CompressedData["
1:eJwVlXc0F+4Xx42MZO+V9flkZe/1XHvvPZNdISqlkiIpO75KC1kN0VLIfChC
Ej5WKsqWXeRDVj+/v+55nXPPfd73vO45j6hfuEMgFQUFRQAlBcX/a7lha/P1
84E4opPat1mxHlmPcqp3nwrENDV0AU769Wjqkt8TttBAPFDKJjZtV4/4arbT
bnoH4stnSClcJ+rRJQUV13uGgXhQT5J873k9MttfMPOQKRCHdkRWhcpg9I0c
xVxfEIB7tI20FWUaEFWJnNvcB3+8Ol/WWljQiOhf0GVkv/PH/ZUKFgyljYi5
fKTVstYfh4/KaJ8rb0QCOFP96VN/rCKzXnKktRGp9JC5j6f74zHclnproREF
beD+RSd/HCHwWMVA+y1qt7B1XP7hh+seMfSrDb1FmXPhNn9XffFsW5UUl3oT
MmCLyjiw5Isz9HvO1uk3od9q8T32P31xjHZnQ4hVE7KLu+NS8tUXJ89o2Y35
NiFmvrfeng2+OL95nSyf1oSSTNjD6xN98bWg7Tv2k00otqA8/bKAL443cZbq
z25GYa5/u/fq++Co8CanXkILesVQ7Omm5YObYerIGYUWtFbvMvVI2Qe/yS3t
EEUtKJZYvmko7oPdU6sn77q0oMzfYeKX9vngwc8BC3uTW1AYz4e1idLDeKf0
XO2/5RZEEZtnXdnvjVUTh6tYO1tR0tSWn2ObNybTahUqDbUidmuPc79qvLGV
68Azv9lWROTnKpLO98Ypqc9bF2jbkHl58vr9YG/8tCXiaLleG8r8eaYo4d8h
rLaoxCj5pg0dsLf66yZ1CHstPnw5/fIDSrzWeLeX/xDu6LaYvvLuA5qvVdGy
YTyEw7Y1s9X7PqBX4vsvGC554aLO4BtTax8QbC1syVZ4YY/Hc6nBeu3I7XE6
BbW+F9ZSbzW1HGhHqds9dM/cPPFKw6WsXJ4OtKRkWixh4YkNC8vGsEwHcjha
a1ao7YmVHTTGKQ06EF9vUdJtIU/c/vbclcXQDvSo+PS+uAkPbLBdK3C8uQM1
OHKzuJ7wwA/2j53xiPqElp+4c1MmumMZ7/FT7DRdqFhE4WNElDs+T1N2/+L+
LnToNm3sVKg7djTymWJX60Jt8a9nPtq74+p3Obn1R7rQ/cNM9bcE3DEpN6db
5FMXsuR66y/zwg2H9X7UNrHrRhSpt3nzCtzw/oUrtTOHulElVdgntptuONVN
w/pRSDcS+8WvvnbODZNKVt+FJHSj9fbTDO8M3HDh/MCOfGM3ehArWeY64Ip1
2+23R9RIyGNtJ7C9zRUz4kBGTRMSYgnr50e1rnietYbzhTMJRXnGxYvlu+Kx
FekQ8mkSslcbcl045orNfr/f3iwnoZ259J24bRc89CD2i4p2D3J1XbN8TnTB
de109+X9e9FUzkTKDpcLblwbayk714six0gfbehc8MKEQXvQ9V506/hTy6UZ
Z3zo5Bo5pKYX9V3xtVR44YyTFDfTVzn7kP3LjxavNJ1xfnHBj8K+PjSyWpVM
ddAZz437+j9c6EMntB+1Owg6Y1kih9YUbT/KaIm1WNlxwrS/WYXEtfpR55Cq
hUqzE673ntyqKOpHlnvzzSttnLCKcKH41ysD6KtNWhKtnhOmof3OLlUwgIJv
Rn1wUXTCQ8+eP27GAyhZ2Nl8jcMJ74mP657cGEBtqgzmGl8cceWNFf2FyM/I
2O+0WY2/Ix4VSomljRlEurVmpvicA77KdSvxz+evaF0ghtcx2AFXsq10eFB8
Q6+iK2amPR3wsaltViWpb0gcxFLZdB2wVBpVtmb0N8T8drM7gMYBz5fkhg1K
DKHvLc899mXaY78Rg773t4bRHYnJg/lX7PGjd4FD2y3DyCFRYFvljD1WYq/p
fbs2jFrME/O83exxxaq41qrHd/Ssw3eiTMge184bd+tJ/kDRPZxhbqV2eN35
/dv9J0aQmrKl7kKOHXar+y+cI20E/bpxmTXuuh02M4pj8ykZQQHOi69KT+72
y8lRUE+NIMvB1rUddTvsVKarnek7ilTrVqksk2yxhk1Y/mbwGCq+6PfwdKgt
vlrR1L+RNoYEdbtM79va4o2kq+eDysbQnnfFqb+5bLFELoVY0t8x1NfqyX2n
0AZ/tEyklkwfR6d630pN1lrjuMKnvPqkCZTMs/JnJ98ad39zZ5xbn0BFnsRG
3mvW2PhI3iaD6CTqG7/mYmVnjVvbr8m+PjWJ1P5YXnk9YYV9KZ+b9whMoU3O
gaHLTFZYRfNI+8dr04jTna44e9kSu680jOVVTiOZXI2Iis+W2FFbh4t2ehp5
H8jeO1NgibeZhz5mmP9Ejao+anZqlrg1zuHnINcMineZTRc6bIGf5s3X8X2a
RTn3BDw1jCwwzV8Kbha6OVTx3UrcQcoCo3Qfnhr9OTQV9KLu6oo53hP4Wki7
eg6ZnT09M59gjvWecE8rls0jpjs7BrUvzbBhz68N19ZFJD4kz9yfZYYnf0v4
zzItIRDx/bIYZYY5OAQdDjsvoRPFTeFixmbYzSHXcntqCfVUJeYkfTHFiYz7
o18l/0K3vrCTXalMcWbV9yO/u38j/9qTn2UmTXDDk/fz7/79Rgq53VWUbSZY
7e7PN1ryy+iDz/ULpWkm+Mm5QU6JjGW0Nb2X8h+vCSbNtPZoeawgXzIF4yN5
Y/yYNrTxCdsqkhs8vBDFboy5l3Kt9lutoo1q3Gm7aoR1tEJ3/BJW0c2L0f/9
rTHCy3LV2ycoyKhlzzq3tYkRzhw/QLO4RUYyHEuif7wMcU1KzR4tsb/o7x9r
6g+6hjhQeOypZchf1DLwdCJXzBC/jDNz96/4iw7fC35s+tMAZxaGp72y2kCZ
olMy2REGmKp0UVkpcROtyQ+rGyTr443I6M0u1R3UzKbDx3NcHytkNmj/zNhB
GSv3NuZs9fHo+euqugs7SPqNW30Wlz4eHPp+782Tf8gL+gxm8vUwmXHlLf9d
Crhy91a2SLgufni1HTQMqCDIb/hFiYYuNq26NtYaSQVmB4nNKlS6uOvWxQMb
pVTAXF82b5YF+M9YTI4lLzXcG+lAJ2sRfvIgJ7Z5nRrKJKhH3tLp4PtutkcY
vtLAzV/mfyxJ2tiP+kqPDR8tRFZn0A/c08biN2oZTd1pQcdSSHFWVhsT9kky
uXyjhbYwzTh2Jy1strLaQPmTDn5UhBP98zWw6L4B2ENkgHeXKjUWjmlgUoXf
QnsYAzww3bY6q6yB325YeFnVMEDwl+QzKS3q+KjQO4UYx31A3nrY8npeDffS
Z+TkXWcEJqOho3s0VbEMTe7eoxIsoN1j9uwhSREz62nJbx9nhxa6clqDHEX8
okNixSOXHRyQsM/3IEVMjes2/3WwQ3DxKjvPlgK273jVxi/LAfcuFZ5LFFfA
elUV2WG/OOCP83rCAFkG/xoYeGkcxwWn6A5X+FqI43hnPoJdCy8kn1I9eu/H
AawqLa0WvskLhcP7BHpPH8CfZwom7ynwQc/rqlijPCIuR1KZzNl8oOjDbiXx
Rwx/iP0VIHaCH0ZPprz/oi2MzU0zS5t5BeF7n5vIrzE2PM56V+2ivTC8uHNK
XWuTFZcHXbUKSRCGWK9Um3gOVpx5aeAkTb0wGLTF/FVIZMTBGlUWdzhEoG3K
+tVlCxp8TLqD7soFEbBLL05P1Zmrf3DXiWVFTxQGnkWaDe+M19P3vphLchOF
qjtJVF5xX+ql9o+uDIeLQuyxJRJ9USliNP73703uLkdPPVl4uYiWfiUaspBF
gdNveP2uBC00tufuQ3fE4NTXJ+00a3RwzHPxHlupGJAcInNOtuwFzvquyYx6
MbhuyKJnHsgE16TvuKaOikF8Zr5htD075F5Uwz4HCPC685qMkiYHiLabaJxR
JcAYw3GunyKckF23kCVnTAD9K5rTjr+44IRZdVeaPwF2InqSD6bzQckDEsPv
bALIvqyKGI3kh8SDdRrCTwjgNX/f67a3AMQH3/29WEGA2oAQOWq5/eBmOkBz
qpMAs/n2PNVcQpDju0B54CsB+IfVKcK3hcAqzqrz3CQB6qSpjh0PEoH9mlkR
VJsE6DM7c8jsqwhwcabpatAQYS7opz3BRhSEi5brmFmIwF/UqfVFVQy2HBmZ
74sSQemtvnz5EzEQGsgQc5UmgsWPckL6fgKoJ5YElCkR4bxANqPx7hxmmcfO
FgZE2JHbOnT4JBE08qzdWc2JEGdw6MX5YSKMFRCq4m2JkHpM2OF5xQFwUrpb
dd6TCKwXY4vaRMWB2aGJYtOHCFkZo3/G0sRB1vjG8sEgItx/U3SbJ0gCRkzl
j94PJwLh454ZxR4J0FXZah6JIELx90AtK5CE8Id3LvWdJYLMcktKUIkkfE64
xhJ1gQhlNJLDsdxSoJtrs0G6RAQ1viS57DgpSGuVbB66TIQamdmYikUp8I7V
2LwXTwRdPUtSl4c0fJpYk2NKIEKz41Ox2RZp8NxKXVdOIoLZEabTe5QPQmiQ
zm+WFCJ8igp7L5R3EGSV/6srSCWCw/Uubs19MmCoIrw9k0aEgQKFo45nZWDq
hIrPzHUijLQtMyTayoKnZ5oJawYRZpbKn9VJyEHHBcQruMth1Nz/Bm7IQQ79
6vPqdCIsc5+1+/1PDrQpGjH7Lp+VHizYFyoPMvYBDJK787aQ5sqBQXmoTyo+
vLH7fqOktZiImALMF7ElJu/mi3u1bSHrpgA7nwZcv+zmN9J5HqF1XQEi376+
P727H12Ld45pswL01xepVV4lQrsty3unDQUgKbCuGl/Z9fWlYcFXQRFk2xir
b8cSwcb/BHd4kCIk6kkcenpx19+CiG50jiI4lI02x0cRoSeSdCSpRxHK2wO6
RHd9ZFHEZdyiVwIF51n/+F1f/Jzjoy9PK0GAi1NDbggRhnJvMOASJViRjXd1
ObLrW8JI+eOIErzz+sI/6LfrW/th/KSVMixIEbu13Hf9+h2R4D+gApN6kZS3
DYmwOMdjJ+GpAr15s3OvEBFenmk7p/KfCqzIB0XmqRNBNUmq3WZbBeQYQuQW
d+8XXs6FXulXhb7fcheid++dQisnK2OfGqz8MChXpydCU5MVztVXg4xcbaaP
FLu+Pz9jqXqmBoQXOf0XfxPAfif81fxVdaBfzo2RJRHgqdX751ca1YGNsoLI
1EYA2mz+Uv5NdWg4SpHTgglQo/6+yOyEBnTV3Uz4WEoAsZP8WQ88NIGJxB6u
E0+A5fHms17y2pDqTBVSIk+Amx/4UMcgALsm9X8pZ8UgpH10vJ/LEKQatAZb
VkXASDtK946SIWw3VNkRZkVA8Cl7toetIRjwJExe+y4Cn9IMHX4kGsLnOIvw
gFYRkLd/2Phz0xA69yaXxtwVgZXPR3M3R41gRVu0JEBXBC5MLrmIPjeBJVLq
5x8HhMHJJfHVeLsJLOhR0LOwCYNMqwjzo2kTYJOqsHLeEoLhYvv30qKmQNp3
77BErxDohr5WVrlpCj0gFTR+WQioVyJZTaPMID6IkPdufD+kUOx8CDWxgMqZ
8kTGakHAi6Qt8LWABX92MfdiQVgeeijPFm0BAQ9CjlffFgSPauusijILcE5L
+FweKQiSp3J9dgQtoVTjAWeWqiC0jOuspa9Ygkkj0/fZSgGgar1AfJ1vDb/W
l597tvKDWoWt69Vaawg9ItC8XsUPwUWEZNcBaziVsL7+qIQfSDEflzb32cA5
saUgtev8kK8hUGt01gb2xrENCLnwA5TU2A9Y20JR3Asuqhk+qG+Jboi+aAc6
/FGBp/n5YGuxy5o+1Q4kFBWCtxn5QIeHMHTjnh38SVcyv/2PF+qOfFgveWMH
tHYLUtsTu0zPrfTltx3cECu7dv0lL9RYvHigGmQP5bJ0hS8teOFN52jSoo0D
SFILuuon8wCZrMIbdcgB4q2Nal5f4gE14cRHNKEOEDbDPKgcwQOV4XJNgkkO
IPLs0oyX1y6zXtiyaHIAbzWBFVt5Hih34Ax/rO4IF1mTsx595oayARMnHxEn
sGKuo7iqyA3369U7V2SdQPAhuU1ekhtSH0iaJWg7AXH7mPWEEDcEnWLQee7i
BKwCDbbBjNwgyNxJ2Ep1ght18/d/TnNBorHzyu2/TjB24PVQQT4XHC73z+zq
cYbgzyXSj3m5gCkzthuuuoLtzT9+xrv/nkiJR8OfG64QIjUt7cXLCSrvVJ6X
FLpCbcrdtihWTvBY/pnC3egKa/+5OHZRcEKxg73p4oYrKCdy2PaNcoAhhxjO
PeEG8QrsJwwfcsD5m02lW57ukMIv53xEkQMmb9Em1Ch5grhTH2O6Fzt03rg9
cVDfEx7lfW7wd2GHqgxJg1xbT4hmULuL7NghOdliOybUE0bdkwoojNhB7tL1
CONHnpDNX6jTdJAdIgO5fbr5vCDIUihIZYsN6FXENacoDoHHcKXa7Xw2kCEZ
z7F1eUOdjjEvHZkVjntGCbzi9gXXyGKcXcMCVCtnv0vN+oHPoxhBqpdMYOkj
y5V3PwDkq0vX2WgZwfJog1icRRA8CRxXPJDJAHuzzn56zX8UhE1eZWZI7oUL
t6fnxj4eg8ESHQ+hdTp4ii8+9ikIAS7vw7pWHbRwM/aXplXYcbi6HtoW1UgD
CrwCeqqC4UAX/QYFfNsDxrMVJ9XOngD3sk5DczI1WClrbXfbnYR0CumrAQrU
8OKDzGkx8VPgNrJ1l3SBCk6eeqWZzRQBAxyURT+bKYGJlrM6czICeoJa1nqJ
lED/lD6hrOs0PPTdw95xmQKGdb4w25acgQ511Oky+Q8xC/DGFcVGwqXwkaDJ
bzvo/r5ZQ+FjZyHd5fiQ38dtRD99u4HP4By8Thjkpf+2hUh9g0nasuch7IV1
icvkJiKzJOpyckYB28Ba+DfKTbSqyvEiZC4KJi5wD7dqbCDHMMXjs30XwIvt
a45e8F+U8t/Byenn0fC0sD+i6fU6EqK6aZYTfxH+elpT3t27jlivpm+cDb0E
xmsPh2zc19DQclBQj1EMRO7PepxaS0YfHv84c8csBvzKz1N+rSKjSi+3q95W
MaBTqUySqCSjjBbzB7OOMRD0K4vU/JKMDO/JjFH5xwCZlcthzyMyKtFfPqR8
OQZmbH8o3s0go7MZF51v1sfAQTGyP18QGQUYkwM83sZAstKk/Bl/MrLbCDst
8j4GPln1h5J8yEg6wOfG044YOC/OoJniSUbf1Q1Jzd9i4N+pJa499mRk9IPe
evVvDPDuHK9m0CEjxZuXvWq3Y+CoGiH2uCYZpRO3KxopYsEreqG8W42Mor+c
eX9tTyxMf/tz5I4iGbkYHplgZ4yFQ2YCizISZNSRS5hfZYqFjoo24RvE3X3W
f6wMssRC2aeJ+r+iZKTwzI06jyMWVv8kQ5sgGT2i49oXxxULVasPRBT4yUjQ
j8QeyBMLpvusw+7wkFFmXRq/GV8s9O61kKDkIqO9PBZiBwV288T6Wgazk9H/
AB6wbRU=
     "]], LineBox[CompressedData["
1:eJwVl3c4190bx62QlZUZPskqI5twbiGb7L1nm4hI4psWEhKRkSQeKZTo8Rin
yIrskUo2lTIyvsjo9/39da7XdV/nnPt+3+M6Z793oLUfDRUVlQs1FdX/1wq9
lsbES36YKtm1gftXLTIf51brDvbDM8LrwU+o6tBMlPdTjrN+uDpUVUlpbx3i
r96+k+ruhwu+21sdhzoUJa/skKnnh5dRpXhUch0yEsr7UcDqh4+M8GqNKGP0
hRzBVpfni33HZY+Sot4gmmI5x5/vffBi7cyJB2z1iLGMITmrwQe/GvAYkBOo
R2wVYy2mNT74mzid8HvxeiSIU9SeP/fBq7vcKlhQPVLuJfOcS/LBciX/ived
qUf+f/DAvK0P5rqQoRnWVo/aTCxslka98S2+3ktrCQ2o20Lq9uMhb/zUwrDa
50EDGrSlfmfd442/O6V1DRU0oEn3V4qvGrxxX5EzwwhuQFvBvJwhBd74U+CZ
bMffDUgua7R79bQ3FtGM7pRzfIdSfgYe31j1whWjNweC5RqRLkdEsviCF5Yu
9lFy0mxEv1Wv91p998K0d7wemxo1IsuYDPviz144IIXa1M67EbHx17u7vPHC
5LaG1b/3G1GcAWdgXawXlrA/bD9A04RIeRVJVwW9sONnr+qn001IvgX3lHB7
YfWxVRHvlSY0+quV6zOrF5YHNgYZ2mYE6l/TFako92M6yVWiGW117no0OeWJ
U3Rf+Hi7NaOwLfsX+qWeWJSpznPoUzMKcNjo3q3jiff8tCztmmhB5UxFLo4a
nngrmt61a7kFrdXZzxQqeeKT753Ev9G1IpJYxaaehCf+tri9z1OyFaX8DpCI
YvbEH16Mm0Wfa0UBvO/Xpp55YHUm15bynVZERco1fz3gjlMrBZaF1NpQ3MyW
t02rO94SS4bXpm2I09w5fLHaHdvLBs+d92xDYgJ78w89csevCGMai/g2ZFwR
v/7wtDv2aimQ/W+0DaV8D82/9dcNJx98/u7x3XYkbmW24XjQDb/t2++2yd2B
Ym++fdAn4IavhpcemJXvQL9qlDWOs7hhx+863FzmHahcQuiy3oIrtiud9uS5
2YFga25LttIVK9Jw3V7704Ec/0miotVxxReeKdf0LXaimmHavCuKrljobmRV
PXsXEuYM11k/4IpTv5SXkeW70HSkZ8wcvSvmeX9M8EhwFwq2VqAb+uCClxS0
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
eksiD44LkdFuXhNRaUESnFfgdtIXJKP/AZTZGU0=
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 3.*^-9}}, {{-4.*^-8, 1.2*^-7}, {0, 3.*^-9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226052942572*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0f8Aup7dPA==
     "]], LineBox[CompressedData["
1:eJwVl2c4Ff77x0VF2ccMGcc8pUJGxue2996ywpEGZUbISGQkCuGnkiKUokQl
9ZGj7HWMpG8IGZGdPfr3f3Rfr+t+Xe/rfnI/eIt4+FqdpqWhoXm3i4bm/2eF
dsOnlNDTOInOoVQ1FiPTYU6lzoDTuPYCRejrbYzGIz2esPucxh1u9fpBDzA6
8G77ZobraVwYWUopfYdRpIy8fY72afy5VNFcagEjg4MPfz1mPo19y258cXKp
QcPvZp0m9p7G8ru6MyrP16AwB7V2KZrT+BEH5Q/N5Rr0PL2vvGTRE79f7PU7
m1aDCPtZrrzs88Q00iwtPvU1qKTIaXax0xOnLOqL6XTXIB3dJ27yzZ7YRfyq
GdOPGhQcraP75r0nZroq1xG0XoNYBdPerFV64lplzRgmuo+ouHqIpFLmiWW3
ub447vuItE4euRde7InZN6z7Clk/ov9Wwlg+PPTE642BhEWuj4j26VGH6SYy
ZiMknD3EUosYyuhv3aWQ8WCrZ5DIgVrEUvGjwbiajH/LHVRRFqtF/DhN6dkz
Mv563DuzSqUWyXetcF9IJWPCrb63oWdrkUpfh9nBBDL2c7GkLAXWIo3vxdfb
osmYKUlJ+ExULTIdd1w5EkDGyVZpZmKZtchrA/fO2pBxqO2Qy1lKLfL5m8X8
wJSM55avbQq01aKA3f665npkLPEgO7WgrxZFsYhWlimRcROXj6Lg71qUTYzP
8OMj4+prTmshBArKlXRrFeYg485v5jnh/BRUIK28m8pIxveFjzLriFHQS8Xp
QNltD5zSwYwlFCio2cjcenHIA29JsRy/YENBneZSNx599cDxM0TDVicK+mKz
q86K6oE/d1SX7SFT0KjrK7lXFA/MdH/7vIA/BW0F8BCCHntgySI3p6vJFER7
ed5QLNcD73dPkLBJpyCGiKarPZkemFumzkk2h4K44sMX5BM88Mjzb7XixRR0
9O5Q5/J5D+yRezet5DMFyee9ZSgke+Cv5c4519soSOXxbQ07Zw98UY9m/V4v
BemXab94beqBz6T3X0odpyCzCoFJLz0PLG/s0BQ4R0E2VctCPOoeOFHTbyJ/
jYLc6opSQ2Q88Ey7MM0SYx3yaoxukCR54Im2gD4u7jrk03byb5+IBw43mYtM
Fq5DoX2Mvic4PHCrblB7sGIdSpv2NVtfdscCF5SPkbzqkBZ72C3xOXfsL6Vx
+q9/HVpQjO2ynHTHzbLerFyRdcgiJtvu6Td3zJZyYmwhsw6xHKh1dapxx86M
nT6sLXUoUY/g+yHBHYeLnGAyUP6Eoh9WpF7ld8fz6/FVRZyf0UX79c59mm6Y
uqfFgFBej8r3Fzs5qLhht0N/K6dwPVr9YDdeeNwNa9dFuVW31KNosYpNbQk3
DLJM+mpj9Sht4aJEJKMbjtZWGw3naUAXeZpWf5acwjQ6F921QhrQaoQEc0zu
Kfz6x1WG8pgGFP3zGlHo9imspRpzmzalAaW9BNOTwadw5vubewwKGtAb44pH
bRqnMB/aqEzuaEA00Q9MX/e64venl/abiTaixPEtD+vGf+y8VNtypBERTB0v
z79zxW35qoEnTzQiMT6u/EN5rviv96tXb0wbkWFF0lrueVcsVEYYpg1rRF18
k8xqLq5Y1ZeyEhPXiJyv6or2m7viGDZXQaXbjeiiGY0Zh4Ir7h+INjJ60ojS
Ji/lx/91wZKMLVt+3xsRv3n3W7FFFzwQkD868asRFVTKtNf+dMFWbbFKRauN
6E3M9NpmkwuWHmU7ScPZhL4LuJv5ZbjgtUpiErtFExK3NFl3ILlgl7vU4Z7u
JpRw/eP/uvlcsHdG5WrmeBP6XS2vYsbkgkMqysUi1ptQucTBcO05Zzz+tl3v
rlAzgq2ZrSOVzrhPXmfRy6cZORSl0tBpOmM72ogpoGtB1d/pHkbIOWMXnfTY
RK4WJEi4rLkm6ow9inYZl0q2oLErbjEze53x2Kzo2nXjFhRgJbv7a6sTls0M
li693YKSt7vonzs44e1SG/4//K1oTk6/WNLICddqAWfakVZkdbba4JGqE2aR
CVdzVW9FB7rzE7MEnfD6ytjOI3IrKiwOYoz56Yi3FQ7aU8pa0b7ByZKtXkec
d0a9rqKuFflwuJiENDji/Nl6M8LXViQXqXvT56kjDo1BOkTaNlRjzc1q7+eI
P4eIWW44tSFiYlIZ1f2fn1X+oSSwDV3HO+Ym1o7YU3z897cbbciENHFLU9ER
u54zLXv6oQ193XlDkN46iaMUmwgPJNrR4pOT3LsSTuJ7X2lvFtJ3oGJhmZbA
sJOY5zdLawqxA7lk7Y0e9zmJFbYiaK6gDtQY++pXi+VJPJ3dKa4d2IFyTzF/
yOQ/ibt2j/k+GuhAxly1ZOkyB0zuLtrHZtOJaJKzeB88dMCmtwZJPG6d6DXt
xTb2DAfswWGxs+bdiYjzfEqrlx1w4u9Lv8yudaK15qD9FC0HvNqoEOv/ohMV
REu9tP9ij4mtp6zk6anIcXXndHOjPU5lXi9hIFAR68VePlRtjx232Vh/C1BR
mFNMLDHPHvtsln5ekqMiS8Xv9jPn7PG8bqxlihsV7X1ezuTmbI+PPrn5292H
it6LJtZ2mdljmxKOI+cuU5EUu+Lht8ft8etU+jKR21S0M526E7Nth6N+BpNu
fKaiCg+vV8tzdtgtbSXOopuKzvWrnT07Yod7Iee18zAV9dT/opo22OG06N1q
JjtU9PSh9mPe23ZYK7+KHKHaheztV41Lxezwyx9hwcW1XWj83s8bO1x22KWo
/nBHTxcKHqG2mNHbYfU6toNik10o88Iz47lftjg7dveQHms36rnmbixTZouD
a6V+bLp2I8sXLUblyrY4bai6IntXD/qx/DaJ9rAt5mf57S3K3YP8VAubrQRs
sRLN/uMfDvWgW/XRRks7Npi0MeZDsulB7d8VjOQ/2WBFrnMx5sU9yHhfnuFr
Mxv8tuT5mSzHXvTN7GbiXg0bPPqJL8wkoBedzwhrspO1wds8YytnknpRkpCt
4SqHDTZYU4Op6l7UqLDf8ES/NRZV9F4sFvuCdD2CDN6RrbHlXS6jeNY+1FPk
nrDf1hoHeg990T/WhzxnzBod9ayx0P7K+QTzPhR7mWSwKWWNy0XbH4Xe7kOU
lEF9tVkrbHyINjSU7ytSrzbQx5etcMGV1W+zKv1ojT+K1/q8FeYr50PCp/pR
+ZXKXxNOVrik2KLo3LV+JAHEZHZ1Kxz1zFZVprUfsdRudnruscINOebOR1y/
ocH6UkfGNEvMWllLiLv2H8qWHDucd80SiylFXo4v/g9ZJfBvy1+yxL2OhSov
2v5D9YYJD1wdLPGOnPLDO7zf0fNW958vBS0xg9LzpWcvv6MrXZwXHUos8AUy
/dj4+gBSPG6sPnPPArv0WNjXiQ+i+fSrbDEpFjggVZjiajWIPG1ny0v8LXDa
HdZXc88HkfHXhtUdJQt8+Oav6zy+Q0jh/TKtcaI5DshxD625+QMVR3g8DvIx
x3v99p4LevoDCah36Oeam+NA2rqsWw0/0G5KcfIClzlee2hjt0Q7jHoanLiz
H5lhVXWLxr2Rwyigu5Y0Vm2KyXS7BWNjRlASz9KfnTxTXDEnQrf4cATlO4l9
5L1uit9fLM9Mrx1BPaPX7UwsTHHu2F/OgF2jSPGP8bVXP02w7PfXD55dG0Wb
nF++X2U2wdlWI/20GT8R50n64ruLxvjyzkXTgDc/kfT9E4GVfcZY34ayX/O/
n8hV/O6+Xw+NsVK+yguC2Bj6qOCmaKFojCNfe9VIVI+hWLupVMFTRrjN9rHt
DN0EupfD73RCxwhfaWI4NHpsAlUOmkhYkYxwJJWRKcF5Ao17lb2PWzLEI0kM
XZNvJpBBSNCv3/GG+I+ot4x0yCRizt7Rqn5hgBuCuoY1eaaQxPdjLL13DHB2
4cAMMptCIOzePxtmgC8fLFDoi5tCfsV1vkRdA7wafFaQujKFut4m3Evs18da
CRYG54amUWY/YcWeVh8Xm5TcmG2YQeRq/z7pMT28fzS81oFpFsnc73y7q1EP
y7SJKBhYzqImt5Twkpt6uKYQRePvs2hrYt+uv7x6uHbmW/X1jTnU2HR2pHtT
F+sqbryrF5lHd0oa6ooHdbHHrQd8BXrz6Khv3HWrgn/7V98kY27PI/cVGqbC
Y7qYaTTzUKT0Ajr69dRMGEEXP+Brvhpps4A2qnC7+bIOnpMSvM8SsYAyIq7c
Xn+ng7MU8ha2OxZQ/e41blM9Hez990j4SsQikuaYE/njrI151CYrL9H8Qet/
TOma1LVxcpJ0cIv8H1T/5dnP+0RtjLSZHdjO/0Gncs4X6U9q4ebDG5vefX9Q
msi49N1ALewwjtZsPyyj1WMDSlpJmvjIiJDlZPkq+sSudoDngia+zkQXy7W8
im4t5WxMm2viPz9pAxeU1tChNw4f7nBp4ovtXAz/q1lDztCj9StPAxPzh1/O
9K6ja//LvCvsq46rXHaOLvJtIS+PgbKnJ9TxniLeig63LWRwWOyTPK06FtqY
+ihetIVYPrz8bXAHcDr+vmSlsI1yfrQi/2qE8xuF/f/nsIMinnBYbcYiHORc
eJc3fwe5BTh6xZkhXFWsa+Y8u4Mkdk+m/G9YDZtojFadi/+LXkrS/ailV8O/
XDJwsQcNZMwb/jGmqmLBYKI69QYNBFfdYviSo4p7Zcye3KukATVjQdmpI6pY
gk+UqMG4CxovKscQbFRw/H1V5pc1u2Co0leMnHcCe0szHiXZ0AEl8vWJmXMn
cLaxW6bhDToo0N82CTl+Ah+vueV3pY4OzvcnXbpRr4Rb5Q/cFFHaDStbj+tf
/VbER3lfo6jDe4BZ5/vZ3coK+PH9JZkJPXqYZxKNSKFVwDVvykM/p9BDV++5
27yt8jjn9KWLKX30kH1mtUr6lDzu0Y6vbfRmALEbBEbbuON479dQBt3cfaDa
ZfD8MVUWd9aYVZpKMUE9fcVerXuyeMn2qoxjOBNYISG3QS9ZbDNAFyzTwQTn
i5cJPFsy2DGV969bKDPkRD66nCAhg4OHK0M4+lnA5Cx/geHIMSwgpSJacZwV
PLsX7GJCjmHuV6L9N1NZIeNJ7vulh0dxGUvzZr44G/yxXYv/siKNh6ZvCrZP
sQFTbbsKa7I0ft767BRZkB3EpB/P6ItI49uJ4R9prdnBhtbKusr4MD5IE/so
v4YdXpWWCN7LI2Hv+HgG92ICNB+IofYokHBRf/VDhXECjMQ6xDK3SOFnl7KW
C8Q5gOC0ZypyWRLvzkHiuU84IID+VKW7kQS2eZmxsNDACUkBCmdzhsRxES33
+3ROLng0wMjfHSSOnwTIUh3IXND16m20zgMx7NVte/g6PTfIuhFMJP8QMWcl
9XK+Nw8YtkzunEok4rmCmssFzTzgrljzMluQiMf9lcwI0rxwm8mHZ7+hCOY/
U3VMfYUXhv1vfO5XFcITb37czCriAzaDE4eNvQSxTfwt064D/KAhOHbr/a2D
2LBPx8YqhR/ymsH5wRg/zo4qnxqPEAA30cVFz1ReXDU9ckvpkiAM9jgIz4+w
Y9dqo1A2OxEoyw5QUtlkwxrHFh9feigC0c7JZrEcbNhFgOUk+4wIaDVGrcsk
MOHRSUJgSCwRGsdNy68a7cHeAe/+VrwQhfMXr/7gCqfD49yl9AkbosC4UsHy
tGQXXsL9JrnaYnBv/4kvBQe2PhgWMkXwdouBRWpxarLa9IcJVTWJtVFx+PI8
2GBgZ/SD7sJbv2wxCXibnUjrHNP/oWJXpUE6WQKiz81RGfJL0DlmjUi57xIg
9uJhcc0cFc3nuckXc0lCclUMf6rCDzRMc2GWz1QSoq+MP5l5MYucNTKiiisl
Yfto8mWz1UVkI9FFzRuXhHdC4gISmSvIbW3V24JLCkLYcM22/AZiCnOJfqop
BfK77Mm93dsotczOOt9bCtbWQq7ZVdFAYSFRXS5dCuz9dWwpCbTg4OD9weyt
FHB6DKz9T3IvWA9E7BHclIKAb0+a96zSw0+X9PMtvCSgWgXf86/fBxFkmpKN
4ySQadG6OHCHEbyK7+SXmZAgRZtVw/A0M+RFitH/9iDBTPV/7JXyrJBAS+V6
E0wCCb4ef7YYNnjnqerNnUACW7t3jvXn2GG6sE6KM4sEsWl52lcsCSCifLms
Kp8Er9qvS8spc8DmTPVnjlISjOy/wDUpzAluGTLo2GsSEPStd+4zcMFQ5hPg
f08CzWvKE9bzXHBb8uejiRoS+NUIde77yg1fLaSeP64lQd7mnqqaGh4gxxDq
zvzjDqXfDy8V8ULHNGVZ45+/E9iVdDj1AHRg4kvdahIcefE2cDiYD3rY7l9L
qiSB8+9c5yxXfjh33tRS/N89yVJxuqZ6AvDIgL3r8GMSVHt6H6U7ehC8LW9Q
K3JIMJVnyVPFJQi+punfvqSQgG9AicZ3WxDEHhkQnlwlgeEBwV9iY0IgeMQg
QiuQBO8P0Z674CUMPuQXB9+RSdBjcMnF4Jsw/Mgx2JCwJsG016SlqJkItH6f
vf9A819efrtKvwIRfLnJ95kFSBDKf5dJd48YlM1dcznWJAU7R7dcTvmLQZH8
iytNFVIQo+VSFjogBoIjpYP8eVKQfE7IqrRSHNAvkQChYCnIfZOfxeMlCdSx
JOqKsBR8sn5GnKo/BDkTlPz1UEmgr3e9p/9JBsJbHapuWktAsznrZ5sNGSgy
Dy9o1pKA5P6aGXcZWWBy0HgsJScBbDPC6lfuyQKtRtB1FXYJ4OMcHX4RJAe1
I4YbJzvFQdrjjCSfuDxUhs/mc1uIg+WOb/nvOCUYKMjJJJmKwTOTz6XXPiqB
raLGwgNVMdh7l6+Eb1MJPkee7BU+JAbvlD7nG/idAGUy111jejEg+vPdKXBU
hvqu8eQ4iigsjn4KcT6mCidZomK1QBQymg6g1q8Ap5vfMP4xJ8Isj68ymUMd
amp/P+HQIoKB1yeFDVN10JA2PWgkT4QtWt+jUnXqwIT4Q5d5iSAnOMJKsdOA
LNvEuYOjIpBjr7RLUFMTVun+E68MFQHv5uHRXi5tyOMpXmx4Lgw6qmHq2XLa
4OLHPFX6UBgEnhHuOpprw5NS9a+Fd4Sh7aa21VCCNii5BTS1RgjDMcvHHyc3
tSEyzuzmbnNhWOo7e39zWAe6kp1fcE0LQfjYnJ1IqR5sFryWdyoQBBu7hPLR
Zj04OrTn9q7bgiDdIMxSOKEHBNIZqZoIQRgotvx8SEQfuvurosLsBUHd59Vx
+Qx9qJnRUutgFAS6pWA2/TADyIn+cEMp5CDcoNlp8tEzAqeQiTbDkwKAZ6lb
4G4E3+aXfmkYCsDi98fH2K8YgVjlVzMzZQFwrDK9U/nSCLLMe6H0gABIBdx3
2xEwBqWpM7a3/uOH+lG11dQlY3jhS+zm8OQH2oZwsVd5prC0tnWGfJ0PFCvN
7eOqTaGpZGuYGMoH5/NFk+y/mMJB+lyPeW8+oEa1zG0ymsHuweqxcks+yDvB
X60TYgb5gYLd9Qf5AJ6+s/xiag7PzmuS+t8cgA/1V2quRFjA8Bhbx/slXtia
7TBlSLYAiaEpyvg4L6jxiH5Pz7EAoWCKIvEbL7w/07T29I0F3CHIinZ8/McM
3HL9Cxbw5dDpe/tSeeGdUVmBgpclbLMc5uU9xgtv2ocTZ82sQPH5YHN6OA+s
rMjzhrlYQceQ9DmKHw8oCiUU7vGxAu6blt/WT/PAa9+jdQKJVvDngUDJVYt/
zBa+ZVRnBWJ35pV/i/NAhRWnb5GSNeQqPC4idHHDyy96Nm7CNlDE9HCaTZYb
cj8otS8dsYHpM2mq+6W4IblAyiBe1QbYhevjWYW4wStgv1qpnQ3UtSskAzM3
CLC0i24l28BuvSJTmSkuSNC1Xcpat4HURPpLdoVccKqCnNbRZQsdci93r4hz
AXNadCfE2YNcn191kSInCD91rPmTbg/pDinSf49ygjxFvvTpI3t4KbrD6ybJ
CY6Lkze4P9rDSNxcFfByQrGVpf7shj0oi7vY+W5wgDYHEd/3cwDvoxLtcR85
IDSjrmTL6STs9eLTeGXJAWOZe+PfyTlBplb3/sRoArSnZ/08rOkEv1CwWmQY
Ad7ektK6b+4EBxv4r4cFESApyWg7yscJ/MVPH0k4S4CjkSmBuoVO//46RXPZ
ggDBp7ndOg84w21T05uLRAIwyEsoj9O4wL6Wq7CvmR2kqbrT7B2uIM+0oOJE
ZIcLTmH85dzucOJ5vloRCxvQLoUMkqY8wP5bt99+HhYwdjvC9SDXE0heNaWa
AUxgfLaGGGPkBTc62Illf/fDvjshba/4zsISc3HTkzv7IDxrYnqk5RzEDg6e
8vNigGc4osjtoTcYpkUK9ynTQ0b0vLLJxQswInj/7/ThvSDDy6+hIOAL6h7p
cu16e0B3qtJfMcQP1qJB6ZXbbjA5rrLdaeEP8a3vS+Oz6aCsSTqIKBEAfxoZ
3z4doQX/gHLlu8yBUPPWLD/iMC0w7+WsShsLBLR54bxD0i5geMYQ/7IjCNok
5yV1xmhgQK2fxfzpJQh1y4pntqUBFn7emPzoYNjs8Cobzf2LchmntIXOhcCs
YNHKxI0dxDCRVXNA6zLQHml965K1jag9XxNVj4TCHaY9aSn3t9AKa4I6J2cY
DBziPZn0ZhMtK3CUeU+HgdE12dUb0xvI+qLshamecFBonY+T491AN24fHpso
vQJBWzplKq7rSJA2w+BebASkkAKMhl6uIba41I0Qn0h4X8Z2Yg/NGvq+6OXV
pRMFUyyiDyTdV1FT0dClbIMoMLy1FejnuopeOzvEuZpEQRWr1maV07++VW9Y
MGUdBUXnq2jN7VaRdo70CC05CjIUJ8eijFfRU81Fl+NXoyCGVZq4pLCKQm5F
2GZ8iIIoKda1sf2ryFN3xdOxNgq05jcjFBhWkcXGxSDhz1HgMymoErdnFR3y
dEt/1hoF2aeexIvTrKJBJW3qp/+iYEFtauL88grSGWIwXV6PAl/93Qc5f6wg
2YyrztXbUdBITlr2GVhBqWLblR9poiF6kOZd/bcVdKX/0ufru6Phb7oId0Tv
CrLTPvOTwBQNYZb0J5abV1DrfdHfy8zRoHiGkGnbuIK014aWvrJGw7c29m+v
P68gmecOdA84osEqP3E5/OMKKqTnYozhioaBhbLqoQ8rSMCDSjjNEw35l0J1
dKpXUNr7m3wGB6JBT4Uz7snbFbSPx4h4mD8a9DfF/Flfr6D/AwDvCsM=
     "]], 
    LineBox[CompressedData["
1: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
+4gV6vs75qUcHwOV98t0pgmWSGtk9rvL+AsUXCTlnw62RMMrj0J+/PsFhLQ+
GGZaWuL++4ylYfFfgIFSkPiL1xJDb5xQL6v/Ar2NrnvSci1Qdvg3b5fBVwjv
qZOdrDJHmq1u6Q3HcbjO93tpO9scmcW5FmXPj8NjV8la/nhzvGOrInQ3fRx6
x+MdzKzMUfczv7LoyDioLpleeT1hhhv/HD7Hc3wCNnb3DcWwmaH81uVpuoRJ
2O28o+DhoikGO132u180CXKP1E6V95viHg1L4mbvJHjsf8g8k2OKDxzYaErE
pqBWxUvVStUUhQ+zEgF1UxDn8D1J2NMEX1AaWbkFpyEjXdBVTd8E0wXJhbuN
p6F8xEzKRtYEz4fxkikR0zDlX/z+6m9jfChD81u2fxqMIk7P/LhmjHnJBkU2
mTPAlratW/XKCH9YnXq3YD4LUkOH2D/eNcIC3RTKePwsEKLegz8jjTBNsfhP
RO0snCyghoobGKFOripnhMoP6K4gZyQMGqLYs3XHk1JzcG+Qe8WRzhAPu5sY
DYnNg09VWL/c5DGMDK04KBowDwqPOitom45hOOY83Ho1D81ety68uHkMz1tq
vzIUW4DNb8y0f/mP4T2FxOttbxagqfn4154NAwwTrb+5e3gB7r5opBaMGKCT
idxKHf0vOBh6Nd4mzwAtrhyc8Lb5Bd4rNKxPDhngnEZMG2n5fz7gORfJbYAx
olSPiyKL8KcSOyyX9TFjXGNUwWQRUi9GJa+/00fKRqNTdM4iNDCs7TE/po+5
boU9N51+gxzPvNiSmx7W3VP6PDu3BOtL5vTNWnr4VUvlWZbkMjT0vZx4JK6H
HQlJKdpuy+CZHvjUcFoXeRnVrUw7liFFbEru4Sld5OKqknSvXoHVQ8NHdK/r
IJ/FN9156hpceXDvoWioFn4PbfhuYLgF/qTh4udqWlgjk7p9/tYWGB2QrFem
08KPy1Udon1bwF5d8sPoLoHLnAo6o/7bkD7WBmFVgLMNd+bZk/7CxWc8Nhtx
gG9cyrnw01/wCnfxv2oB2EC24rrPQ0NIMUzfevBFE5d+SOsaeNMQJdL0Y3U7
NPHHD+0vEXS0ROqC8ZJplwYm9ZnYycvREmcrb+/sS9fAA7dN2+IcaAlNU2HF
7/Ia+DMtipMopCWaQo7GctupY55i0fMeHzpitDxU0idbDTXZX7Nc36QnKJfe
qM0FqOGw9wGykjIDkWe4ZRZxWA2Dd3DWzwUzEIGD18/caDiCqn+C+vK+MBAr
m/kNr3+oYvT8Vrj8ACPBpj90nOGoCip/p2kUWNtBLLBKXLxFp4JlhzjXkrR3
Et0fA5L525SxqKr7yq+EnUTav6uVcp7KKDki4E4SYSYkb3Dvsr96GPkqA9pI
diyERrdRYX6XIjJIBD7vGWclGnaUMelmKCLb9r6s5CNshA2IeI34K2Jbvma5
QCIbEViwzM23qYAk/p2sZUfYifRLuefIUgr47+UgDiKdgzA7Lphn/PUQfor9
wJe6zEH49vxyiI04hCUeDGJcspxE6rPM979zDuJFu9Tg7GucxJL92rW+FTkc
06RPF7HgIljrOtQ5EuVQ3PqdF2MsFyEplz9nKCaHs396Pyy+4SLs6GxsK00P
YJnFtYPSktzE66IXwhnZsihP9qIfY+MhWvbGdvWqyOLTpFdh06Y8xNc4pzi2
Vhk0qliKib/BQ3C7Mn6/tCyN02qx0W0cu4nwHZ7l3iZSuOciX/OJg7zE9XCV
4+mj+/G19YQ81wVeInd4l2DP6f34l8Qj3dnMS3S/rojWz5LESKHzGwMn9hCK
Xtxm0kviSG6b4DPo4iOMW6e3PRPEUeIk5yidAj/hrVpTkiYsjr8T02klk/mJ
ZNZgPhZjMTw433gj3WUv8SXsxn+DGiK4Z7r2LyeLIMFppHbA1F8YDSoXv7y7
IEhoC0/efn97H3LHk09mzwsS2S2EW9akIFpeV2wfHxYivCQWF32T+FHd5mme
VLcwMdLrJLrwlQsjBV0uNEWLEcVp4UfUNzjxV5wvT2arGBHtlmgRx8OJLz3G
OQr2iBO6TZfXFcisKCFcNjv5UpxomjIvjTFhxLf6rhqtfRJEYEjMGO8Fepzd
/Xg3s6gksWuljP35C1ocimf1vXFckshgUevL27tZ7X+Mfvf4iiRhlVSQlKg5
W+17tyMsi1GK6Cs8azS8PV4dyhjiVmsgRVSkJdC5xQ5WM1m889GOkyKiA+a7
dj5+AdZfZiXWN6QIyVc5BTXzXSByt36SXkWaSKyMFUxSGQP3YfoMrmBpIjpq
6tncq5/wJrR9/3SPNLF1MPGcxeoirHdF/bnFIEO8E9kvJHVvBc48mONdUpIh
IjixZkv5D5QzXRtm8ZQhlGkdfT72bMGnGyP1jWQZYm0t4opDJQ0h+Pmoifgr
GcIxTN+eQqYjQpO/snB/lCF2k4bXHkgzEffOH5bO4pMlwj89a2Fc3UFk7n2g
fkRFluiyOZsR1sBMKF+5xO5sJUsotOqGDN/dRbw6cefMzgBZ4pYeh7axHxtR
KfZI1PCyLDFX9ZmrXJmDcNcfVxO6I0tICfSGccZyEtn77Yxv5skS9g7vXBoC
uAjzA2TrvNeyRFxKtl6UNTchlZd2J7D2fy5zt5K/gpsY1VEf4vpPlvg/2d8z
Jg==
     "]], LineBox[CompressedData["
1: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
380=
     "]], LineBox[CompressedData["
1:eJwVl2cg1Q8bhiUlREaiRFZGKZQQPT+pcOztGBlnkCQyUpL+SEJWEpKskFJJ
qUgejiObbCpKZiqzUBm9vZ/uL/d13Z9vCaq3hSsrCwvL3jUsLP/PkqN1NXGB
rlh3YoFtxqsKjD9vVmvzdcX+gCs5NL8qGLtEvc/n6Yoal3J+dZ+rgq2vVmKT
nFzxwpEPRtUhVXBJSYWcdtQV2URZ5JcSq0CoNbThwyFXTFtAifspVfDk1FtN
UVVX7I4qYT+RXgXD+R7iWXKuGDkqTxbOrwKSaPZEHrcrPoyOjfV+VQWfX005
jK93xYv6ugkVlVVwwfZQqxyLK245//Ka1JsqeHSj92nhHB37LB7ya7RVAT8n
z8XiXjpyfXAdzRmvgg8LF3gqsulYz3G27K8IA/yT6kNW0+jYvFXkrbgUA3j2
bfmhlUTHhb9hp9x2MeDw6eLe6gg6nm4UvEM7yIDc4fGs+lN0lP5V6nTMjgEQ
ekCA0/Xf3t2W6XsUBvSIXb5i6ETHvDELR3UPBnDYi3m0mtHxQqBq8VAQA7za
rPZ3HaDj/k3RqqeyGcDulZMnqEhHKlOp5GghA7K4ZoTIcnSU0nLSNXzOgE7d
a8vvttHRynLReqSBAeoVjDef/tIwzpY9TnSeAawP9tp+a6Ch4sKe42heDRuK
2BNuV9NQNL6d875TNfCUDNYZltOwTqjny61T1SCCiWoPH9LwMs8utYAr1aDS
sbDldDwNz3VucPIsrQaN3rcmopE0fOxy7G5/TTUc7i+IaAmhoRQtOUyivRqM
x+wX9vjScGqH7B6+iWpw+4PdU1Y09KDMHZ8WZILn3xTuTGMahjmsNnuIM8GX
zUfHVJeGazSsYm7sYsJ/PFLPi9RoeBXTrw4CEyIElr87K9Fw2T4/iUWPCTHC
3dK88jSkCB7NeGPKhFTJq0lntv3zveTXPuTChAxZl2ZxARqqciUsT51gQq7C
QbZ2LhrSTzxJI3kzoVj1m5/yChUVfSbe/b7IhFLNmsLP81SM3R++3fYyE/Dw
neHrU1S8cNFSyCOKCY0GppZzn6jYF2X9viKJCW2mctdy+qj4kewFXGlM6LFa
w7RopyLPy69aUplMGHZ6tu9ZNRXbZwtj2wqYsOwrxO+fR0UbsksNWzkTWM/P
6EtnULHf2D88vJIJG4IbQruSqXhdVNGKt4YJgleDZlUiqbiV3/C2dwsTtsdY
yY+GUNHk0PUbVh1MkLy+h3IzkIov492d3XuZsPf2p7Z5DyqGWW20gyEmqGSV
bsinUZEywcrH84UJGnnXD9scp2Kj4Ht1hSkm6BUdffLCmIq5rdvGTy0xwaRk
+xc3XSqeeejKeou1BqzK5ncIaVGx3iSLsYuzBlyY9+LPKVGx5cfRiNhtNeBW
H1InK0/FxMLyVbpUDXi22P3tlaBigsoLu8cKNRDYy+WtLkDFB08KNNMP10Di
N2+T3/MUrAqljQydroEjfBcSdk5TMG7vssS5wBqYVQ3vMP9CQeeDzzacvFID
ZmGpNg/eU1Aq83yAbUYN8GxlODlUUpDbKMx0ubMGonT5vSsiKbhVzLBX2eAN
hGSXxIeKUNDywXDakcO14EX+3cah7YKt4/KavjN18JSzwMFWwwWZEpmjzct1
sFhhM5a/3wULQDpLhKMeQqRLlo7KuODvDIbzDYl6SJz1krnE5YKv7TZMfjKv
By+hhsWRQmc0lREf6C2qh8VgGe6wDGcM7c6Ncin/x49cltxx3RkD36hu/Vz7
jy8mjO0CnPE9Z4ht20A9vDQsyWk57Iznrq8+yedqAJaQTOMX3U7okehjUney
AaLGlqmW9U6YNzV8mSOgAfiN7c/PvHLCK8M9H/3CGkB6m+DdXVlOyP+Jrv/2
dgPol0T/yvBwwtM63t+W2hog8cvZu1f/OqIA67wE6DWCiGlnqfScIzZabfI8
SG6E3OdKrYwRRzztZtEQeKIRXoZ9+7XU4Ig7++/JVkU2Qv92ismZJEcc+Plb
fGdrI+w0N/ptK++IhyzL/1OkNEFkRNWtzm2OaCt2Oin5bBN8L1fRMNnoiEQV
5+C66CZ4KiMadHT6OPrID2UMP20CYnlyec/z4xidebbo59pmsL0Xz7JW+zhO
BJPXP8lshvL+tdnB+47jw/jZFPenzSDGf177l9RxVHZyv/e7phlGL7qETa7/
x7/35imeaAZfC2W2vmYH3BHkGLOi3AIxKx3sj2wdUH3fzI0zNS0wvU+vQNbA
AUcatmmk9baAhXs5KUfTAYc1nj3e/K0FtnbejUoRc8C+J5sixQVaIb/Anyts
xB7FcypTgt1bgePjl8LlbnscWS+hKfRfK3gKOBqdq7PHwfJ8f0huhX2XdGI9
H9ij+ddUVqhthUrLLZvIZ+yx781aXfU9b0EyKrqonWKPpNlr1u6ktxCBq6ZG
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
MeYpy8aQJzg2zG0ar+QlPmlr9PO9kSf+B+5kXPw=
     "]], LineBox[CompressedData["
1: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
DyWl8Bo=
     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
kF0Z82kCRCe8/jv1lpj4DyfhvFk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 3.*^-9}}, {{-4.*^-8, 1.2*^-7}, {0, 3.*^-9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226054125575*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlnc8198Xx61shWR97b335n2sbNnxMZKdj+wRPvbH+ohKyqhISlJaZGRd
lNEihZBQKpSUmRV+n99f9/F8PO7j3HvOeZ3XvcI+YQ7+VBQUFGWUFBT/Xz+9
V8h8dCMIqS3oDFwMXsJURteSZsqDEF1R6kD5mSUMR1Wr/rk4CHUxHzpNP7GE
JcuHLE5eCEKOdV+8hfWXsUqc9O2J7CCkI5PX/v7mMrb0sIJjNJYcr3Vo8FLg
CkZyL1jtdwlCN5Uy2x1+rmIPs2xqXtsGoT6+Ezhq8zVsuJbR96VZEFLNao53
r1zDhOjT33drBqGao/34PNw69rQ+qraVKwhNO4rksd7/i01NK+KbDwWhIUHe
Op5/fzEapl9CTXRB6CnhrOthyw3Mztsvv24Dj4yucQbfm97A5lmOh90dxaOU
7ojST0ub2EFtNsk7b/FI/eSIR4fiFqbm1z9V2YdHb5uNq1KDt7DUFhObG014
5C/mydk5vYVVfaekvf4Ij75z6PznwLmNvWFF7dfu4NF+oQnzguU2xn1KQ764
GI+cr0dL+z/cxqBg5dvlC3jURe/b7TO5jfm1PywtyMYj82ipI+WMO9jjw5LM
52PxyFY2tJnNawcz6+RayHDBo4shgnJFmztY8MLQTaItHuU6/EqC//5hBZz5
bqlmeCQjNDdTofcPmwqmf5WgiUf/HeeMHUn4h9GUdKfFK+JRIaOvw7Mr/zCZ
56nasZJ4pKv0dPZW4z/sDM9WdSQX+X65A1yExX9Y6dEGr/BD5PxtX9qQ6Hax
Z2ER3KF0eGS5ecMaCe1iB3t/ZOM3AtHpzvW5t3a7WFXkxwCv0UDk6Vz3qrF6
F7suJXe3diAQUc8s/P6OdrHCqaQFqt5AdGTpt3Tc8C6WYSkcfrs+EEUwzH35
s7uL+YgExv+8GIgGjxnK6VrtYfzv13OjrQMRS9WkisWHPYyDZDbQYxyIuibn
TBpn9zBmuMLKpRuI3g5I9O793cO27+oVNksHoozF/zZVuPaxsbT063u0gcjK
WmrtgvM+dlmZrZbUdQoVOGR24of2sbQls53HNQFoOepDf+UsBRjtPskpvBWA
pl6pStv8pgAqRiFuwrUA5ECZgttfpwCi6KaacW4AyhyJDiAcoIQM5+rQkaAA
1BP+e3xcjBKy2uhntqTJ+4VHOJ38KSGP9PKFUbU/GlD4+kngFyUUCVkVDVf6
oXfMs8aCTNQQV7j98UupH+JhzPiZxEENroz3BP9c9kOCB8vy5/ipgW+N/i5D
ph9a28j3nFCihpt9va3g74d0jtz9oe9CDQ9Cjb5Ui/uhRpu94Lbb1NDdpi2X
VOWLHCl2Bs6Z0UCV8o/ws9d9UXHJydUJexrIrippKC7yRa3rzFTKHjRgmb8B
dVm+yGeq8ORyOA289W2wnwvwRT1u+0dHr9LAR0blWHtJX1Se6/SmbIkGlnFS
z8SrfdCQlsAqVdUBqMSFXMwq90GqWxEDvXUHwBlX5zVX5IMueX/rLe44AG0u
evvVmT7oFY6T5uT4ASA52+nJ+fqgXsva+WgWWhByimtUEfBBmqk8DKGxtGBj
++Ke/mVv9Nc9ySzAkQ4obVkIN3K90Z6F/+Mqbzqot3GwoEz3Rr+ygp23w+iA
1+bT3LMIb5T+6VDSZB4dfLdeEjO19UZFgujE9T46SLTkLrdm9Eb2iXeiBA3p
ocYk8JJrqhd6oiNqG2vIABKlfQ+PxXkhlUqn/lE7Bri5IvHKMNwLKdR/1TX2
YoCr5d8pZLy8UEjquWrdFAY4u+UTuq3vhYxPHvnS2s4Ag26tBRr7JxGTNCWK
wRjBUqZqr3nXE43TrXdnWDOB0aif+s1FTzTYlPHIxJMJtDNEg89OeqIm2r/C
guFMIDV1Y9yt3RP9sNxi573MBHQF1+p3Ej1RWasajegkE3Rv5Qdh/06gbRzz
CkUUM8DLhA+d2x6oVrLhd1oNC4zl+ovY/fBA3iWmJS5dLBBlYxs6PeqBlGK3
1s1GWaB6SIR2r94D9UoaDCdRHwT2qZfqumEeaN6SmtPnxEGYW+EqbPjqjh6U
hYgych+CfL56x3tv3BCNl0xPwXFWkJkuK9dudUNR8hrmz31Yoacie+HFXTfk
kKLOTR3OCtsS7ulzWW4olV7A89FZVvBTpnoiZuiGNDvcXtZ3soK2qR17eYMr
gjK0nKXIBjNhvwYvXcchgor0mwg+duigOpETfQ6HnB9N3/0oyw6lhf2GxxNx
aFu7I89Llx2Otz6s43TDoYY5PpZuN3Z4QRtx+coRHPpaTIf9uMoOD8vWXcrz
XFCjPrNWkNBhILzem7pHcEbJlR/VPDAOcPEMK87FO6PNgb3MZVsOUFuetg3G
OaOE5CTLCh8OWOTs6pTXcEaPC5cUnEgc4OWTfvPx8nFk6WbBJznCAaZbdAGN
gceRJpOX7sWYI3BYkm2xy9kJSV3Rzece5QTiqUbspakTor7+PfXwIics3XE/
P6jhhDw/OeSpUHPBgFSV4jSnE5oVN377UZELSDK6kf8+OCIno+YXvWe54J+8
/4aGiyPCZ9u6T5hyQ1AoozmYOSKBrXj3v57cMP7wUYmJpiMaLh3iVI/lhkbF
bW0nLkeUcPiWtnA1N0QoX0iMGHVALdPWXMNMPDCr1kx538UBlQ3HEmYneMAp
xtPhiZkDOjCXojb2lweeN1DfatF0QF46lbE07LxwQ8Pm6EsuB9SPWQWwW/CC
m9bXrNlRe8SemXResoUX3uqyMAvj7NFwX0L+cvV/8NTIm7MIZ0f2s9a/X57y
w6sS5cSjZnZo/8jCp40pfpj4TTmzom6HfklE9bkcEIC9qzcf2B62Q2Envztv
OggAabYvh73UFtVb5bp+XhaACrP+2c0sGySzXR8nISQE3ashdcf9bFC3DsfN
VXUhmC8/mFxnaIOOFeMstq2EQGHT9kjwv2NIWUXlYFucELRUvzeejjiG/HiS
jcxHhOA9w9iNHg9rZPgq58/ONWFYb4gLFtGxRjiqM8bKjcLA7cOjlcJljSak
xxmbBoXBs8XtrdZ7K2Qov+HSQCsCP4Mmd2vMrNB4pIpTyhkRoH4z41agYonA
pDBP1l8UJOLSJf4cskQHNvt78RmiYCkmtmK1aIFMCIcYtm6JQn6if86Bagv0
l22hmuWbKPDJzzfF8VsgWivahyqBYqB2fpHjJL056p2vqMcTxSGhcIOVYd4M
HXDQcxW5LQ7PSilZnvSZIa99nzTTF+JgW3PkAF22GbpNPe72+ZAEBL3A1h8e
MEMjmtxqfZUS8Pit2TLuuyny73k+avZaAjY+2C9S9ZgiwlrvnsOKBGR89//u
nGGKeFhZF7iMJKGc6vzIHpUpqrYalkHzkjDLUPKuesYEidebV60flgI5tpv9
Ds9MECH+B+d7fSloEWzsqUozQRXuKffTr0jBsN5Ugw2FCaptV/aiPS4NjLEK
Rdd3jZFcsrkY028ZsE/WKjCfNEZ/24vCE8RkoSTT6PxKmzHSrsGmH7rLgvhl
5yzTRGNkGBo5jX8jCwa1yWd+bxshWdWXFcVNcpD1lBRZ8tEIEWVo+DPX5KC/
oyDUqMUIWXYyM7iqyIPbQFVAUbwROqf+8ez7x/IQszDgDJuGKNRDquVgiwK0
rYw5zI8aoj+Xq1kV9hWAanvGpqDJEN056X8y20QR8uk3TGfPGCLil90S8Q+K
UCMuqHl+3QDFnf1bFZ+hBCty0qpaIwaI0fqP/+f7SqClpqo4U2+Ahq/S/FD4
oAS9RmaSGtEGyEr7qWadrDJ0dUwptH3XR6yJfKptX5UBd+jg+PEqfWRJyKF9
c1gFfnti6X8C9FHf3KFqERMV4N27NioyD8judur7zzUq8PjY67S2akBJN412
T31RAdOybVlnPKDZ1pHkGG5ViNRzTc35iaEVQ9s3gbmqQJ9HkhGtwdACZ5lT
VJ8qXJ9oGm47jSGRS5GUxw6owWsCp/TSLz2Ud1JPtjNLDcSah945/9FFOng/
ncO31KGFnjpx6ZEuYnuVKU61pA52OBWJs+G6aM2VcTdZXwMSN/IJ7cs66GKC
+VjJrAawm3WKudTpIMdrMeyxoAnVRX8GliJ1UF7Hax6/K5owom4jKramjSyK
z3+lcdWC4Myk/vZ6bXQmlukoE9ICqpH7sS4x2ojZk228R0IbFKKZ3pz9q4WM
J/sUBGh0IKvuRfTypiYy3bhnfWZNF/ioNgVymzVRu7TJUbkkPaizl3wpRtBE
qu0OWclMGEwvZfLjdjTQuS1qMz0dgDMGDX3LrRrodPZ8r/MEAHP+t4jcRA3E
4+L9ITBdH7QUjXvRrjqKUl0l0McYwEByZDgOqaMbxJCAjmED8Buo4F1JVkdT
gq00/VqGkB9CESZOoY4o/HfuzRw0Aol2RZ6OTjX0JmBEKyzNCNqYTz7Hpamh
Uon2LrctI/hR086VR6WGRPQyHGO3jSF151eX+HNVVKsj1W2ScRQ4rfiCO9JV
EXPz6tt7HCZg9JPQuUKjih5e/s+k2NIUxrTvBeX1qKApv7CNd0umEJozziGR
pYKG/j5wZy43g6tSWnhXOhW0IPhImuaIBSjFnTq82qeMbr4Ljc6ZtIDevqL2
PJIyWlye+Xz9kSWsBqyzdTIoo/tzIxYCkdZwtlGszfWVEpo3i7510vcYCNE6
BayeVUIqi1zzkydtwPp2XYsEsxLiaq0cFgc7+FTEF9V8XhE9VgtoEJiwA6Gv
Q+HiBxRRaDjljY4Ue6hOMAreXZZHM9G1yhxfHOBX3xYeHyiPKAt9Ax2vO4IS
R+2pkSk5hDOeDbD3c4Kn9wV9H7yWRTkl9ZmXmJzh3+YHLx4jWVQ5F26DW3QG
A5PznplPZRBvBpP+pzEXeDH5z/XEbWkUSimfyTDgCqMHP9qxpEgiWtskqiIN
T+B1v2gTvy6BPH6YmVAHnwTPO+bW309LoCp3jSd2zl4wq99k1o4TR9SyvSa/
7njD3/DLEKIiilj/HD82e8EPdNqt9MarRVC+Q/aKAc4fkhmodUwERRD/vd5S
O4kAoL0Zoc7PLIy4kgMu+g6dAtmqMtzV1/yIgj3qtHfYaagDZqfIp3xIzlIp
mOQbDDqjBFvL2/+hW+0E8yceIWBJjzPdTuZBJ5JDBhJPhEFQELuam8oRVLI0
2/7vZQQ4nDgoqKbCgEYpeVR27M9AgCg2W+K/gl3SxZvyPkmB9x4uCwWBf7HB
epJrKF8qYEURS3mnt7G4S+cUr3mmwlkax6ROLUoYKNYRv/05FXxis7PrgQH0
fdcOqX1MA+7LHGeVDZig7dlHTJqTCAOPK/IeGrKAaZGOM7s9EfjXJ82dbrJC
ZPRRhRvPiZCjsHnM5jYHTN0cx81dTYdvbfCWueoI7K7wBzb2pwNYZdq9ruIE
+rs1teb76bB2it3RnPzveCbPzHHPMwNs/+KGae/ywLGfTUPReRlwL6P8eM9d
XgjbDffbepoBXhVyOKMaPohOnjmjcDATWhWjxinu88Oxpjua0xqZwIma3Tru
C0DGZ9U7lp6ZEBByS0HARQi+3fxjh7ubCXxnlZSv4URgDMO9uKqUBZbvhiK2
x0SAsnvra6BtFsRyx9a5uooC64+3ZUwhWfC+ql2V200M3rNKqH2rzAKK317R
sR/FYH/7h5Z4RxbIq9M0fHATh0zl3672Y1lAem6pUeguAUc/nDPIoMuGRsbf
Z9YmJIB98JhyCX82fLW/2OToIQlLjXdLa1WyAT6ParGfkIJlz/hxVrdsCJZM
iI+YlIIxkieFf3A2XAkVaBk8IQ3b9KuSE0nZsPbPT/eCpwz0qb9st7yeDSJH
6RN/T8lAas3hfocH2WCbW9N27KQs1P/M5bzamg33eFYwZi85SOUl6/tDNox5
FSaf/iwH5043RqnOZMOBaq2OV17ycNhoD9exmA1eGikGOd4KEDfv8OwANQnO
J4mkzX9RgCyFyeJ+ZhK0dvd0mfkownFPmR9MnCTIlc4STldWghxGlV4aSRKI
9I921UUoAVuZUtBrBRI8DZf2malVgtrTTJeFNEgw2/TmpqGKMtSkqBbnGZNg
mSby93CsMny845Eib0mCf/ZcOoHtypB4iMXMx44EdOVtmTtUKvBH7uumkjMJ
2H95vztvrgK0YvRB5e4k4Nem4xc5rwK4nwbbdV4kkMq6H9gwpAI5qUcXwv1J
AEIb+xOeqnCwrt91P4QEFiGlVmGV5HeQSXBxLIIETi2GxVQ/VWHH1oMiLIYE
J+nmZgoV1UD4lVhMTxwJgpzyFKRj1GDhYvyhzwkkiKlQJrS1qAHfm3eSz5JJ
kPr7Q48thTpwLPTvh6aRoIgkfOJMrjp43WeeUMsiQcVIbzXDO3V4HRxu50gi
wX2R4LVSTg0weyEXZ3aWBE1hbAZKHhpQnrJUdDiPBM/aGnOfV2gAZy7VdPM5
EvQzeIw6z2nA59iJo3oXSDDmTCn6U04T7uS7VZXmk+DrrarQpEhN8MBevPp0
kQS/l6xaWJ9qguUgwWyvgARb2PKByl1NsNbzuUN1mQQ0uUX2msZa4P1xEbdA
5kNjumWvSFpg/ufT/eZCEvCKf5k/MaAFy7H7P0OLSCAemaW2fFgbwoVY9JmL
SaDUIZua4aoNOYsKPQVk1mF+95qrXBuUlHMvUpeQwMT1DFfNN2245UdXfpLM
dlX/+YKMDsiPVMzcIbPbaufDd2E6YFn5xHSSzP4GAdt+DTrQHS1zm+IKCcLP
MZlubuuAcALHMDuZEz4+vphroAu0fXzXOcicJek8KZClC5zvXbppyXwxekeq
7rUuxH31oflJjlfadSPahE0PJhgCWTvIfOegaeeYsx4EqGsVZpG5zn2BKbhU
DygE1nQNydxene+y/0UPOnEXb/4h5/NiXf1WgSQGTPFhfv/Pb8ho4rd4CAZy
7hucMmSeupCq01yHAUGSw6yJXJ816dfvpjGAlXvfDevJ9ds/E84fRba5hH4c
kziZGbuP4GlfAkzXax0/R663kKcXhbyTPrCurYiZXiKBxEsCF6ZuAAIWuEZf
cj/vhx1rp8UZgKql37Vr5H4rcwr5DhIMwMzu2nz/eRLo+fY89O00AGYmIhIh
68Nh95DpWStDkJJ45H8phwSO1CPstSGGsO9lwneXrDcnhqvToxcMgUp16EdL
Ngmcj4jFiw8bgorhK9WhTHI/5LXud3oYQfuB64NjZP36nvBi3wgxhtLtqjHj
eBJEtz+e8s03gSNKTT2fyPMU8zym5mydCbz5UZuZ70eCMy914mqHTeAOSxqf
kS8J4ka62fa5TYFBJJm3nDyPSYtjR69WmILW0VJPI/K8ZvFT1gzWmQGvf7ej
Hnm+i5PsY7ERCxAw4F/V1yafJ/XgMNe6BYQOSn6b1iTnN0T/eInDEkT3ZEaS
yf7BLN05f8vJElzTmJqaVUlAHFZwYxy2BF7GoWxRst+EyjJjo++tYF8RaF6K
kMB0vJcqYvAYvGWrEU1gIgGBV8Ds/Xc72Ksr2gucIPsty0C2geZxoBe2v/8+
NBt+XHNopdd3hTKlrxXWZP++18VWyVR2AoSvkB4/L8qCsNPnG1xXvUD3142X
01JZ8NY4ucBt1Qc4OJqOuz3PhMFTTK/iBPxBT2zsco1zJhSPU+08FzsF7U/+
/bq3kgHcxkLXvgjhwee4WwZXQQbobn4s5DM/Db+yax5Sy2aA6M5+ToZlCHCc
iEiMeJMODyyejTHEhcFODMGx9VQ6bJkdf/24PxzcclNYamjTYe/insTqmwjY
7ou50v6ACMNpfxW7v0SCG2NWM6MtEfJKbjXIfouCmTa6FaPNNBCu+RqZ+CUa
zK5qXn1cmQbZvpGT7msxEJXbWHzXKg0GjRq7362dgSnZMA7h7VT42Wfu+oEx
Dir+OL32uZUKc1H5QREH4+GGDol33jEVuv47/WSdmQAC/DvuPnSpEIy/fJde
OAFmBceTR06nwNZkJF+dSCKsDbJVlnxIBpfNcr2f2klwt0w29btmMhQc9LrM
ZJ0M+NqMF0fKk+Cx1Ujgc6sUeC7gHi9xOAlsi63XM5RSYVVB8ZtKciJo8eVE
r9amQjlbG8uj9QQ4JHjhwgelNIiK6BKWi0yAt9F6lGktaTB0tUOYcpYAFJ5H
a//qEOFQ31ELgj8BQhiiLdUwIqR8+i1n6EuAj/W3vkboE0G30V6L3psAT5io
OReNieBtsthb5EGAgOYuwldrIiiuEl42OBLgNYf+0UFPIthFx1zfMSRA0Wvt
0btEIphf7Ey9I0AAqlh8+FwGEaoSKiqj+AgQJnKFQTybCG8bnyzp8xLAPH5T
90YuEVJjvu2PHSHAjkTTjaLLRMjM9l9iZiGAF1EtKL2KCJ+lmz4n7MRDv7wf
dVc1EcY+Hwqw3IoHnfFLpXv3iPBAq52VZyMeDiutDsQ/IkJtad+HxpV46J2s
VQ1/SoQybke5tR/xoJLz5c2DFiK8/1c383wuHsrV2AIW2oiwsZ3aeel7PMTl
hpcEdBHBMKluVfVLPHzXuKFcSf7HPX9eb0EzHQ8OM29ffekhAi7f58Xwp3hA
5/Z9BV8Q4ZfLTtjtj/Egq6246/GKCLxPOw3OjMXD/wDptwAy
     "]], 
    LineBox[CompressedData["
1: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
EQWSarK7Lm+JUK3RKlf4Nwr+B5H/FTE=
     "]], LineBox[CompressedData["
1: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
1pT/5/aaCDtcbFxicQT4H7No/gQ=
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
U+LrJoG0muy2UxcZmoZrWy+/IcH/AN15MZU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226057336067*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
QM/f+s+lP2NAWkNuz62fAPfs2Qmh32PgfyUMEP0=
     "]], LineBox[CompressedData["
1:eJwVlnc8198XxyXZIyPiS/bI/tjrfaxsZc8k2T627BAf42MUUkYhGYlIEYm4
UagUSWZFUUbT3uv3+f11H8/H497Hueec1+uey+8aaOlBTkZGVnyIjOz/65dB
6eSHd/DIv1D46lWyRUxudDV2ugSPtKpW/BxoFzF78nrFb/l49CTg7gMpv0Us
Tsr/70QWHtmp+1s39i1iFfYn734m4hF9RBDNiPQStlhXyjYagUd5dLzphIUl
LPVszkqfHR7Zytik2HutYHUpZ2remuER5brF2p0XK9hQPa3bGwM82rCw7brJ
vYrxUScOdinj0ezPyvKT71axp40X659x4NGP8Nyvq+zr2ORXGZ8WJjwa9Laq
XHBfxyjo/vA1U+FRJNPTS/OP1jHzC+7ZDRs+qO7qbXRPZwObZ7AJrB71QWNX
m+SHTTcxRlVm0XvvfRCV4anzXOmbmIJ732TFKx/EmKbOYdq9icW36p250+yD
rgv2XM9V3MIqZw5R3n7og7iXJx934Lewd0dRe+E9HyQaNtdyULyFHfdSksrP
90FMLZ8Lf+9vYZCz/ONGlg9a7bsu0Si5jbm31xXlEH1QR+nuTo/9NvaIVZQ+
M8IHearzVlPVbmMGHRy/k+x80IeLc3SlWjuY3++PZQQzH3R+jinQw3UHy2HP
dow38EEZ47bwl7CDTfpR915S9kFyAzjxhI4djKKgKyFKxgfZ4U2Vqid2MPGX
8aoRoqT4H7Hxd1s7WDjnVlUIhw9yJzfxUJPZxYpONbkEMfmgOCZNrWLDXexF
YPDxACofRBzkDJK6sIsx9vwk+mx4I6TM85M8exerDPnk6TLqjUCAvf7ezC52
W0yyur7fG+Xomi6c2tnFcidjf5P3eCMuF21To6N7WJIxf9DdRm/0gmnY5JHK
HuYq4B3165o3Cq0W0jxI3MN4BtcyQk29Ucxd+45oun2MLdWgv1vXG8X++fH2
0n/7GD3cPMqh7o2UfKUVHST2se1qjdyWk94oYz23sMV4HxtLSLy9T+mNjAek
v4al7mM3cMz1qZ1eKHr7VjYX+QGWsGiw86jGEw2Knn8aG0EGOnuP03LLPZHh
TNyj1TgyIKflOx5d6ImuGjAbXUwhA4LgpoJuhicKndQgpuaSQZJtVcAw3hNd
KLOu5Gwkg5Q26umtk56o8fbrkd/LZHAl9c1rnSoP9E/Ci08r/BDk8ZnkDVW4
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
LRsFEqoye069BFisZ1CKlY6C/wHj3Spu
     "]], LineBox[CompressedData["
1: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
c3x+OxKkNeW3T78jw94iGo+ZzUj4H3FOC9Q=
     "]], LineBox[CompressedData["
1:eJwVlXc81u8Xxq3sEcnoi+yVvdfnWNl7ZCUJyWOTHrt4PI+sJBklQgNFVlHE
HZUiI5UtipIQ2TP1e35/3a/363X+OOc+13UdIa8Q+7NUFBQURZQUFP9/P3+U
I9WU+CNhy5C5RddfmNLwevx0sT8qvGQuYRbwC3OhqlP9mu+P4nXa8IU8i9hF
2aDFiav+yDIGb+bbsYjdc5G6P37ZH7G1/zSMD1vClqtLOYcj/dHtJgfzsTe/
sZST2Wu9zv5onyGX65TCCladbF3ZbeOPytzuqWglrmADdYzeXSb+KOVgH+VS
/womSJ/08bW6P3Jll5s9H7iKPXtyvu45tz/6GfdGJ/7aGjb5RR7XxOaPoqwY
gq4NrWE0TL8En9L5I8Px5BOTvOuY7RmfrPotHKKr//Vht2Ad+8lyIuTBMA4d
cPga9yZ5A2PVZJcof49DPA00DiytG5iKT+/kvbc49N9Yu0f8ygaW0GxkXfIU
h64sZ3ZvOG5iZTOUtLdrcIjGnmDPRtzEeg6i1lvlONTb1DEfUbeJ8ZxTk83P
x6GvanLNtnRbGGSvfs+5ikOJ82WxX+S3MJ/W6sLsyzj0Y2EpYt5pC6s9JMGc
GYlDs13RkQ9LtjCTNu4FojMODaJDyEp0Gwtc+HSHYINDulY9YeoG21g2V5Zb
ggkO5S6LPKE/vY1NBtK/i1XHoZcGg1a5udsYzY3XidHy5P5uBPjgarYx6VcJ
mpESOBR8VrjbqXMbw/PuVIRz49Ajj0ypyq1trPB4g2coGw6FuahrSbLuYC9D
wniC6XAIaV6vnBfZwVjfzF3GbfkhJ0rG++esdrCy8DFfz2E/xChjMGN0cwe7
LSnzoK7PDwXsNWQFVO1guZPxC1Rv/NA4HV8fw4sdjGguFHr/iR86dK1RZ2B6
B/MS9ouev+aHokqDKtLEdjH+jxvpEZZ+CM7nnLhatItxppj0dRj6Iaam9JaW
yl2MGW4e5Nb2Q6dWYrPfNe1iuw90cpuk/NDYmodo3uAuNpKYdPsvrR/qV52J
NWbew3IU2etS2s8hednU5/RRe1jisslebaUvSlQovVEus48Z7D9Ozb3riwTZ
6SymNPcxKkZBnphbvmjZrjBB0mQfI4hsqxim+6JxPrOUqTP7GNGpInjQ3xdl
P2ULYbixjyW30E/vSPmiuVWqZCe6v1hGSlenQcVZNF/sKUWz/BfLE7TIG7jn
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
/FZZni0ejmnK77u/IwC1yNqBJ9Z4+B++JwYJ
     "]], LineBox[CompressedData["
1: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
tc51RYQA4irSu06vifBO6TPfpBAB/gcOXCBs
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.5902260605556507`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3c8198Xx+0RmRnZe2ST7XPsLXsTHyNbMsqIbD5GwrfQLpVIhLZxiIqU
qMwUKaU0RDTM3/v31/vxfJxxz33d973nXvHAGOd9NFRUVBq0VFT//755qZx7
40IELhWIZl8MXCOpjy2nvT8fgXeO9F7+E7RG8qRp1nxXGYGPnrFuKcStkY4o
RX9/eywC5eWYdGcy10iXPeWvTOZH4EAIbjL9t0b62Xhxx1hiBH5vqB/1ur9G
4n2999lwTAR2SKoZ7nm+RjKgF8h5GRqBlyN87cxn10gUn/JfAx4RGGkWLXmD
a53UmGdf/9QhAg+YTlc/27VOGm7eFvTEMgLDpoz4bUzXSWJM2S8fakfg8ev1
XbUJ6yQLDcPCbpUI5Lh5zkjh6Dopym/NuEs2AplC5XWdrqyT7t2Kb27ji8Cj
cfqtL16tk6amVcLvs0dg9HTW8MiXdRIdyzexu4wRGCegJDC8uU7apVU7fmsr
HBW6ZNavcm2QHAOCS1v+hOOxhRp6DekN0qFiMaumhXAsZF4289HaIJ25+2ar
YS4cqfV6WZktNkjd76vu1k+HoxCXdpuy6wbp83a3mLoxIt/C+noHeYPEpssp
e3UwHLXLR1hvRW6QdgcPTF3uDcfSG9S0HAc3SN7HCiqqO8PRzkwvYyx1g5TR
am5/4W44ZhY+FOTP3iDVfKRmOHcjHO0j1J9P52+QnnFgx+mr4ZinfazaqmiD
tKSfcvDk+XBM3rN/JvLoBok/VEupsjIcRZO3xCJLNkjBHY1nyvPDMb7i4WY5
YW/ilmUtSQxHW66ZXvbCDdIofOgpignHRf7f4j1E/vXw84cLQsOxxYT6mE/u
BknihI9Gvn84Hh/9R8tK1GPZxfc1xyMcOeo5rzJkbpDKeUu9MyzD8el4Skz1
kQ3SVBRT/2HtcPSu/OF3LX2DRFf1MDNZJRxnqI36Zgj/XT0ZuomyhD5X7qrE
EPkdfxgsJoiGYy/HUMoBop5DO//VxvGF48vLDZZ0ZYTeZrfJB9jDMUTCQBRO
EnrHxPLvZwzH6cFXVKqXCL1PKQ1FboXhf83nt2YbCb0ff8kP/xOGvjmlbOR2
Qu/FK4ahC2GYTJ4hX3pK6C0U+Cd4LgxfzL9vvvSG0NtS5EbgdBhySn497L5A
6B33OoQ8FoaqN4Zv1tBuks7JKdY1Pw9D4wWKQaDgJunEVNpXmsdhyGf5i/HB
7k1Sjo34gSu3wrDl4ZvxK5GbpECJsOT5sjCcqU991f1hk+Q9fr9NvyAMQ5UX
xA7RbJGcSlg2izPCkPVehMlHsS2S0WpjlkpMGBrOMB+b99kiaTdRPcoICcOM
dE3hrcQtknKIM+PLvWFIvZwl9qJ8iyT8cqUowY7wTyRTT/RskXZQLJ8/Mg3D
7vveivcmtkiscJKDTz8MV5n3RVR/3yLRLs87h6mH4SOBaPXMrS3Sap3Bifvy
YShXotJ6kZEKlvxLxraJh+Fui0HPGDYq+MLzbqcvfxjGRrucVNhBBe+eqvk2
sIdhpRBNzmt+KhjPzD63yRCGXImkklwhKhjSHnnnsBmKFnd0c/VFqaD3u4zk
xZVQFCtqpd4uTgV4KWnf0rdQPBhQPcEhQQV3vPqvms6G4sDAzSIywY3sQvPH
J0Mxd4/0GT6CrzyKVvz0MhSZnxbFuBPxZw537tfuD8VrNMobJDEqOK7G2Ux5
EIo3NJYSFkWoIPOn5VpTfQh+4Pjj2ORBDRVithXDl4PR8pl6V2cZLVT3Pm6D
fcFYIjccufUfLTTsN5mplQ7GWRqHZLbjtFDyYVH6jnAwxp/u2HewkhYOeF6M
6OEJRgYN1sLN07TgNOB4Y2h7MNKu+2/rukgL6iZUy2/pgzHH6ZxnXy0t7Lh7
Q+frRhAecRlCmWZaWFHwT/u7EoQSE2+fvWulhdELbN30P4KwVO9S8NojWrjH
gwzcn4LwpDCD8cGXtHCqMNpWbCoIx79Jl1q+o4XDW0KlSqNBuI1iqhWxQAvw
5fBOq8dBeLh7xdSHkw7E/BT83DAI274x0FBJ0QH1q9fVgXeCkPHk5Pnz2nTw
sF1XMa0mCCtfZgc5B9BBjdqXA4XngtDteEicWCId5NdU3a6sCEKFTbcIv6N0
YFP6B1rygpAvabqoqJUOFOivZnceCULheyV/ZF/QAWuKe9+zQ0G4Q9X4ZOkc
HQwG3XaaCwnC5AqXJCluemgaD65Y9gvCIZsjZ6nl6KF8z45Jao8gpA02e89u
QA/x3T2i7A5B+K3b94uSAz24ascHC1kGoU3a5XgIoAet6xJ18oZBGDxRQScd
Rw984i+/a2kHYdCZ9MKBTHr4eyJT3UwlCFt4HHdJltLD621qiU6yQVhn5WIg
cJYe2tPftfmJBuHr/A2uulp6OLt8jCqKLwjlFxtNnrbQw5FwQ/Nk9iAMWy7A
7DZ6IE/9KMhjDEKNw2YnR7rpwcTl3PP/tgKxMz3Ca7CPHiT79nBf/BOIh1JN
jh8ZoAc60oZH40IgfjVypPwboodPzdfPtM0F4tu8NQ2vV/RQd5pFZnQsEDl8
2BQMR+ghKjfixs/eQEx+UddgOkwPe1Z3Lm90BuJBqTxvHsJfOeaJDsu9QKxN
Cxzue0EPHLNJafxNgfifTPHLHCL/oqdct3RtIIpMTcx4DNKDu2cLea4iELPd
7x3/Q9TT7mGwVZsbiDxyXPMXCXuMR+Zz5rRAtNjPLST8kh4kPB6fjUgIRMuP
5PnvRD0j7izRTyMD8dVG+g+DSXqguDsaKAYFYrVk4E+l9/Sg736C5ah3IMZ6
iCtPztPDD7fXr787BeKedQNf3xV6uOgmes3eOhD3etXbdVIzgKtbcPINo0Cs
VC37xszBAIxudVYcOkS97y4ZG4oxQKvrD75YlUDcvX7eyVWdAaJdNeZeyASi
C93AST0LBhBzTbqjLhKI3c+Ov3zjwwCvXDpy/+MJRJLU9b8C8QyQ50Ljtswa
iHTyjy+9LGKAb87Fv26vBWDTa4n+9S4GuOt0QVV3IgDzkpP2x+1mhAinj1sn
hwLwrkdh/6QTIwg57Rpc7Q1A8shrX6oYRshyvBXdficAM2NKa3KuMoKm4z8D
4cYAZGh967y/mxE+OwDrkSsBeNi1lLTrDSPYO/RdMzwegI8lqQ57sTABtcP2
lAtFAbgivDc5VYwJbtk7W1NnB2D5tMbkkAYThNpX8gemBOCIp52loTkTCNi/
meuODcDAYvXMVlcmGNgjflcyPAApd7/Z6gQyQcaekLwccgB6yf8TaI9mAvU9
9W4fPQLQ9J9OnUMiE3y0+yll4RCAvv05S9TpTFBlp7lcYxGAM7+d1xdymMDG
LqWHEQLw5T+6It0CJtiw7SwP0wxAmfY8RcZiJmiypQt8ohiAixk+bQVHmYDX
toSqSDAA/ZvZvLIJTrXhP2+3LQBpWw/OMxcxgYrN3v0N1AHYLB+/mE/ke29d
TWL7R8Ybzmv1GhQmOGE9xxrzk4z7Lu4RdslnAitrxTeDc2Tk0TiwcxfBa1ax
9arTZFz487d/jeBGqzspZaNkHFfJEmEsZIIAqzXrpQEyhvI20+UR4++wMtrp
8oiMTFW1m03lTNBrmfv5ZjsZpTdu8N0+yQQplv13d9wi43wNeaWtmgmULNnz
D9aTkTGQy/xzAxO8s3B1H60m4xrva3/HNib4z+KktPYpMnJRSe5lfMoEFhZT
y5VlZCx4bBzD/ZYJ/ppLPvxLIeMzfjaP2EUmqDcP+88rg4wK8a5iAkzMIHOm
t3FPEhkbjXMX9EWZoXpJpt/4AFFfgJKjug4znDr/kWoXmYwxVgb6IjHMwPvb
TEjEk4y2Sd/v9hYzQ7ndZW0uRzIed081vVbPDIX/AvevGpLRMdPfzeEbMzA4
dhf80Cbm/xFWz2/fBlk14lfeq5CRLz6zxUZlGyS7vJvsFyWjcs6myu24bTDk
3VauteWP6hztPZK/tkEfY8oTkQV//LDU6FjBwQKdt3SoGKf90Ws3zVq5Igvc
CfijtfDcHzt23jj9zYIFGtnuRI+hP37UPfs8zZ8FatoSLnc2+qOc773zcodY
4FyYxuTVc/4o+GaI/UUhC1TwLHGWlvjjzKDUm/CzLHC0u8kq6Yg/pkb3qn5s
YIGcmJh08n5/dIs28zZtZ4FUIeU7Vn7+2Hep2LOgjwUSnnz7pmrvj+fMi7u6
X7JA1KF6yZ3gj/q76vsYJ1kgWDLCm1rZH8PuvTc5MMMCPkNyZV+E/fHuVaVa
yU8s4Jw21/tiuz9+CtMetv7CAja7ajbvb/ih5EhuGPdXFtDNkYwqfOuHl3fu
MYgmWG7qwoR3hx/u1aO9yU34ixX5c5g2+CEDWJEK5liAX0fEUuGsH/pkb9gJ
Efk5Pr5J4z7qh3/9bF24P7IAY/npW2upfnij9DLNzVkW2ATvrx+i/DCdvf2Q
EWH//ZVf4pmvH7rZhsmuE/E/qsY8b9n5IaWtuUxqngU+mVccO2Pgh5f+Gwle
/sECU0uuj3MU/ZD/+z3ZcyssMHKeeyNKyA+ZHkxMuG6ywDO7lxpurH7446ty
qQEzKzz8VxpBWt+L7Jc5DiXzskJ7jcNF6W97UfS/Bx8kZVjhpgvb+PY3e3Fe
fUDOTocVrlENsP1+uhffj65Wb9qxQnVDkflU217EibVNrWBWOOVtk/q4fi9a
3xyuXkxjhXJG5puNp/ei1Gm17ztPsUJmQJ5Y+uG92EcaWLeeYIUkNnOP0Mi9
KFwQdoJunRUOtNGWOPjsxcV+i61TYtuBzJO5JqpPjG/q+CNq/3aAJ4dHu1Z9
Ma5Xm+LKwwbjRfskHL/4YqmVCtnQlA3i7R32T4/54hzXpbLWA2xQ+0qCYfOW
L26zTJ1+28cGJhWszkcv+aJ57jnhZ0ts8Nbz91mhcl/MK93mOynADlxTTzT1
Y3xRInurQSmYHa5fuJnZv9cXr3m7HvmVww6WQWcHvOx8kUTDqT5VzQ7vpfN3
ftHzxSS6yKqBDnZI/XxgX5K8L4qW9L6rGWEHvnrvZkZ+X0y1+nkhaJ4dWqLN
NioYfFFd2kuVeZ0d7FSVrWVWfPBWUdsXJ3oOmFviO3H7gw9OC5bTKbJwQNZt
6hmzlwTP2i9fZecAoaSvisNdPnjg7H9/33FxwF29kaSgGz4418r3aHUHBzhv
4MOlsz54iC/LQpCXA/Kzyn05D/vgffW3RTIEtzOGLKt4+iCbijT3McJ/sVi3
2F7TB7+IhI4zc3OADNd2qWguH/xw3kzBg+Cu4d8x61Q++JWFdP024e9T+a6t
aMEbHw/o+MnyccBvr35GwSlvZDlJXpgU4IBSoVsu15554/KLqeANUQ7YNX32
vG6bN3YoqubfkOGARxfzv/bVeaMk6+MxbhUOIAfHantWeeOrhx/WjXQ5YFXG
J3suzxur2xgrrcw54PgXs8FDB73xk8hisrYLB6hcVxZkCPbGnIXCJ9uDOKB/
P3/oCWdv/ELrrtWXwAHBajQ3pYy9UfqTyaY3hQM2f33dvKnijTVvNH2aznLA
yTsjNqYi3ih+0tblxi0OeK5f9z5gzQuP9e/24ZvjgPDNcuXFL14ooLHIr0DD
CXQPUlMyxr3weOaOTD0RTtC1cOQ6f9sL2UX4+aI8OWGYSc9P+bIX9oS1ftxx
iBP2P5W81lHuhUzNx2j6/+OEy45/jN/EeOHeDWYpr+ecANwzRyP9vPDElGLL
7XlOmBjpn1i180Lu8cvnpBm4gM3nXOzOXUR8y5nQfbpcUCtM6ajl90LXoAzm
YUcuMH0Xy6zD6IU6fcd+ngjhgqlqH7feFU9cmmK5REnhgqR95hfdZz2RbyKk
8EQxF3DJqXz/+NITj29O3Kk7wwUN8/y6Bx94YiGrc2b7NS6waqDJpWvyxK65
U48H73DB+5hvQ/+d80TkbCR96eKCTpq9BQlHPXFfyFTSah8XnDkxYOyW6omx
M+HfHQaJ8eRgVTPSE40lysUYh7nAra2xhdfbE33tEjNsxrhA3V408o+VJwZ8
/Z1gMUHMb+aY5Li2J542kVFXec0FX+Op3tyT8URDbjUNQ4L7GGKPn+TxxJ6D
ok9aCP8rJ2fsUug88eflpnPPxrkgS9GZ3ueXB8ZNdqkMEfn9Ors79N974HJU
OR0twfrOGoeEXnjg4t0ervpRLuD/eEl5o9MDX5y7fGw7YV9O3DH3ttEDqdO/
pu8n8r3Ylnsez3qgvEZz7PZJLmg8u+JxvtgD1Q3khOWnuaBINYQj47AHtgy3
cPyd5YKwntE+coQH/q7u17z+jQvM3C0zjb08sPCDXUz8by4Q/3JXV8LKA30W
yNP7abhh87DcEo22B55sCm1p5+CG12wnr32Q9sA/O8TVD4hzw92LzEEPd3jg
Qol3a9lubji+O0XwCq0HHgqoL5Cx4YbY3vlXuUvuWFl/alEikBvsvX2KQ2bc
0Tn9NN+hVG5gzDDYkO10R4dlmpUbd7lhlqvhNlOjO87u9bGxGOeGrivC+7+c
ccckT9mME6vckPJ0c+paijsKhg9fjzTdAR5+MZVF4e64pOQ9ERG+A3YvTjtE
ebqjDQO1Gk/pDvjO+6BLScsdr578q6g2tQP669SS2aTd8f6HJVEaeh6oMahW
W+B2x9t1L3kNFXiAHJhd3bTohol7rXb2JfAAaeWXd9k7N3QKDFjNrOQBAUow
d9ygGy6bdjfn3eOB3wIjT53RDf2Hzk2eHOOBVw3mORoNbngl9Rp70TIPNBnd
Mdhxxg1Fy+90KrLzQvErmZXlQjc8yr/y2U+WF8JDKhtGkt3wo4r0QxYSL1j8
Ywy5E+aG0ovLh8QdeUGyOEmk0sMNNXvud1STeYFK9MtoooUb7mzU86nYzwtv
mr2OeWq6odHI80dsKbxw36zfUlfKDS9GLLUrZfNCxZgelQC3GzbQulXwF/JC
XET9vVVqN1xqS7pKd4wXHDYEYyd/uqKauPgd5XJeUCwtlm+fdkWHyNXK8f94
4cKkPYvhaVfsHqda+ljGC9yynN8fuLtiRzLtfwaEPSv0DumJhSsmSDNq5lfw
ws+rPiVDWq6YYSEeW3CaF/w/U02Pybiih6J3WnY1LzyXq1GZ5nVFTw1x2Rv1
vGAQbpvxicEVa+zE/pje5YX6up9D33+7IJXS19mIR7wgMH9CfOWTC37/z0Pe
fpQXKLv049ZHXdCJ/msswzwv/I54103b64KOnyo16qj4YF99LjfLXRd086OP
MBbgg+Gvu4K5rrogbeg+s2dafGCiOHRrZ6ULKjfGB1i480FT1EF68XwXfFHy
AyqS+EC0QcBdLtEFv73lfHLpLB+sK+37o+Xhgq2Gser2C3wQsX+bFVi64Ezc
pG2eID9MNN6oMtd2wbectnvrrfnhjsqqriufCwbnRpVcvsYPsWrHUmPHnNHS
5baP4aGd8C5290BSrzPqvHmXKFG3E+xbJoQz7jqjRMTF0j2TO0FRQ6qzpNIZ
9wy9OSNoIACn4p+wV+Q7ozfL7GOeCAFgvrWffDbRGTU9ijO2VwjAp933qa97
OKNuSNrdt58EwPWgn/NNS2cs5MwpM2cRhJ7btJdatZ1RXveB0yNFQVD/Xfvr
gawzSh/9b4BkKwgXtOzNnvA5Y959xbf/hQgCW+Kv40OMzlhlvqDVc0QQ0u5W
fRz744Sm+8OmH/0nCN/+kLSm55yQ2iO4p+GKIHjrfMj7NOaEHsvSpLJbgtCX
RBn73uuEaimKCf91CYL2fSW5lbtO+ECHaW7uiSDU/HuZtH7VCZ9WNcZ3DwnC
Dr2kJ7RVTjjKoFuyf0QQslOEBVgoTlg6WTeiOS4IS63dEVxJTqhHczYodkIQ
yGuhbTvDnLAMXyimEzyov51V3NMJw8T1iroJ/+vtHg0qOk644uYaUTUqCIWk
anvgd8KKkByZYIL/plmeN2dywmRxmzERwj8Uvy3Y/XVE2kc8cZcmBWF0s8zI
9bMj3nO88NBvRhDMDLXLfMYdsctZ40TzF0FoSX8zE9jniNFHrbdvLAuCeFem
esQ9R2w/uvn4OK0QlFLJZsfWOmLCdFPXQx4h2DR69iqpyhFlzlX+eaEgBFGZ
sVIZFEeMMmXK/2YuBJMPeA/mJzmirNbxDotgIbChaX9UEuaIh/qCOpbzhOCe
SQBvhacjck4EfGJuFIL+KrVUM0tHfP+EdDvoLRH/g/r9kqYjet9KFn3FKQzf
zF5aXpRyRD+tymhdW2HYPFXd4MDtiJajRh6uBcLAsRjHvUntSPSzS8NjT4XB
pCRvyXPGAcuUaB+EcokA5VNvAdcZB1QfLDv+rE4E6svD3GKSHbB6WIOx4p8I
PAdm8WfuDmhxVL7F3lYUdlTa3MvldEDn567T1EuicNFy4NPfPHs8eOeLVNcZ
MXj4K7rFLdge/WZK50V6xODzebYjLcb2OByY83F8TgxY7G5Ys4va45Hlx8+u
bBMH5b8OPFHre9DJMW2HlYI4OF3++a5vYg+yi+XtK7IWhwTHsuvSd/egx1LU
COwTh8p1taSs43twQdvUzfyIOLTWvjSdjt2Dzy1CzfKPi8Nb13h2A4c9KMQ7
vf7nqjhQUe+YrFLcg4cy0/PP3hMHyYZbNSvMe5CbKfRf1mNxsPByi3Oes0ND
miOPH74Qh3D636QbD+3wpuOu+uLX4lDcXMHMWm2HTB2lN5hnxOHGXu2RsHQ7
PFdhuDv9ozi8ZB6/8MjXDueGyJpan8Vh5XZSlISeHcoMUSDjizjwB+7USeez
w0WLsdx2gvXZWmnfLNvi9ELodTuC/Vq9B3Ve2uLLYzpPThHxmSFrp07csEVt
keytHQRf5joTslRsizdjRiUUCO5FA3WHCFuUHhQ3dSDi5yPebtRb2iKzmsLS
z6/isJ3vyBMmaVv8J/xyIf2nOKj2iJzYR2OL8T8GO4P+iINLTCe5e9oG99zt
l6CiloBDgmRF0Q4b5BBvW2jeLgEne6n+Hj5lg7Ob3y73CktAe/zFnvFEG+zH
7fFFahLwTtTkmKabDfq5bP+laS0BtM/ee5er22BXGNl9MVgCZJKyZRbYbXBX
HK3P+xwJsJGSWrL9bo1x7aq2nHUSED30sKO23xrN9yVfPvJCAkpT9xXQ11pj
T7mgm9CmBNyUY3ALzLXGmGOKDj3KkjA6XCPWGWiNrb5jUhZBkiCk9PlukrA1
Xvk73fJwVBIMJyjZI6tWGKN06+wOHikIzJV3UB+3wiK2fbXv3aSg9m3Ep6/l
VsiWdJpK6K0U7C75vsOfyQpZzfxaZX5Jw+ETfziYP1vi4Af6rGx1Geg+Q739
Zq8lihl2tHockAGHeh56xnxLjFcLk2j6KAMVLaLUzSGWWIX5/FFCsvDmvvyG
t4Ul3o82TdvmKAuSDzT+0clY4gnOrmumGbIQ0UdaaaS3xCzjeKVX12WhadBy
0fOjBUoOCwjkjMjCn1Gn7zSPLHDdWoJHc1UWYMrny/XLFmj8/qDVYwE5yPm4
76N7jgW6/7t9WE9bDp5+i5mhCrbAIkrLzuMOcsC1nPz2mqkF5n+m9f4ZJAee
a9kTrpIW+Pz8hcLDCXJwnqZkZJPGAtNULbYiMuXgE3PVi9r35tj00C6Xq0gO
FDmrB5y7zZHW9a/KozI5iOe//mT9ojm+3z3SsnRCDlpF7zyqyTTHk97VORxV
cmCp3N+xamSOxx+4RGoRPGwwddueyhxNfkhFPauQA0Gzz81/p83QeikqgqtS
DgJtlxqqO83Q7fpS1RThX+u8Xmd33gwd/sw6jp+RgwUvhprfR8ywe2wPS90l
OdAK4Ki+4GeGX2JGRxcb5CA1TOCcDZihpfbGaed2OeiJkTq1LGyG945dlyEP
ysG2ROWKcxum2MfoRH9pTg6cjuiUW701xXde1Xnn6eWhKtekZKndFCfwbmW7
vDxMFdsVnjljijckzRcDXOVB+rh7nkWqKZ45rwEjufIQdZqc9dPHFLMO/5Zx
RHloqY44ckrfFB9XXTm4uiEP/+oSUswETTE4eA/vmNkuMGo+cujHqglm3qiS
ny/fBXn3KHFVr01w1qtzkO7zLhjoLN9v0mqCT6KKry6bKoD385qQimQT7H30
nf0XmyJcHGkKNPIywc8fSK/E0xTh85tWv3kdE9wV0Fjh9lMRDn597g5/jXED
jN5ofVCC9qVx589jxnhHVTyKHKAMNKvv7cvvGuPiKvOr0zPKUMr0x+LTIWOk
CRj6cm9WBcbYqU1L3Y1xupddc1ZdFUT4WAz1tIzx3p0O9stxqlAvLapdsmKE
HI38X1e+q8KSoryGzogRLsV2nL0spwY6uzVU3t8ywiiXusanZDVI1ycpFB83
wqTqgRymCjV4bGIpq5VghJ/Gkp/T9KkBq42T5DsXI0ywiBeO+60GLk4+ooUa
RrgQ63CNTVwdTnnuE9zNbYSGOn82Gy3V4UHnlHL7R0MUqHnYLh+hDp7sbBNu
NYZ4+pjmyrt8dfjhR8peCDFEXbca2+KL6pDTGKVUIGuIauwr/rvvqoPA5ukx
ic+Ayp+fv6F+og5Ne55mttcC0n/uf79zTB0szq4quIcDbpsO1uqbUYc33+RH
F+QB+/tms7y+qEOcgVdGwTwJLw0m6qr/UAemYsouyXoSCkdsvOj9qQ7nJu8O
t0eS8NVi6fiJRXXYrTB3xF2RhOckP3zQIPhpCq/8z28GmBD557sW4R/Yb/6q
oMEAX90eYLFbUIe/Ow+mSe43wAyvLh1xgkvCL8t2KBugptPzMzGEv9T9Vy/c
F/QxD8vMV36pQysTberPG/roWfHwU9yqOjh6qssUHtBHG/nwxGt0GvDpasCQ
pJo+Wj6+brKXWwNS/5SmdCzqIQ0Lg7OlrAZwWXZJebToYev59V5hYw2orVh4
/jNOD0N/JzKVBWgAfBJJLtTQw2nj7VH6BcQ/r2kvKbWsizN+s/fa7mlAVG7a
QMctXYwpdz9P+akBNCPXEz0O6iLZfuqCgNpuqJJ6I76oqYvUJdLf+lJ2g3IC
y7PC3zp4fNLGaWRgNzzs0TskdVcH2To5qBN2aYI3d4QYJupgyF9Tv6ulmvAz
8GS/h44ORuZd+5lIpQV5LX0Ji3+10aFD//f1ZC0QovkrUnRfGzdS06pZ17Wg
xUn2iVSKNioZWrir52vD9M9cYc81LYxtmlO/eVsHdFRMH+OGJk56l/xp9NOH
50fiDniiJu47ynTSkNsAgp9fFFg6oomR4jHFzU8MoDSaKkaaShMLknZestYG
kOlQ2dnZtRt9xHZdHfkK0M7q3+OZuRtD1cQNhM4awpf6Dr5imt0IPxzROskI
Mta+PZDu0UD+saZ0gT4j4LUViurM1sBGkcZPd7iN4fopW14vMw1kS529ecLb
GEzmU7qW6DRw1weRbUpnjGFc91pE8SN1rC83n942bgz7CyZ2yOSpY/UTFtvn
202AboKps9NCHZtjtGzESSZwSk4n3ItRHW8oz76e2GcCqkmh3L961XBE/nV8
b74JPO6t6CimqCHv+K03/6pNwJfvcaiMtRqOxlBGM++awK+QFc4uZjWcZE/l
OffIBArvSLV79auirOof7pYBExBjcA35VaiKZZ6VG8pDJnDHLZvjqK0qzl/7
+HuQsNtdaWmVYVXFYWYhPqteE3hTIRR/v0QFqas0TBraifgPrw5I06vgi3ND
Cj03TCBYpWh/2WFlXH6XuyRC1FN72CRqY1EJi2vfzV49YQLfev+Fh4cpIV+C
Y65nMTGfHc2hI1OKaGkkGn2IYgIJ5LB9xm6KuJT37EQyYb93XTSo4akCqpAZ
3H6cMoH1v6PknSYKmCa6/8/NOyZgZF7il3tvFw7tzOS5/94EiFeQ76LyLlTt
jNLmkjCFvrfrXnuvyKN63H8aNEmmwLrrlscTQXkUj8/tHp4zBcdDkW6a5XJ4
pPWz5Z8EMzjeLeFykUkOexjpf7yTMIcxtteO29NlcU7ckppzxRwEfMrsk1dk
sCRB+Pe2BQvwu2pl9zFSBj8pi9JY77CC6l9b1k7vpXE4Lf67cZg1fDK8a9nh
KY23dFf6rX/YwK7i/ebyg1LIWjafVVdnB/vHpU1PmEuhWc21S+ln7aFF6q0R
dbskCj/wm/EOcYTfB45DtLokao3oL3KfdQK9DluDiVoJ9IuU0pZZdoYjzLR6
5qISKCNIdeJ+lCt0u7VqN58QR59jYnaTjO7AUB2rKcwqjuxV2Vd8HnuAzQ85
jYIsMfzb8F/1Wq0XCB3sCphfFMVEc5Fg0yYfUKg563nqqTCKsZf50/GRoQVY
XePuCaH/9p0u3s4BoDeW4mBzRRAjHJ89UbwQCDZMnharR3Zi1g/X52Fx++Dl
hcfGLyP5MYd8X0bodwh462qSrnnyYeilw+yfCsMgIoJrt7c6D7rrzgzofoyE
JZpMFXXRHdi0VidmVRcNKacXdm1j5cYHo+/b4w/HQOGzZ+KtHzlwwcm4RuhS
LDjvZRPdrc6MtAX79o1fOwiBJV95ZlkYkdXtofTg7UMQ19nHevwjHaYNTDYz
9iRCmXj26q8qKowyOdAUOpMMUDntMbi50FF6/9jh5p1HIM3HVePYvrmOM23n
XOok0iHRsFz4XNXbDgUmj/mdOzJAByNeFqjdJJmgnokKdyaESJI+Ve1bIgnf
N81WWMiCl74eX8vDfpNq0+kawD0bSBWxP4sjV0kbBy4kfb+fDYV0LmldOtRg
MpG+mncoB4zE36WT9GjhCrMBs9pgDvwmRWe16tNDt2Dh7F/JXAhMzM+/Bczw
pYBrofxBLvAf31GoZsQCjMeuVuzZlgfPmy4WNxpvh572tycX7fMgZ0D5mIIp
OyTvtzbIPJYHwitvrVyrOaCx6BRsPs2DpGypfq5LnOAybckQT5cPrzgjbV9c
4oLg3AqJbzr5UKD8d4/9lR0wqzReqVGRD7PtMMhawwOH9w8qqnTmA9jmOj6t
4YWQzmbtotl8ODnx9EXBVT5Yydg1t4+BAsuhXC5WtfzQ/vz++xkpCjj89hxm
qNsJ0RfuO0oZUeBaznm3R3UCoCy7O9LFkwL03J9Gs68JwrkBNjgZTQHyRUVP
k3oh2NY3VimaQYE2lfgJquvCYPco/TtXKQV48b5353URUD4j++b8WQrE2lG9
SWsQhZsad5Z+1VIgJPqSsoiHGOjE+/0waKHA8VsWMWljYsS7vx9r71PgwdqX
G288xOGqQWdzcCcFfpgc/ak/Lg5xtuRHZ3soIFSoqnbaUwJu7+TbkfGYAjYv
XsWujkvAiU+P+bX6KJDIn9ji5SUJbIOhCvMEX/YX+HVvQhJq+Kt1egh+WdOh
we8tBZITyw6feylA9YOckPhaCk7rMtCkEfmUNOluj3pLw0QRfcClhxTwTr26
ojkpDQfzzvYf7qYApcdG64SPDEzQn0iX6KLAnW0/Di1PysDtAlfmWx0U+OBU
dtfFVxbUGg67WrZRgOPk7r8tb2RB91spy697FIB3Yzpce+Wg7HSVW/8dCkTJ
Hk6OfSsH80ev2by9RYGT+0Vah/bKwy5Kl4v+TQo8vv1gVWVKHrL171f8aCbW
bz1Y/5jfLpjgz82gJljCjCn1x9Qu2CNUIJHSRKxnUX37Hn8FyF0L0tlLcOpL
+43r0wrA+uDB1QaCr+1cIrGSFSGcc40hkogfJ584EvlOER6o1zKeINaDvlan
s5+sBPP3OApliXrUFya35GeUwJS+MkyEqJeslW5UQNxjLyREHogn5lOSJpH5
mbjHygsUy4oS8217+OiBZaAKnGSeq9uJFPjMEk5z9b0KNHRt2Hg9oECRfJ54
tpoq2NemZA4T+koMjD1oiVWFbz0CjRnE+tw7IB/4vlkVztmvyLo8o8Cnu8+q
jdXVoJGtj8dwmAKLdHE/hhPVwL5Ec6hqnALrTnx6YR1qUK3399DXNxTg+hbw
osRKHZy/7TC2+kgBYV1GYYkSdaCaPPlQ7wsF5PKuh91+pQ7blum4/3yjgMYr
p1tWOzXAd0PlUfxPYn3E/mxN+mmA5NVStrpfFLCOPmMbc1kD/t2Qrj32mwKu
rcaVNPMa0F3YbibxjwL+jHPvT6jshiU942HfNQpEuBYryx/cDcHt3R/0Nyhw
8KJaSnvrbqjOlkzATQpk/Bh95EClCcnzxZyzW4Qe+qmcH8w1Ad1N0xqoCqCC
Ir73UJEmPOtR1hKmLiDeG49rmV9oAv25SCUtgq9LRC2f4dUC92+NN9cJ/7sx
nEaqvlrAn5rOfIjg7vY7RT0XtSCw03H4KpF/gNl3zH1OC/Zd5piqIsYfd6eW
nFfUhsLrGtqORH0fLtXsT4vThoNXVFxGiPp//LRt5bhHXLRyg0RUVynwj7RI
f3lDG15bDWeH/aUAXVGFk7apDpx8SKrII/QQkJ75vPe5DqRuUen/t0QB6bi8
3YvcurBX5jtbGaGnaqdCRo6XLhh+lq0r/0EBc69DfPWzumBOWxHeNk8BxxrB
INilBxXsg73fPxP77VdX44sYPSi8Fz+uN0eBfUYhq8G39WDxRbh7DbGeB46y
WPxd1QO2SdVajVkKHH7dVFZkpA9prd4WH99TIE/W/a1Inj7cbHW51T5DgbKE
NbmWp/pwMLtArO0dBc48uJBgzmkAr7ot8t5NU+Aqm0XXuLsBvJvy2qNIcIvP
V5aoMwbwC6wPnZ2iQEdtqcfWjAHkvj46qUZw34rmpXJZEkwPZonNvaXAK5PJ
H9LRJGBpeevSSvDUsQy9+y0kCK/im71K8Jc30nl2f0nwSqKS7zrBy/JPX0yT
ABYeprd1E7x16IBwfDbAIx7l/f/Pt+0hTzjDE4CDzq+beIjxeDjbbp1kMwRG
is2UFcFifmQqJVdDWI3ND0olWKGe3q7rpCEwqz+urSdY6++1SpdpQ8jJOef5
kuALErWx8VxG4F/4xOAbwTJPUvhImkbwz4qRvELw9Zg9HQyeRlCSFWI6T7Aa
r1jQUIoRKKxQlfQSfKd9ienUWSP48WQ8vZBgg6BHjUFdhH2n9lNVgruZq1yV
PhhBssFRl3tE/ZZNEau/6Y1hJvjSO1GCn7mTLnTJGYOyFjkxhNifzhvsFoW2
xlAgx3CsaJICLrQjXM3RxpDYtmpx/DWxv5hPTY8dMwa/bz7WaRMUcGP3v77Z
bAycEQ1FlsR+d+eRSpYeNobBAqr9y6MU8BD8Ym73m7Cr+RzKHaGAp3gjVzy/
CVy5EPZ0/RXxPynpXO/yNYEqN8lzV4co4KOxkTR3xAR26E7EvntOAV/dbnO2
iyaw0HaFdtsABfzM7aZ9PprAxdyD1fpPiP1ty3k9i9EUeCo8Z6yJfkF2Gk2q
kzeFOklzFbdHFAj0OG0+ZGsKhV5vishEfwraS+b6E20KTL0hM/uJ8y6ho2kq
qNQc0uNmS9LriPOg52B9YYs5eP1s084j+uGhJ3pJzcPmIHV6bqjiKgWSRh5y
bvFbACV54PLAFQokTxZMSetbwMDZhNqFyxRImbGvt9trAbKeEQrcBKd9Hzc7
ddEChC+e3XKrpsCRX2c5H/RYEOeppGjsReK8+Rc4NffRAg621bjlXqBAFv33
RM1dlnDg9aPlsnMUyGZpMfO1s4RiDRuBfKJf53Amcmbvt4RPskXMMWeI/SRM
XT/UYgnd3KR3XKcokC/5OPHPsCUED/A7DVQR/VC+yEzkjyWYW9wJTKykQKEm
z1SkvhUo/XU3OHWc6A975DkZH1qBov11HakSChxz+fFW6ZMVWOyYlQ4upkCp
181rrkzWsFNuNa2qkALl+0hm1XbW8O7jrNlsHgUq05wSSSPWoEqWG9idTsxf
QMTy5UdHeNE6WE0nTPTP7c/zjbTdQM1fa1q5KR++nHZuYzL0Agmny7WBVvlw
7QHnZZaze0EkSurq5EgexESW3Pb6RQaPPcZ1rCF5MGh6pNz7VyB0pcS9ur+V
C0OhLP1JIvtAv7+2wbE8FyonaNZ6pEIhb/s33k1F4n5nKnZ6Riwcbh/xSOV9
mgP6f1+fELKKhDMXI55+CcwBybWtghybaOg+a+GcS5sDDdbd48xJMRDNvs/n
ztls+Gfp9rRp4ACYVYkYB+pnw2bZpsyvZ7FwO0SDIWMmC4Yzf6s8nIkDj+tr
7ouZWVBcdem2wmw8UEeGi+rtygLx+g9xqTMJsC3CqqduJBPyg+Le+iwfhG2R
CtKVhzNhyOTOwxfLh6DrzGFGfflMmO+18hrdlgTqwzfOXHyRAXPxpRGxbMkg
90slETIz4IFg5M0V1hQ4/Oz8o1caGRAVfryOSfwwrLQ2XVruTod/b+OEWiRS
ITC/RVxPMR08/p43mNdNgwsDQiLjRUegnI18nMXuCAjsYRDSWEyDJtuRsB7b
dFg6VF97KygNHCrtVnJUM2DWzGreaSAVdIQKEn41Z8DhcC3tCNNUYBc9dmxU
NRNeDEQOBONhGEwwoM5szYTpptEHcaqHgcrPrPm3Xhbcf2WgXN6YAtHMCTa7
SVngE+30z/N6Cry+delDrGEWXL2snSJ2LQVustDyfjfNAt6TB3c1X0mBkPsP
Uj7YZUEUddLoyJkUeLrD0GzILws+ZJTt4yxKgYqnumN1WVmQcunoI+bQFKBJ
DD8wl5MFQ4zMgn3BKRAjcZJZOp/In5DLmh+YAlbJf/UvFGWBu8hNQ0a/FFiT
uXuh4ngWTAvz3OF2SwFy1u6I7JosIKsm2IaYpsCAUjDtg9osuOisflTTOAX0
Jv47s3ktCxr28F6gN0wBbtVfz5NvZIFl6Z97V/VS4PHbZo0D97Ig9b1k34Ja
CqgXzDxraM2CXg9xfKCSAud3c4Z8bc+CmbK64P+UUiCp6EBVyIMs0Am5rasp
nwIftS6oXe7Jgtb7mQr0sing/H6wf+ZRFvzNGnMelkoBPLoVJNqXBexaImeq
JVJAQVdlw7c/Cx5r712KEUuB/wFFNtva
     "]], LineBox[CompressedData["
1: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
OP1i
     "]], LineBox[CompressedData["
1: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
8ooIY1bZZ6vECfA/gKRBVw==
     "]], LineBox[CompressedData["
1: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
kw==
     "]], LineBox[CompressedData["
1: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
N9RaIb9ggpPj2enX2xnwP8Dt6F8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226063104507*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
JVJAQVdlw7c/Cx5r712KEUuB/wFFNtva
     "]], LineBox[CompressedData["
1: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
8J0=
     "]], LineBox[CompressedData["
1:eJwVl3c4lm8bx+0R2Ssze2ZvntPesvfeK5KyIns9IsWvpB2VyKhUlHSaJaSU
hCItJJFEw3zv96/n+Bzn/t73c17XLRoU6xRKRUFBYUhNQfH/34lXink3L0fh
eHSRqXzzOkl1dCXt06UoRK/ZwpyWdZIH1W2ND6ejcOSQ0ZnBx+uk9D0xC5PH
ozDb7ArvmZF10lUP2WvvCqJQJmqtbnRmnbTUWMk1mhSFUernK913bpB43vo+
ex0bhaTUE+bBYhskfVr+3FfhRPxx25VD2hsksnfZr0H3KGQIUKZjC98gNebb
1Q3YR6FbvBm1RcYG6fXtHcF9FlGoNp8g9v70Bmk3Q86rHq0o3HviR/CBvg2S
uZrB0S6lKFzwzb3D/GmDFO23btQhHYXRSasRtmsbpPt3D91+yBuF3Gev/9iW
2SS9n1KKfMAahYWRVppCBpskGqbvu1voo1BPgcFP3WWTJKdZM3Z3OxKfCy4O
7I7YJDkEhpxo+hOJWzFBlD0pm6TE4t2Wt35EoucTDxqa4k3S+ZaJ7YbZSPx4
e0Ok79wmqetTRUvdVCTy/RBspL2xSfq60zW2djQS1z//dKtr3iSx6LBLX38R
iXAtwaWlc5OkHjL4/mpvJG4WtqLMwCbJ63hheVV7JNqcD9KmHd4kZbaa2V1u
iUQxSwFfr/FNUvU0Jd3Fm5F4xYhCTvP9JukZGz46dz0Sa7+GNTV93CQt66Uk
nLkUidnei+ZznzdJfOGae06fjkTVPD/y+pdNUsijxvNlBZF4PS/4giXBtzil
mUuSIjHlk8zM3IdN0hv43F0UG4n1dzL9bxL5NyIvpRaGR6J7ndc3z4lNktgp
b7UC/0g8lmBbJPh2k2TRwTuf6x6Jh4RfJ8mObZLKeE54ZVpEos8f74hvI4Te
0Qz9qVqROHUn5RrfKKF3RU/WYaVIvM0+2R1MzCPXnamTJB2JdKQmO9pJQu9F
/Z/xIpH4TMtbXeATofeufzUHeSOR4/kuwZ6vhN6m9wIOsEbiQtilk5w/Cb1j
4/j200dibGVFlcA6offZPUP7tiPwP74En1m6LRLLk7mCyD8R+OIpY/Nhri2S
+s9rBuE/IvBRtu7n1+JbJC/BoD8hsxG45z7/+QX1LVKmhfDNoKkI/Htq3f2B
xRap+uDbsIDRCKT6Xk8r7rNFuiijUHv7eQTK2wvdWzu0RTr1Pm2e6kkE5vRb
KSUe2yLlWoseuHY3Au+wFeCpni1SkFjE4W+lEUjf/HZZnrRN8hp78FCvMAIP
+1F83/TeJjmWMG0VZ0Ygq6X7/aKUbZLhWmO2UmwEkkb/7Hx+b5ukdYvicWZY
BHql//eG4tU2STHMif6VbwS6FO0bXPq+TRJ6tVoUbxuB0ls23btYKYCLbPH8
sUkErtz1a+flpwBmOMPGq0fYs7QZBSQogHrlm1OEagT23zDy5NtDAWu1+qce
yEbgmURBSXoNClj2LxndIRqBs6I7FD7pUcAc94ddPnwRWP7xWVmdEQV8GFDx
aWCNwLkLjUHh5hQwlpVzcYsuArfbcjlFrClgSGvkg/1WOE43uCd+tKWA3gUp
8crVcGyL15Rpt6MAvJIcuvw9HP0tv9G8sKeAZs/+6yZfwvF1aW+pnAMFNLIK
fjv5Lhz3v+X3WiDs1x7HKMy8CkfXkCf9WgSfT23fr9UfjtSlmZ/liHwnVdhv
kzvDMWNAbnKOqJe1ZLF+qy4ML/Jbvz9SQAnlu23KX18NwR6hHDuHx9SQfGrt
7cfzIbiRW5on/pQaPHfcEPlxMgT3/ff1LF0/NehmeIZsFIfgz6uYyTVADYIr
DLWMeSGoRj8XG0HwVsT9BZ40wn7Ju1KU4KnJcFWJhBDspJsYDSTiO5x4k1Ri
QlDxV02DTR81VPU+eQihIbjMGtZDQ9TL1U+ksPUNwXgpr6imJ9QQelvSzNM1
BPOjTfemEv2ZS40Uhu0NQcfszvi8HmqQOZf7/JBZCJJd6rn+dFMDI5s6ZxYp
BOdnDnKuEPwt97N7iUYIemiXbl0m/J/9Kzt/bk8IftbhSxYi8jfsN/5YIxmC
QhJnFQuJ+iWff0o2C4WguvjZ8G2i/wMelVHd3CFYiPXMFUPU4DjocHNoZwhu
fXxuFvmGGlSNKVYmaUPQ4UVRQdYkNXC13NSe3wzGodE7wkvT1LAq75/2dzUY
78YmnG/9QQ1vLrN00S4GI74Y+zy9Rg33uZGOcyYYC9Q3bh6gp4GzR2Nsdr8P
RtM0X0UXbhpI3RY8sedNMHZRRxqTJWgA5lJ3WT4JxpldtFPnzWlgt5+8nysG
o/5c9n1nTxqgHH5bFdQcjIYsW1dpY2igp01HIa06GCd2CpZMltNAtcrcgaMX
g3EvC2MU1tNAQXXFvdPlwXjCocyOtZsGrE/8gab8YJSUNy0NWqIBedrrOe3p
wejuckKSg54WmFPcnj5LDEY/9ZE/x4Ro4UXwPcfZsGBUfGChbWlFC7fGQspX
/IJRWncwW9uPFsr2cr2jdA/G6FSJ954HaeFQV7cIq30wCmgwfT2aRwsuWodC
BC2CkZtmxafxNC1o1ovVyhoE41wdY9v1GlrgFX21oKkVjOWS+5aC7tPC31NZ
qqZKwfjyaqfAwBNaeLtDJclROhitSx1Ovh6mhbaMDw/9RIKx9d3TGwlTtHBh
5ThFNG8wFvmkLdfO0UJ6pIHZYdZgvJOZ4xe/TAsB7xcL8+mDMTSFTDn2jxaM
nS8+/287CJ8cuhD8eZsWxJ/u5az8E4TaXjECV2nogIa06d74Iwj9dHdGKTPQ
wczt+vMPZ4NwSe+NQ+UOOqg9xyT1ZjQI/8y4769lpoPovKibS71ByHn1Qe0L
JjrYu7ZrZbM9CEXnM7ibCH/F2D5tpvtBeKmGYSaJkQ7YviSn8d0KwnJR5zwL
Iv9PD5kuyZogNJhjfbmHng7cPJoCZsuDEFNvWv6mpYM2d/3tmrwgHGppsX1K
2GPds54zpgXhmHPrLzciv5j7kwtR8cQ8QvfWdVnoYMSNKWZgXxCqao1SX+Ck
A7Kbg75CcBBW1n95e5mfDvTcTjEd8wrCkpMKvQHidLDo+vbtgmMQmmTfyVvZ
QweVriI37KyC8MFHjuVIXTpwcQ05fNMwCNcicql7LemA3rXWkk07COWCBPtZ
POmg1WWRN04pCHsPHHDT3EcHMS5qsy+lgvCdbY6yUgYd7HZJblYVDkKX32UC
X07SwbDzo7z/uIPwS2a9sEY9HeQ7U7muMAch1csb77Z76OC7U/Gve+uBON1z
YM5hjQ5aHC8r64wH4lJGowFx0EGU4/T2maFAXKul/lNeRA+CjnIv1noD0YlZ
xfplDT1kO9yNaWsOxL5v0hbZH+lBw+GfvlBjIEp0wefsDXr4ag/M6dcC0Tr1
gJAbDwPY2T+9YXCSYK5o2ntmDEBpvzPlclEgHrPvd1zyYoC7dk5WlDmBWFv8
zsJ3PwOE253mC0oJxPy/B/K+ZDAAv93EbFdcIB62te9JPs4Ag3tFW8QjA3FS
K/oR6wUGyNwblp8bEIgN72LH62sYQHVvneu0eyDysPs/9WxigGnbJQlz+0CM
rN1IkWxlgApbjZVq80Bc6Xk3r9DBANa2Kd30EIip8w2vj/cwwKZNe1mERiB+
NaJ9kNjLALdsaIL6FIj5/luN5OhjAB6bEooigUAUy7B+QiL4iDXfJdsdgUiz
Fau++oQBPllVkVj+BWA7l1ivHZHP0kph4sVsAKre4Zs+1M0A65ZxdcpTAbjj
uGC2D2FvtGxOKX0TgLcC7FPTifhAy3Wr5cEA/Gwi8ZiznwG4LA13OT8OwO5r
StMuLxig1yLv6522ADwcmbOw/w0DpFj0t3DdDcCCgc9Hi6YYYI8Fa0FCXQDu
Md4+OPiNAT6Yu7i9qQrAqX3ZDDZ/GeA/8zOSWmcD0J2lNZqXgRHMzd+vnC4N
wI+nJya0+Rnhr5l4z19yAKovzkvUKzJCnVnEf56ZASj/UMQnyowRpM73Nu5N
DkAdw3tGl30YoWpZqt/oQABO27CP3UhghLOXpinkAgJwnK/vVns9I/D8NhUU
9gjA1u7B32n9jFBme1WLwyEAhxPYjyXMMcLRf0H71wwCMOaFwikzuR1A59BV
uKgVgAqpTir1Njsgu1r02ielAHzQfUQ3JmYHHHb+8K5fJABNb6oeor29A4a8
HpZpbvsjtxAP/WsVJnhKn9In/MMfv11/lulvzwTtd7Up6Kf80cXvd2zCPiZo
Dvyj+eO5P0o676j9mscEjSzNMaPoj/ZLfzr/u8gE1Q/jr7Y3+uN75S/tHveY
4GKE2rvrF/2RXJt4XqCfCcq5l9lPlPhj97E05hcTTHCs65Zlcro/6uo2qIUu
MEFubGxGwH5/7Cu1c32/zgRHBBWbLf388dQyfYQBAzPE933/rmznj5SJ8n/+
42CG6MQ68V3gjyeKTymt8DNDiHiUF6WiP952uTSeJMoM3kMypXNC/qiuxRNq
LsUMTmmzvS93+uNq19WrBbLMYC1XvfVg0w+pmaxUouWZQSdXPPropB96XDif
t06wzPvL416P/ND+37GHbwj/3UX+bCYNfuiqM2IfJsMMfNrCFvIX/JD/3xV5
4qoObNMTaZzH/PCORtgjcaIefdm5u+tH/JBx7EPzhCQzbIHX/OdoP3TSp1DL
Iey/5/nEnvn4YdQP3Tp3It9ixajHXVs/fJx29GIFUX/GrPz4eX0/LKiLa89U
Zob3yy5PchX8MB5LzxhrMcPIJc7NaEE/rAgDFXZDZnhm+0rNldkP5fMjq9hs
mKHn34ko0oYv1kSYi4R6MENbtX2l5HdftKizYZCOYIY7zixjOyd8kXbr7r2w
FGa4QTHI8nvAF+MPh5YoH2eGqoYis/cPfXGzZtYys5oZznpZH3lS54vZu7lc
nTqYoYye8U7jOV+8HjQsUDbBDFmB+bszUn3xgOcz8k+BnZDMYuYevs8Xux/L
8PTATjjwkLrE3pvIF33o1sHgnRDAnbUuoueLerXlIwm3dwL0pb7pWPNBi5N5
m90eLDBWFCrmMOeDGT5tdwfyWeCQnf3+qVEfjAx+axJylwVqhsXotu764L/4
imfdzKxgXM7sdOyKDy73r08PabLCpMfvC4JlPni4nzNl248VON73aejF+qDC
XMrL0hpWqL98J6vf1wftr68YJ/exgkXwhUFPWx+87FO9mjPLCp8kC3bN6fqg
VaGwuzUlGxz5eiA0WdYHG5WPPbXYyQa8dV636fl8kC72HWcLLxs0xZhultP5
YHn4wfdnd7OBrbKildSqN5Y57jD9J80Gs8u8p+599kZv1bC0L3vYIPse5UfT
V97ooP3f8ThVNhBMnld43eGNVbrX7jzUYIMW3ZHk4JveODEvf3pGiw2cNrFn
+YI3LuQN7ebTYYOC7DIf9lRvnKZfUTcjuI0+bEXJwxtVsmy4XxD+P4t1iu00
vLErs+5KlCYbSHHslIjh8MaG8HnRMYI7Xv+O3aDwxh35t4+Ya7OB9+kPD4t+
eOFCksKnXl02+O3ZTy/w3guHd0RSFQMbnBC863zjmRc+33d+us2EDeSmLlzS
eeiFU8N8HunWbPC4smD+aa0Xkmqypn46sUFASJyWR4UXfr63X1rRlw3WpLxz
ZvO98HsV5RvTSDY4OWf6IjHBC0NSmR4bJ7GBUr2iAF2IFzZvKYjIFLBB/36+
8FNOXhgRdPPczwo2CFGhuiNh5IXthhUZ/9Wzwdav+a07Sl5YNTPL9LeTDc40
j1ibCHuhUMbIXrpxNniuV/spcN0Tjw7YuRxjYofIrTLFn3OeCNVjw7ek2IGm
80hK5pgn/vf2n8qQMTvomDtwXLrniTvKVELF0tjhNYOun+JVT3y3K+/zu7Ps
sH9A/MajMk98IWO8WnmfHa46/DGaiPXEbS63Medf7ACcH4/t8yPyXxLX6GLl
gPGR/vE1W09kTFLSMZXnABbvi3G75DxxLXGettaPA2qEyI9q+DyxV+VeiVwi
B5h8iGPUpvfEXY6857aLOOB9lbdr76oHVooO1dNe5oDkULNKty8eKHD2mbRU
EwdwyCgtTL/ywL/8uTx2XRzQ8I1PJ6HTA+ntYwbihzjAsoEqj+aWB/LMHhY8
P8EBn2K/D/130QMzNy486JvhgHYq38L4Yx4YKmP5YnGRA86fGjRyPeKBH543
yHqsEvVkYE1jnwdei9hlIb7GAa4PG5t4vDyweIb6eMomB6jaiez7Y+mBpPGB
oKPbxHwfj4uPaXlglK3/Uj4FJ8wfopi4L+WByXsPNdwg+Cld3Mkz3B7INNA5
rULwtTMfbVNoPPCbXa+BPxGfreBE6/3LHTmC76olbnGAX3vXI71P7rgrsNS8
jain56SWKPjSHQXeakYnEcw3fUVxs90d36ymj30neCWJa3ay0R2Pf+g8HkDk
e7kj7xJecEedqre7Oag4ofHCqvulYnfcbc5iZkjHCUXKYWyZqe546YLvMVFm
TojofvM0IModOzNDZmY5OcHUzSLLyNMdl7aeaHYKcYLoXIuOmKU7uto3XXsu
ywlbqTLLVFru2BHQFaKozQlvWc7c+CzpjpPmQ92/LDmhpZIxuIfLHcWVrCWl
fTjhpHqKwDVqd+QZu/B8MI4T4nq/Dectu6GYajffRCEn2Hl5F4d9dENZmkpl
o6ucQJ+pvynd7oYnpg0MLk1xwheOhnsMjW7E+0z72YKCCzquCe2fO++GOb4f
T9aKcUHKwNb7Gylu+OZruu+1fVzg7hd7uijSDRkWVZpbSrlA/eeUfbSHGzYN
Lmck3OeCBZ7Ojj2abqjWamLygI4b+mtVDrNIuiGjxHLpxT3cUK1fpfKD0w0l
M/y0lpy5ISAop+rWT1ekAauyKxe4gbT6y6v0gyuOVXsJHurgBn5yCOfBF67Y
bFc9eOwjN/zmHxlwQldsud5g0ELBA8MNZrlqDa7Y8Uqarl2IB24ZNutznXfF
R8pVJUnaPFA8LLW6ctQVQ++NDXU48EBk2OmGkcOuCK7Z27lhPGD+jz6sOYKI
3/ih03SYB8SLk4VPu7ui0UE5DZujPEAhMvcmydwVhdUv17tV8MDEbc/jHhqu
+OP4LMvsFR54YNpvoSPhiiOTZzmFG3igfFSXgp+T8OfPYhC9ywMHo+rur1G6
4hczSz3JBzxgvykQ927JBXt3qkaFt/GAwoli2bYpFzx2PzFYFnng8js7JoNz
Lqj+1dusnLBzSrMvdLq5oHkjCawJe3Z4M6nP3AWXf2aY3ujkgaXr3iVDmi7o
JF/S0fmEB/y/UkyNSrlg3rDot6FBHnguU600xeOCvGSWUvZRHtCPtMmcoXPB
12HPDB9+4oG62qWhhd/O6MjGu/p7iQf4v50SXZ1xxrO3R74tUvICWU7v4MYb
Z1yO/fH6ITcv/I760EXd64y+ekN7DinwQmhdHidTizNWrxv8ETHnhdfzciEc
152xp3VHeHsQLxgrDN3dddoZ/XQqxeyyeeFWdAKtaIEz1nJtNDZd5QWRBn43
mSRntF1N337dxwsbe0L/aLo7o1WXp2etAB9E7d9hCRbOuEPUtu63BR+MN96s
MNNyRj0KU1mVRD5oVlrTceF1xoLaiTnXUT6IUzl+JG7UCT2dSFY2V3bBhzj1
weReJzT+0fXW7M0usGsaF8psccL8uzZdZAZ+UFCTaC857YT0DjFHCiL54eyh
PtbyAicc/8Kbf/Y0PzDe3R9wIckJGXx/Jdd188OM+gPKencnrDzsLH2TSwBc
Evyc7lg44VTuT20VHQHovkd9pVXLCSW1+tIGvARA9XfNr05pJwwuEXrid1gA
LmvamfbxOmG/eN2XFycFgCXp18kheicszncq5G8QgLSWiunRP4546bxSk3aX
AHz/Q9KcmnXEk1RPTfVfC4CX9uf8mVFHfBvBd1LvswA8TSaPLvQ64i1rmg7P
HwKg9WCPzGqLI77am27Q/1cAqv+9St647oj2l3u+dmwLAJduch91hSPeW8yR
KaQRhJwUIX4msiMaRfuUR9MLwnJrVxRHsiPm2P417WEQhID18Ie7IhxRgfWS
2CLBL/R2Mot6OOJ/btvZewmub3NvUNJ2xNfnVPi96QThKKnKDvgcUealz04/
gv+mWVwyY3DE1XAUVSf8w/H7D9u/Dri/gerfMJMgvNkqNXT56oCKD77632AX
BFMDrVLvMQe07B0T4uMXhKaMiY9BTx0wosjKN11SEEQ7slSj7jsg7OR+qKwu
CCcopHPiahzwEvO8dqq5IGwZPhtOrnDAs1q7xqp8BCE6K04ik+yAH5USH4wm
CsK7Tp6EgmQHDLOlVrE9JQjWVG2PSyIc8NQGQwTXfUG4bxzIU+7hgBcosx6b
TAlCf4XKEVMLB6xvW6FpZRGCd4uUn5Y1HNDA7faSmYkQfDd9ZVEp4YBcs0YT
T48IwdbZqgZ7TgcceLt2lOKhELD9PMi5RemA/C8uU1RuCoFxSf6yx0d7nJ/R
lrAzFQbyTG8hx3l7rLqY4LD4ThjqyiJcYw/b42Js0NqIvAg8B0bRZ272aOqY
Yd6QJgJcp63v57ET/uU9RfYcu6HSYnDmb74dep8VzXFo3g09v2KaXEPscP9J
g30dE7vh6yWW9CYjOyzIeTxURCkKTLY3rVhF7DDTWSUqSkIUFP/ac0dv7MWW
lK1aYTNRcLy69OHp+F4kDbdqxgeLQrxDab1ky16kGLQS180QhdMbKsnZJ/ei
2Ma4j3OFKLTWvDKZituL1eG3oaZRFCZdDrHq2+/Fsw1SwgpdokBByfWuQmEv
puve2/ryShTEG+5WrzLuxaj4jR+TH0TB3NP1oNOsLaZMzvmrfReFSNrfpJs9
tuiX0k3DuioKxbfLGZmrbJGrIe7DpXVRuOmrNRKRYYs37HX2ylKIwSvGscuP
fWxxqWW30QqVGKzeS44W07XFNqMrRk40YsAXtEs7g9cWrZYsM6oI1mNppZ5Y
scEIud5T5gT7tXq90H5lgx8+aJ6uoRaDrLD1s6du2iD91VtVmgRf5Tgftlxs
g0NikwUBBPeivqp9lA3eb5h2riDiv0VNbtZZ2KDg4/jyvfRisJM3vY9B0gb1
9B7tXGISA+Vu4VOhVDaYe8iJNMshBs6x7QFdU9YoGsA9Uy4oBokCAQoij6zR
9ZfCB29ZMTjTS/E39aw1vnhgV5+rIwZthyq7x5Ks0fvZfJr3XjH4IGJ8XMPV
GvdQbv7kCxUD6mefvMpUrdHGrw1mM8VAKjlH6gcrwf+spOcvi4G1hMSyzYIV
VgpbbCg8FoOYoZ5HNf1WmI5TRg0LYnDiSGghbY0VBvMcWfDlF4c7MnSuQXlW
+INi6S+vjTi8eV29uz3ICl93wlZDhjgI7vnakixkhW1ZTOHOv8TBYJycM7Jm
iYZWATtbVCQgKE/WXnXMEhliPDjOHJSAmsmomfkyS/Q8+Fln/Z8EqJcscPkz
WKJOxrF73mxSkHrqDxvjVwv8kLQzYtBeCrrOU+6802uBF0R/fG0+JgX2ddy0
9AUWqDaft6VLLQ3lTSKUt8Ms8EnwpNdOXWmYeCC76WVugfefPcntipEG8U61
fzRSFqisR3rNcVEaop6SVhtpLXArMG74Qb803Hph8dNj2hz9DUf+y/4lDX/e
OC5QPTZH3oCr92z4ZADee8/VXzXHgIcH/Va1ZSB3OnTaLdcc98krOmS7ysDA
99iPFCHmOJFIs7QSIwMcK4cnb5iY4yNNltiobBnwWM8ZdxE3x4hjmVys/8nA
JaqSkS0qc1QJYN/Dd1kGZhgrXtZ8MkM5qtb08VoZUGCvGnTqMkPp7wHc1bdk
4BBffd9GpRmWnBO+sHBXBlpFmh9XZ5nho559eZItMmCh2P9ozdAMVWWbb2cQ
/Fr//T07CjNsX2pYsGqWAQHTr7f/TpnikX8H/9QSHGSz3FDVboo27LQiJ+7L
QI3TRq3tJVPc/sXXeqVNBn540lX/TjdFjU57KOmWAc1AtqrLfqYop7J0f2lQ
Bo5E8F+0BlMU1uNi3zchA92xEmdXhEwRr3zkKPshAzuSFMsvbppgTs6/vYv0
suCYrl1mOWmCjwXfcNBIyUJFnnHJcpsJMqd6OOlay8L7Ytuj58+boHXXz6d/
42VB8qRbvvkRE/w7YSqdVy0L0ecCspe8TdDs2IrArilZaKqKSj+rR9jvaCRP
CMvBv9r4FFMBE3y+mKv8KlQODG+nJy6uGSO7B/X+rTtykH+ffLDirTHyLMx6
qTLKw2B72X7jVmPUSPxzSS9UHryeV4eVHzZGrsLarBhlBagcuRVk6GmMdwfN
wpsvKsDXiVa/b9rGuJExdYmGYw8kzD93g79GGO7vvipAqwhty2NOX0eNsD3h
gUZgjiJQrX2yK2sxwpzx8wP3qZXgBMMf85lEI1RSy14qoFaGUVZKkxNuRvjq
KUOlsKkyCPMyGehqGiFJlLNtIUcZ6iRFtEpWDXGB+xSn/7YyLCvIqmmPGOKt
3VZ0wroqoK2upvTpriGun/C46XpQBTL0SPLFJw2R1tQ68cp1FXhibCGtGW+I
IQv8jDfHVYDZ2lH8g7Mh2nc4/VViUAVnR2+Ro2qGuBglm/peVRXOeoQKqHMa
YsLyNb5ST1XobH+v2DZtgPe2rGOFj6iCByvLuGu1AWqc7lP4ekYVFv1IOT/C
DFBhhrS3+o4q5DZG7ymUNkChaKrowD5V4N86Nyr2FfADxCoav1OFW3sHstpq
AGVEX9+MmVMF8wtr8m6RgN9vXGpUWlGFie+yb37IAirlCw69XleFg/qemYXf
SPjuxO6MTgo1YCgmy4nXkXCRSWvPPmo1uPiu5XXbPhIK32YK2EujBurys+lu
CiTUqRep2SbsAyk8skvf9fHraf1/PAQH9ZsNFzbo4/jtxiBDKjX4uyshTXy/
Pka4uL+VJbgk8qr0I0V9PJ8jnVNM+Es8GH7p9kMPi5KPh0nRq0ErA/WRpZt6
eI2LR/3+TjVw8FCVOnpAD0ltGh+o+dRg5nrgkLiKHqZRxd3pl1KDI39OpDz6
qYvRr+Sbn+qqAYdFh4R7ky5q/Y7fccdFDWrKfzxfOqiLEVzFXLoJagAzwoeP
qumieQSv0t/zajCiYScusaKDvT0iYsXP1CA6L23w0V0dbGFMqoqmUQeqkfok
9wQdZFF9p8Fhpg4VEhOiPzV0sLKehf11iTooxjM9O/pbGxXpBZlWPqpDT7du
okSLNvYxh/hUgwZ4cUbtxiRtnBdhilu4qgFLQWf63bW18aoi49uXXJqQ3/Q0
/udfLQyli//AX6IJglR/hYseaOHlY++6Sti0oMlRuk8iRQud5pUXn57Tgqml
PCGPdU3EIfKtQ/3aoK1k8gQ3NXCkqqvo6SE9eJ5+8IAHaiDHTae3B2T0IeR5
Jf9yugbeiRgUX3+vDydiKGIlKTRwxbWD7YktgNQjpV3tHeqol8V8I5rSANqY
/bs9stRR6onw9edNBjBX94i3mEodj9A7XjfIMYTM9e+dkt1qqDN+IUZk2BB4
bASj23PUsETvrN2AsBHUn7Xh8TRVQ3cBCabWUCMw/pbSsUyjhqPq+58EXjeC
MZ0bUcWPVbEhCBIcPhvB/sJxLql8VYw9G7NHcpcx0IwztLebq2JbrclcoaUx
nJXRjvSkV8V7rFjlEmcMysnhnL96VZBFtO6Zy3/G8KS3/FExWQX5eaplzjYa
gw/vk3ApKxVcYh2J0+g2hl9hq+wdjCqoPqviGvrSGI42S7R59ivjDU83s2Pj
xrCbziXs11Fl3Dx2K1R4whiaXXPYjtko4xvLiy+HCbvttaZWKWZlJLMbnA4Y
NoaJcsFDD0qU8BQPu/vEUyL+8/ABSVoljDNR/cfQZgwhSkX7S1MV8VhAzvFU
op+aVOPozZ97cNrU3kegyhi+9/6LjIzYg8E6v0Y+VRDzcN0OH3mvgGzHE4/y
njKG+ICIUCNXBezSDI5UOWMM9+tFghsG5PHj1h1su24MG3/fBOwylkefevmh
CmI+Q7MSv7z7cjgjT1a++8MYckvNfH4qymEpz1iwuJIJPJ3c8PS9JoulF0mG
snkmwCx3171PQBatvHZmsK+agEPiPleNMhnivnaDbJVtCie7xJwrGWSwt3zk
uKWyGYyyvHXYmSGN80nnvh2jMgd+71K7w6tSWPj8i9CFDXPwu25pO71PCsNJ
03FLopZQ9WvbyvGTJIafmejZSrCCGYMWi0cekqiXXWouuGENcsX7zWRfSOAr
mXebpS22sH9M0uSUmQQ+VJ65kF5nB00Sk4aUbeIo8E/wV2iMA/w+cBJiVMUx
kj2JSv6qI+g+stEfrxFD/W8Lz6zWnSCdkVrXTEQMrZef23875AJdrq1at0+J
4tbMxNwuVjegq4rTEGIWRfopHtraQXewXpRRK8zejWc+3e7xuOUJggkdgd9+
iqBfM2n/7RZvkK++4HF2QAhfs287PecPgCZgdjl4XxDrNBW+KboFgu5oir31
NQE839k+x3w1CKwZPMzX0nfh0P4jO4ITQ+HV5SdGr/bx4Y5rApKSa2HgpaNB
uuHBi329wxzbJREQFcWh7qXKjV94e2iS5vbBMlWWkqoIFypN8recaYiBlHM/
5HYwcyIlWc/9XUYsHH32TLR1mg37BJmEI6/FgZMvi4i6KiP68SiwBjUkQFDJ
PPcXJnoM1Q0ajrqfCAfbnzKfnKZBvmvzxc2Pk6BUNGftVwUFVi5cyzP8chjg
9JT7i60fjz47fMxfEEyHNG8XteOhs48oyc2HKaUyIMmgTOhixeSjXO6Yltfc
maCNUa8KVe6QXrTzH2PkzoIwcdJMRegyKaX5+YLtz2x45eM+Xxbxm/SLmU3n
oEcOkMrjlor3rZGmmH+2qLXlwFEa57QObUrYU55ou5KcC4aiHzJIutQw85/e
vaaXufCbFJPdqkcLbyhT4o5L5UFQUkHBXWCEvaYfe1x68oDvJNdRFUMmsJ1s
fCa5Mx+e36osbjTaCV9CZq9/cMyH3EHF4/ImrFC6eu1UQVk+CK1OWrpUsYHH
XyknwRf5kJwj0c9xhR2uiglDLX0BDLPvs3l5hQNU8qi+6OoXQKHi371217jg
j286+e6ZAvjSBi+Yq7lhY5HqQV9XAYBNnsNANQ/wp5y+ZfC1AM6MD7wsvM4L
YpUDFeo7yLASzuFsWcMH2tcouQZkyGD/2+M1Xe0usCsvMJExJcON3Euuj2v5
4ZSzl89BHzLQcs68ybkhAGaKGaHDcWQIqFTwMK4TBJsLVTIJuWR4qHRonKJe
CF6SGHlyT5KBBx94tdcLA9VLoycKVWSIs6WYSGsQAc+5R93nG8gQFnNFUdid
+A41LOilbCHDybvmsWmju2G3Mt+jQiRD5/rczQl3UUhYTlgM7CHDovGxJb0x
UTgxwujW8pQMgkeVVc55iEGr9+CO5gEyWL8cjlsbE4Pl5qRc8iAZkviSmjw9
xcHC6Quv53MyXPXn/3V/XBwicvhv2hH8qvqRGp8X8d1htux2gvCnWAyIT3pL
8PLYBaNnZNijQXPvjZckXFOa+y+3nwxeR66varyThO74bycPE/XJ3daap7yl
wOrm7g/6T8jQvGMxceWdFIR/it781k2Gz46lLc4+0rBbLHDsbCcZ2M6o/22a
kIYvY8n8we1kgA+j2hy+MnCxeWXO7REZoqVTD8dNysALUz+//IdkOLNfuHXI
VxbcEpU+ULSS4cm9zjWl97Jw77XQqaH7xPPbCNE77icH0xXzc9uEfmKmDEcW
38sBewjH0kmC7Yvq2vb6y4MvvVvw//nIK7vN+il5uOxcJUtJxN/YtUxiDlCA
5q7m8bcEjwWcSt/3QQHqVcokRYl6tDXa7f0Be2Do447FF0Q/qj/ebct+3AP0
kmwsn4l+AzQzDAsDFSHgV5yzSwcZStLEsr5+VCS+JYdNBYn5H/Y87rQIUoJr
Rs+2VAl9imTzRXNUlOFrYYChFKG32OBoZ1OcMqxO3r28OESG+wdkgz7dVoYc
XZLd5GsyzLQ8qzJSVYFnpXevUU6S4SfNwcXXSSpQnNi2evgjGTYceXUjHqnA
u+Nn1OenycDxPfBliaUqbNT5aectkkFIh15IrEQVGvmU/cqXySCTXx9xb1gV
yuPnnOJ+k0Ft2PGu5S410Mkvvsm8RjyP3X+23/mpweK1M9cDNslgFXPeJvaq
GgSfYVsJpSgEl1aj01Tf1EDu+EULXupC8Kef/XRKSR36+zdLD9AWQpRLsaJs
gjpcOkoZsJ++EBIqVVLaWtUhU125iZWxEDIX3zy2p9CAr7WOXC47CqFI7wj7
ZzMNOCGoa6HPVAjlZFHfxCINuNXn0NdPcOXIkxrGlxrQ1reniIq5EOrFolfO
82jCgYe/J2YJe0ssu6GyjyZcU720lUFwV1tzUXelJrzbTXtqiMg/yOgz6jar
CW+MMiI/EPXH3CjFvylowa6thaJmhkL4fKV6f9pBLbgWqhbrRfS7uGTTynZf
C465SWwPE/P8I/2kvbqpBfHPDKTkaQqBpqjcUctEG9yzun+HUxUCv+THr77P
taEt2oGpaYsMkgfz1X9y6sApJ+kTzzfIoNwun5nrqQPnnuu9WST0NfNM5K37
ogPT09LvXf6QwaFaIBjkdEHY/tbotVXi//Wro/FlrC48PTyRxr5ChlDDsLWQ
e7rQJldcdI54fgeOMZn/XdMFGX4It/hJhtS3t0qLDPWgfqKskHeJDPnSbpPC
+XpwuoEjcecPMpTGr8s0DegB1ZyNtxzxPpzvvBxvxq4PlpwP1PcvkOE6i3nH
mJs+OCz5Ro19J0OT9zxT9Hninsm5vhFO8KOaE+7bH/UhyXJvLz/BT1c1rpRJ
k8AXVqIX58kwbPxuUTKGBBy8ixtTBL8/nqn7oIkEdYWb0/MEz01I5tv+JUHe
rVf7WYj4FdmBl1MkgMhD4yEmBG8nHhA6lANg9KUpLJ/gHT3ckXR9AC74dvUV
wdzsD++eYTGAvkNOMRJEv7v9Aij2uBjAk2RP3USC5etobTvOGMDUDffH3QRr
/r1x2nnKALQZmB4wEPNeFquJO8RhCJq29lOGBEv1pfCSNAwBVzeNIwiuj937
iM7DEPIG1UJTCVbh2R08lGIIL+a5FhIJbm5bZjh7wRBCH17m9yBYP/hxY3AH
4f+E+7IgwV2MFS57PhsC69s3AV1EfYtbUWu/aY3ATPO4hCXBz9xIlztkjIDh
Eu1SPTGP0yar+VEbI0ijddNdIvRxph7huB1jBNVjkad4CHZhPDs1etwIdjmV
aQt9I4Mrq3/91m3Cv1V4F+0cGdy4JQ5LvjaCzaC58hezZHAXmDOz/W0E3D3t
WukzZPAQbeQ4xGcM7xg4xDiJfeC1R7u+w8cY7jj2cv0j9oW32mbybLoxdPi2
H7T/QAYfnS4zlkpj0NW8fbT8PRn8zGynvKeNQbarRob6HRn8bdjrs+lNQDZa
6YPiOLHvHN8k18qaQPz2XKX7KBmC3M+ZDdmYwE96t5jMETIE+wZw/IkxAeS6
qFA/TIb4R7feB58wgy+CT9pOEPsyoTuh7miTGdDTJBy520aGxD7d5NuvzWB2
b73MJ2K/Jo/0sG/zmYNk6TivM7F/D78rfC+pZw5feKkkyh6QIeWjXZ2trzm8
pteof0Xs67SFMdOzleZwsjU9y57Y7+m/LrB3dpvDbyfaCwXNZMj8F/R+dtoc
buw+/ez+PTJk0y4kachZgC0ln+v2HTLkMDWZ+thaQATnShQ7wbnsSew5+y3g
/OVLFjxNxP9JiLJuqMkCNt01l37dJEOB+JOkP68toGIg0mygkTj/ZItMhf9Y
AD5T0S4jzvOjGtzv9+lZgsIxlf7FG8S+13t7o8zXEk7EpTXn1pKh2OhS0oMM
S5iL8uBgqiHOi72y7PQ9lrDctc70/SoZjjsvTu6ZsQTWrM4OyytkOOF554YL
gxWM7FSZOFNJhrJQkmmVrRXwsl4XFLlIhtNpjkmkEStYblz1/1RO6MMvbPFq
2gH2L7G6GukR5+nO5wWGWq6gem1LzmykAObOOT1kMPCEHV3vhy8eKoAbnexX
mS74QrXW/aI04n4Vu6/knuevAGDP8O1vupAPL0zSy7x+BcGEHJmjSz8fhsKZ
+pOFQ8G6MPXf0us8OD1Otd4tEQ5uUzlHLsYT9z2T3ec+7o6EUPlHFyN580Dv
79tTgpb74FWG+aDg3VwQX98uzLWOgZDU0XB2z1xosOoaY0yOhcHt1pSuPznw
z8J14NbgAXhVxuJ45UwObJVuSf16FgeRpy8Pp5vkwOus30o9Hw/C889nBwZn
s6G44so9+S+HQNaaNJX3XzaI1n0+eORjPLSMhmTLGWdDQfDBSe+VBJgNMpsM
nc+CIePmnpcrieDDvvb897ks+NZr6flmRzIItMju97fIgtlDJ6LiWA7DbN24
09V/mdApsO/OKnMKzEmPHLjVmAnRkSdrGURT4WRQ5sEJv0z4N3lQsEnsCMSa
9RxuIe7b7n8v6X/TSYOv/yRf/Xc8A8pYAk4y2aaDsl2HFPe/dLhlMxLRbZMB
H3op8jVj08H+tO1qrnImjFZorGRNpIG2YGH8r9uZYB10um/QNQ1YRY4ff6Oc
BWsuDVu3h4/Ai3h9yqzWLLj0/cjhGssjQOFnevu3bjbQ87BOW/WlQgxjvLU6
KRtM6afrBXpT4e3dK5/jDLJBtqBZebEnFe4wUfMsmGQDn/76r5MdqRD2oDPl
s202DI//eT7dkgoDXAamQ37ZcLk1yD25OhXKB3RGa7Oz4enVkvccOalAlRR5
YDY3G5heHf/7NjMVYsXOMEoWZEMmc0XDlfRUsDz8V+9yUTbomhVGa6WkwrpU
y+Xyk4S/+lX9fXGpEJCtHpVTnQ3O4+ejWAJSYXBPCHVnTTZMM0Uuzvqmgu74
f+e3bmRDkw6bTZd3KnAq/3p++CbBSYUMh91T4cnkbbUD97NBOGs67ptdKqgW
fnzW0JoNMg/5mp/YpsIldfaw+bZs6Ei3uFJlnQrJRQcqwjqzYXW2YcbDPBWm
NS+rXO3OBoEY9w1V01Rw+vSi/+PjbOg9YqLNbJwKeGw7WORpNvzDiLwvBqkg
r6O06dOfDYYP9g4+JKXC/wDIBDLu
     "]], LineBox[CompressedData["
1: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
1oIQFT98lmGYKvuVAe5b0Pg/k/FDKNVvH55mAG6LPIrT/H5IE/Rtk2+GAZLM
ea9a7iBY6PDo7BcG+GR2g8Tyxxd7jj109CT8mZrJjL2a8UXdlfm+kikG+Gsa
VSU/6Ysl7jXjuYS8xrQh4dywL/L/eSjdRNj7mf41W37hi9ffe5W5f2MATlPd
3Q5PffGaTPS78gUG6DHJ/Pag2RdvCB5+17/KAAkmfY84631x2KvMaWWLAQ6Y
7Mo+VkXEq1tj1GVkhI/Gjs7DN3zRrmjYs5ebEf4zviCudtEXE85nxlyVYARj
44nV4nO+eIai8r9+dUb4bSTa9Zvsi9/evT9tZsUIVUYh/7md8MX9PrQJ7IGM
IFHaU2MV54upOi/C7BMZ4cayRJ/eEV901KMWCC5khItXv1Ls8/XFnSfPhuf3
MwL3uqHAXldfjPpO4nb7zggFlrfU2G198SjtmIIHww449cc/YkPHFxOPczzU
NdsBdLYdOT/UfJHFeMyyLmwHpJULl32S88UdhxJSUnJ3QLzDxw99gr74sut5
4YGBHTDg/qRA9Z8PZot2SsnYMUEvfcKzvT99MCLtA29XBBO01qtT0E/6oF30
kcrpU0zQ4PdL9edLH3z/89G9oDImqGFpODyCPphhUfZkLzJB+ZOYW601PqjJ
v/Fq8Q0TXAlR+nD7ig/q5D/71PadCYq4ltny83ywfv7OrZObTHCm475pXIoP
XhASUhHfyQwZkZGpvhE+SH1r6HUVPzMkCcg2mHr74N8LTyP5pJgh5tn8vLy1
DyqyJBYkKTLDoeNVorvBB5tadgTMajJDoGiYO6WsDw7f2LqVqMcMHgNS577v
8cHllFOdLsbMYJ880zO40wc3Iz/klpsxg/m+8u3GLW9cLas8X2LBDBoZoodO
jXujoo9hpb4lM0hNXBt1b/HGHtchHXVzZhA67cNqcNcbtxr4R9+YMgOv+l6T
/Ze98Y/Sr4t5JszA+nUsmeOMN7Jdj16uIuLRF1yq/5vkjQ1/t/OjCN4G97nP
h7zxib3IOTFCf32OV+S5pzce0xM7TEvk86NkxLXe0hs/T6zfsifiTxsVnS3V
9sb4R63zxnbMMLHs2J0h440ikimvOV2Z4e1Vjq1DAt7o27jo+dOXGZ5bvlZy
YvZG86Gsqo1wZuj6kx9G2vTCNfOpFfd4Zmgut7kuPu+FHo/yL0rlMMMDB5Z3
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
     "]], LineBox[CompressedData["
1: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
MvwPUTAV5g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.590225921950885*^9, 3.5902259786304607`*^9, 
  3.590226066544198*^9}]
}, Open  ]]
},
WindowSize->{1680, 960},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 69, 1, 28, "Input"],
Cell[629, 23, 4601, 91, 403, "Input"],
Cell[5233, 116, 257174, 5929, 12269, "Input"],
Cell[262410, 6047, 2174, 40, 148, "Input"],
Cell[CellGroupData[{
Cell[264609, 6091, 25656, 736, 1304, "Input"],
Cell[290268, 6829, 241, 6, 28, "Output"],
Cell[290512, 6837, 39013, 652, 262, "Output"],
Cell[329528, 7491, 39132, 654, 262, "Output"],
Cell[368663, 8147, 52219, 869, 262, "Output"],
Cell[420885, 9018, 47582, 796, 262, "Output"],
Cell[468470, 9816, 43914, 732, 252, "Output"],
Cell[512387, 10550, 43894, 730, 252, "Output"],
Cell[556284, 11282, 50209, 835, 252, "Output"],
Cell[606496, 12119, 86345, 1427, 252, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
