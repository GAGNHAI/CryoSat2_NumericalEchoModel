(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    734775,      14549]
NotebookOptionsPosition[    731441,      14463]
NotebookOutlinePosition[    731930,      14482]
CellTagsIndexPosition[    731887,      14479]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.528782481988389*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}], "**", "**"}], "*", "\[IndentingNewLine]", "Copyright", " ", 
    RowBox[{"(", "c", ")"}], " ", "2013"}], ",", " ", 
   RowBox[{"Duncan", " ", 
    RowBox[{"J", ".", " ", "Wingham"}]}], ",", " ", "\[IndentingNewLine]", 
   " ", 
   RowBox[{
   "Center", " ", "for", " ", "Polar", " ", "Observation", " ", "and", " ", 
    "Modelling"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"University", " ", "College", " ", "London"}], ",", " ", "London", 
   ",", " ", 
   RowBox[{
    RowBox[{"U", ".", "K", ".", "\[IndentingNewLine]", "\n", "Permission"}], 
    " ", "is", " ", "hereby", " ", "granted"}], ",", 
   RowBox[{"free", " ", "of", " ", "charge"}], ",", 
   RowBox[{
   "to", " ", "any", " ", "person", " ", "obtaining", " ", "a", " ", "copy", 
    "\n", "of", " ", "this", " ", "software", " ", "and", " ", "associated", 
    " ", "documentation", " ", "files", " ", 
    RowBox[{"(", 
     RowBox[{"the", " ", "\"\<Software\>\""}], ")"}]}], ",", 
   RowBox[{
   "to", " ", "deal", "\n", "in", " ", "the", " ", "Software", " ", "without",
     " ", "restriction"}], ",", 
   RowBox[{
   "including", " ", "without", " ", "limitation", " ", "the", " ", "rights", 
    "\n", "to", " ", "use"}], ",", "copy", ",", "modify", ",", "merge", ",", 
   "publish", ",", "distribute", ",", "sublicense", ",", 
   RowBox[{
    RowBox[{"and", "/", "or"}], " ", "sell", "\n", "copies", " ", "of", " ", 
    "the", " ", "Software"}], ",", 
   RowBox[{
   "and", " ", "to", " ", "permit", " ", "persons", " ", "to", " ", "whom", 
    " ", "the", " ", "Software", " ", "is", "\n", "furnished", " ", "to", " ",
     "do", " ", "so"}], ",", 
   RowBox[{"subject", " ", "to", " ", "the", " ", "following", " ", 
    RowBox[{"conditions", ":", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
     "The", " ", "above", " ", "copyright", " ", "notice", " ", "and", " ", 
      "this", " ", "permission", " ", "notice", " ", "shall", " ", "be", " ", 
      "included", " ", "in", "\n", "all", " ", "copies", " ", "or", " ", 
      "substantial", " ", "portions", " ", "of", " ", "the", " ", 
      RowBox[{
      "Software", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "THE"}], 
      " ", "SOFTWARE", " ", "IS", " ", "PROVIDED", " ", "\"\<AS IS\>\""}]}]}],
    ",", 
   RowBox[{"WITHOUT", " ", "WARRANTY", " ", "OF", " ", "ANY", " ", "KIND"}], 
   ",", 
   RowBox[{"EXPRESS", " ", "OR", " ", "\[IndentingNewLine]", "IMPLIED"}], ",", 
   RowBox[{
   "INCLUDING", " ", "BUT", " ", "NOT", " ", "LIMITED", " ", "TO", " ", "THE",
     " ", "WARRANTIES", " ", "OF", " ", "MERCHANTABILITY"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{
   "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", "PURPOSE", " ", 
    "AND", " ", 
    RowBox[{"NONINFRINGEMENT", ".", "IN"}], " ", "NO", " ", "EVENT", " ", 
    "SHALL", " ", "THE", " ", "\[IndentingNewLine]", "AUTHORS", " ", "OR", 
    " ", "COPYRIGHT", " ", "HOLDERS", " ", "BE", " ", "LIABLE", " ", "FOR", 
    " ", "ANY", " ", "CLAIM"}], ",", 
   RowBox[{
   "DAMAGES", " ", "OR", " ", "OTHER", "\[IndentingNewLine]", "LIABILITY"}], 
   ",", 
   RowBox[{
   "WHETHER", " ", "IN", " ", "AN", " ", "ACTION", " ", "OF", " ", 
    "CONTRACT"}], ",", 
   RowBox[{"TORT", " ", "OR", " ", "OTHERWISE"}], ",", 
   RowBox[{"ARISING", " ", "FROM"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{
   "OUT", " ", "OF", " ", "OR", " ", "IN", " ", "CONNECTION", " ", "WITH", 
    " ", "THE", " ", "SOFTWARE", " ", "OR", " ", "THE", " ", "USE", " ", "OR",
     " ", "OTHER", " ", "DEALINGS", " ", "IN", "\[IndentingNewLine]", "THE", 
    " ", 
    RowBox[{"SOFTWARE", ".", "\[IndentingNewLine]", 
     RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**"}], "*"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.528782482901331*^9, 3.528785018906268*^9, {3.590222862516675*^9, 
   3.590223090357587*^9}, {3.590224254527259*^9, 3.590224385851264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{" ", 
           RowBox[{
            RowBox[{"Description", ":", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "This", " ", "code", " ", "computes", " ", "the", " ", 
               "CryoSat"}], "-", 
              RowBox[{"2", " ", "pulse"}], "-", 
              RowBox[{"limited", " ", 
               RowBox[{"(", "PL", ")"}]}]}]}], ",", " ", 
            RowBox[{"SAR", " ", "and", " ", "SARin", " ", 
             RowBox[{"echoes", ".", " ", "No"}], " ", "input", " ", "from", 
             " ", "the", " ", "user", " ", "is", "\[IndentingNewLine]", 
             RowBox[{"required", ".", " ", "Output"}], " ", "files", " ", 
             "of", " ", "the", " ", "calculated", " ", "model", " ", "are", 
             " ", "generated", " ", "and", " ", "written", " ", "by", " ", 
             "this", " ", 
             RowBox[{"script", ".", " ", "A"}], " ", "usage", " ", 
             "example"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{
            "which", " ", "plots", " ", "examples", " ", "of", " ", "the", 
             " ", "model", " ", "output", " ", "waveforms"}], ",", " ", 
            RowBox[{"is", " ", "provided", " ", 
             RowBox[{
             "below", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "Please"}], " ", "do", " ", "familiarise", " ", "yourself", " ",
              "with", " ", "the", " ", "code"}], ",", " ", 
            RowBox[{
            "as", " ", "certain", " ", "segments", " ", "of", " ", "this", 
             " ", "code", " ", "should", " ", "be", " ", 
             "\[IndentingNewLine]", "modified", " ", "depending", " ", "of", 
             " ", "which", " ", "echo", " ", 
             RowBox[{"(", 
              RowBox[{"PL", ",", " ", 
               RowBox[{"SAR", " ", "or", " ", "SARin"}]}], ")"}], " ", "you", 
             " ", "would", " ", "like", " ", "to", " ", 
             RowBox[{
             "generate", ".", " ", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "A"}], " ", "detailed", " ", 
             "description", " ", "of", " ", "the", " ", "theory", " ", "on", 
             " ", "which", " ", "this", " ", "code", " ", "is", " ", 
             RowBox[{
             "built", ":", " ", "\[IndentingNewLine]", 
              "\"\<Precise Estimates of Ocean Surface Parameters from the \
CryoSat-2 Synthetic Aperture, Interferometric\nAltimeter\>\""}]}], ",", " ", 
            RowBox[{"Katharine", " ", 
             RowBox[{"A", ".", " ", "Giles"}]}], ",", " ", 
            RowBox[{"Duncan", " ", 
             RowBox[{"J", ".", " ", "Wingham"}]}], ",", " ", 
            RowBox[{"Natalia", " ", "Galin"}], ",", " ", 
            RowBox[{"Robert", " ", "Cullen"}], ",", " ", 
            RowBox[{"Walter", " ", 
             RowBox[{
             "H", ".", " ", "F", ".", " ", "Smith", ".", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], " ", 
             "code", " ", "consists", " ", "of", " ", "two", " ", 
             RowBox[{"parts", ":", "\[IndentingNewLine]", "Part1"}]}]}], 
           ")"}], " ", "Code", " ", "to", " ", "generate", " ", "and", " ", 
          "write", " ", "to", " ", "disk", " ", "the", " ", "look"}], "-", 
         RowBox[{"up", " ", "tables", " ", "for", " ", "PL"}]}], ",", " ", 
        RowBox[{"SAR", " ", "and", " ", "SARin", " ", 
         RowBox[{"echoes", ".", "\[IndentingNewLine]", "   ", "Part2"}]}]}], 
       ")"}], " ", "Code", " ", "to", " ", "ingest", " ", "the", " ", 
      "look"}], "-", 
     RowBox[{
     "up", " ", "tables", " ", "generated", " ", "in", " ", "Part1"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "and", " ", "demonstrate", " ", "the", " ", "use", " ", "of", " ", 
      "these", " ", "look"}], "-", 
     RowBox[{"up", " ", "tables"}]}], ",", " ", 
    RowBox[{
    "providing", " ", "example", " ", "plots", " ", "of", " ", "SAR", " ", 
     "and", " ", "PL", " ", 
     RowBox[{
     "echoes", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "This"}], " ", "code"}], ",", " ", 
    RowBox[{"the", " ", "companion", " ", "paper"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"and", " ", "look"}], "-", 
      RowBox[{"up", " ", "tables", " ", 
       RowBox[{"(", 
        RowBox[{"for", " ", "SAR", " ", "and", " ", "PL", " ", "modes"}], 
        ")"}], " ", "are", " ", "available", " ", "on", " ", "the", " ", 
       "GitHub", " ", 
       RowBox[{"repository", ":", "\[IndentingNewLine]", "https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"github", ".", "com"}], "/", "ngalin"}], "/", 
      "CryoSat2_NumericalEchoModel"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"!!", 
    RowBox[{"!!", 
     RowBox[{"!!", 
      RowBox[{"!!", 
       RowBox[{"!", 
        RowBox[{
         RowBox[{
         "BY", " ", "DEFAULT", " ", "THE", " ", "ROUTINE", " ", "CALCULATES", 
          " ", "CRYOSAT"}], "-", 
         RowBox[{"2", " ", "SAR", " ", "MODE", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ECHOES", "!!"}], "!!"}], "!!"}], "!!"}], 
           "!!"}]}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "c", ",", "t", ",", "h", ",", "eta", ",", "r", ",", "k0", ",", "lambda", 
     ",", "del", ",", "d", ",", "zeta", ",", "d0", ",", "thetaint", ",", 
     "thetastart", ",", "theta", ",", "thetaw", ",", "kinc"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2.99792458", " ", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "h", " ", "IS", " ", "THE", " ", "REFERENCE", " ", "SATELLITE", " ", 
     "ALTITUDE", " ", "IN", " ", "METRES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "720000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "r", " ", "IS", " ", "THE", " ", "REFERENCE", " ", "EARTH", " ", "RADIUS",
      " ", "IN", " ", "METRES"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "6380000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", "=", 
     RowBox[{"1", "+", 
      RowBox[{"h", "/", "r"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "lambda", " ", "IS", " ", "THE", " ", "CARRIER", " ", "WAVELENGTH", " ", 
     "IN", " ", "METRES"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", "=", 
     RowBox[{"c", "/", 
      RowBox[{"(", " ", 
       RowBox[{"13.575", " ", 
        RowBox[{"10", "^", "9"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k0", "=", 
     RowBox[{"2", " ", 
      RowBox[{"Pi", "/", "lambda"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "del", " ", "IS", " ", "THE", " ", "SPACING", " ", "OF", " ", "THE", " ", 
     "SAMPLES", " ", "IN", " ", "THE", " ", "SYNTHETIC", " ", "APERTURE"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"del", "=", 
     RowBox[{"7200.", "/", "18182"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "zeta", " ", "IS", " ", "THE", " ", "ANGULAR", " ", "WIDTH", " ", "OF", 
     " ", "A", " ", "SYNTHETIC", " ", 
     RowBox[{"BEAM", ".", " ", "SEE"}], " ", "NOTE", " ", "CONCERNING", " ", 
     "NUMBER", " ", "OF", " ", "BEAMS", " ", 
     RowBox[{"BELOW", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta", "=", 
     RowBox[{"Pi", "/", 
      RowBox[{"(", 
       RowBox[{"64", " ", "k0", " ", "del"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
     RowBox[{
      RowBox[{"set", " ", "zeta"}], " ", "=", " ", "0"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"zeta", " ", "=", " ", "0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"d0", " ", "IS", " ", "THE", " ", "SYNTHETIC", " ", "BEAM", " ", 
       RowBox[{"GAIN", ".", " ", "d0"}]}], "=", 
      RowBox[{
      "4096", " ", "IS", " ", "FOR", " ", "A", " ", "RECTANGULAR", " ", 
       "WEIGHTING", " ", "ON", " ", "THE", " ", "SYNTHETIC", " ", 
       "APERTURE"}]}], ";", " ", 
     RowBox[{
      RowBox[{
      "IF", " ", "USING", " ", "A", " ", "HAMMING", " ", "WEIGHTING", " ", 
       RowBox[{"(", 
        RowBox[{"SEE", " ", "BELOW"}], ")"}], " ", "use", " ", "d0"}], "=", 
      RowBox[{"1162.8100000000006`", " ", 
       RowBox[{"INSTEAD", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"d0", "=", "4096"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0", " ", "=", " ", "1162.8100000000006"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"SAR", " ", "Hamming", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
      RowBox[{
       RowBox[{"set", " ", "d0"}], " ", "=", " ", "1"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"d0", " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**"}], "*", "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"(*", " ", 
     RowBox[{
     "bandwidth", " ", "IS", " ", "THE", " ", "COMPRESSED", " ", "PULSE", " ",
       "BANDWIDTH"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"bandwidth", "=", "320000000."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "res", " ", "IS", " ", "THE", " ", "SAMPLING", " ", "INTERVAL", " ", "IN",
      " ", "DELAY", " ", "TIME", " ", "OF", " ", "THE", " ", "ECHOES"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res", "=", 
     RowBox[{"1", "/", "bandwidth"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammabar", "=", "0.012215368000378016`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammahat", "=", "0.0381925958945466`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma1", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "+", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma2", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", "=", 
     RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"THE", " ", "NEXT", " ", "LINE", " ", "SETS", " ", "THE", " ", 
       RowBox[{"BASELINE", ".", " ", "IF"}], " ", "THIS", " ", "PARAMETER", 
       " ", "IS", " ", "NON"}], "-", "ZERO"}], ",", " ", 
     RowBox[{
     "THE", " ", "CODE", " ", "WILL", " ", "EVALUATE", " ", "THE", " ", 
      "INTEFEROMETRIC", " ", "CROSS", " ", 
      RowBox[{"PRODUCT", ".", " ", "IF"}], " ", "YOU", " ", "SET", " ", 
      "THIS", " ", "PARAMETER", " ", "TO", " ", "ZERO"}], ",", " ", 
     RowBox[{
     "IT", " ", "WILL", " ", "EVALUATE", " ", "THE", " ", "SARIN", " ", "OR", 
      " ", "SAR", " ", "ECHO", " ", 
      RowBox[{"POWER", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"In", " ", "PL", " ", "mode"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"set", " ", "baseline"}], " ", "=", " ", "0"}], ";"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"baseline", "=", "0"}], ";", 
    RowBox[{"(*", 
     RowBox[{"1.1676", ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**"}], "*", "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"(*", " ", 
     RowBox[{
     "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
      "ANTENNA", " ", "GAIN", " ", "PATTERN"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gainsqr", "[", 
      RowBox[{"roe_", ",", "thetaw_"}], "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roe", " ", 
              RowBox[{"Cos", "[", "thetaw", "]"}]}], ")"}], "/", "gamma1"}], 
           ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roe", " ", 
              RowBox[{"Sin", "[", "thetaw", "]"}]}], ")"}], "/", "gamma2"}], 
           ")"}], "^", "2"}]}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
     "COMPRESSED", " ", "PULSE", " ", "SHAPE"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pulse", "[", "t_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"t", "\[Equal]", "0"}], ",", "1", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", " ", 
           RowBox[{"t", "/", "res"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"Pi", " ", 
           RowBox[{"t", "/", "res"}]}], ")"}]}], ")"}], "^", "2"}]}], "]"}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "SUBROUTINE", " ", "IS", " ", "THE", " ", 
     "SURFACE", " ", "ROUGHNESS", " ", "DISTRIBUTION"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rough0", "[", 
     RowBox[{"t_", ",", "sigma_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", "Pi"}], "]"}], " ", "sigma"}], ")"}]}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "/", "sigma"}], ")"}], "^", "2"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "CODE", " ", "SPECIFIES", " ", "RECTANGULAR", 
     " ", "WEIGHTING", " ", "ON", " ", "THE", " ", "SYNTHETIC", " ", 
     "APERTURE"}], "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"d", "[", "theta_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "4096"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"109.82593388049635`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"329.47780164148907`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"549.1296694024817`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"768.7815371634745`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"988.433404924467`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"1208.0852726854598`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"1427.7371404464525`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"1647.3890082074452`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"1867.040875968438`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2086.6927437294307`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2306.344611490423`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2525.996479251416`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2745.6483470124085`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2965.3002147734014`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"3184.9520825343943`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"3404.6039502953868`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"3624.2558180563797`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"3843.9076858173717`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4063.5595535783646`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4283.211421339358`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4502.86328910035`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4722.515156861343`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4942.167024622336`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"5161.818892383329`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"5381.470760144321`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"5601.1226279053135`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"5820.774495666306`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6040.426363427299`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6260.078231188292`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6479.730098949284`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6699.381966710277`", " ", "theta"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6919.03383447127`", " ", "theta"}], "]"}]}], ")"}], "^", 
        "2"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
     "IF", " ", "YOU", " ", "WANT", " ", "HAMMING", " ", "WEIGHTING", " ", 
      "ON", " ", "THE", " ", "SYNTHETIC", " ", "APERTURE"}], ",", " ", 
     RowBox[{"USE", " ", "THIS", " ", "CODE", " ", 
      RowBox[{"INSTEAD", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "[", "theta_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "1162.8100000000006`"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1.9988563675214088`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"109.82593388049635`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9897243601271184`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"329.47780164148907`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9715511033307518`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"549.1296694024817`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9445172111230358`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"768.7815371634745`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.9088913584702256`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"988.433404924467`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.8650276111015833`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1208.0852726854598`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.8133619066450888`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1427.7371404464525`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.7544077220834402`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1647.3890082074452`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.6887509705891108`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1867.040875968438`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.6170441784560068`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2086.6927437294307`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.5400000000000003`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2306.344611490423`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.4583841348801627`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2525.996479251416`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.37300771823155`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2745.6483470124085`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.2847192592398093`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2965.3002147734014`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.1943962082756865`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3184.9520825343943`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.1029362363990272`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3404.6039502953868`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"1.0112483139004902`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3624.2558180563797`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.9202436765464241`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3843.9076858173717`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.8308267693084356`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4063.5595535783646`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.7438862575829166`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4283.211421339358`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.6602861952350905`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4502.86328910035`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.5808574372435015`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4722.515156861343`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.5063893822899657`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4942.167024622336`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.4376221273608131`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5161.818892383329`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.3752391123305404`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5381.470760144321`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.31986032762928496`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5601.1226279053135`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.27203615249938984`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5820.774495666306`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.23224188507922494`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6040.426363427299`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.20087301867675067`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6260.078231188292`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.17824131117933972`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6479.730098949284`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.1645716866638307`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6699.381966710277`", " ", "theta"}], "]"}]}], "+", 
         RowBox[{"0.16000000000000003`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"6919.03383447127`", " ", "theta"}], "]"}]}]}], ")"}], "^",
        "2"}]}]}], " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"WHEN", " ", "GENERATING", " ", "PL", " ", "ECHOES", " ", 
      RowBox[{"SET", ":", " ", 
       RowBox[{"d", "[", "theta_", "]"}]}]}], ":=", " ", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"d", "[", "theta_", "]"}], ":=", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "THE", " ", "TOTAL", " ", "NUMBER", " ", "OF", " ", "BEAMS", " ", "IS", 
       " ", "2", " ", "knrange"}], " ", "+", " ", 
      RowBox[{
      "1.", " ", "THIS", " ", "CODE", " ", "HAS", " ", "BEEN", " ", "SET", 
       " ", "UP", " ", "TO", " ", "DEAL", " ", "WITH", " ", "THE", " ", 
       "AZIMUTHAL", " ", "FFT", " ", "OF", " ", "A", " ", "BURST"}]}], ",", 
     " ", 
     RowBox[{"WHICH", " ", "HAS", " ", "63", " ", 
      RowBox[{"BEAMS", ".", " ", "AS"}], " ", "THIS", " ", "CODE", " ", "IS", 
      " ", "SET", " ", "UP"}], ",", " ", 
     RowBox[{
     "IT", " ", "ASSUMES", " ", "THAT", " ", "THERE", " ", "IS", " ", "AS", 
      " ", "MANY", " ", "FORWARD", " ", "BEAMS", " ", "AS", " ", "BACKWARD", 
      " ", 
      RowBox[{"ONES", ".", " ", "NOTE"}], " ", "THAT", " ", "IF", " ", "YOU", 
      " ", "WISH", " ", "TO", " ", "APPLY", " ", "TO", " ", "A", " ", 
      "STACK"}], ",", " ", 
     RowBox[{
     "WHICH", " ", "IN", " ", "SAR", " ", "MODE", " ", "HAS", " ", "MORE", 
      " ", "BEAMS"}], ",", " ", 
     RowBox[{
     "YOU", " ", "WILL", " ", "NEED", " ", "TO", " ", "ALTER", " ", "NOT", 
      " ", "JUST", " ", "THE", " ", "NUMBER", " ", "OF", " ", "BEAMS"}], ",", 
     " ", 
     RowBox[{
     "BUT", " ", "ALSO", " ", "ACCOUNT", " ", "FOR", " ", "THE", " ", "FACT", 
      " ", "THAT", " ", "THE", " ", "ANGULAR", " ", "SAMPLING", " ", "OF", 
      " ", "A", " ", "STACK", " ", "IS", " ", "NOT", " ", "EQUAL", " ", "TO", 
      " ", "THE", " ", "ANGULAR", " ", "WIDTH", " ", "OF", " ", "A", " ", 
      RowBox[{"BEAM", ".", " ", "HOWEVER"}], " ", "IN", " ", "PRACTICE"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
      "THE", " ", "ANGULAR", " ", "BEHAVIOUR", " ", "IS", " ", "HIGHLY", " ", 
       "SAMPLED", " ", "EVEN", " ", "WITH", " ", "63", " ", 
       RowBox[{"BEAMS", ".", " ", "INCREASING"}], " ", "THE", " ", "NUMBER", 
       " ", "OF", " ", "BEAMS", " ", "DOES", " ", "NOT", " ", "IN", " ", 
       "PRACTICE", " ", "ALTER", " ", "THE", " ", "SHAPE", " ", "OF", " ", 
       "THE", " ", "MULTI"}], "-", 
      RowBox[{"LOOKED", " ", "ECHO"}]}], ",", " ", 
     RowBox[{"SIMPLY", " ", "ITS", " ", 
      RowBox[{"POWER", ".", " ", "IF"}], " ", "YOU", " ", "WISH", " ", "TO", 
      " ", "APPLY", " ", "TO", " ", "STACKS"}], ",", " ", 
     RowBox[{
     "YOU", " ", "NEED", " ", "SIMPLY", " ", "TO", " ", "MULTIPLY", " ", 
      "THE", " ", "POWER", " ", "BY", " ", "THE", " ", "RATIO", " ", "OF", 
      " ", "THE", " ", "NUMBER", " ", "OF", " ", "BEAMS", " ", "IN", " ", 
      "THE", " ", "STACK", " ", "TO", " ", "THE", " ", "NUMBER", " ", "IN", 
      " ", "THIS", " ", "CALCULATION", " ", 
      RowBox[{"(", 
       RowBox[{
       "63", " ", "AS", " ", "IT", " ", "IS", " ", "PRESENTLY", " ", "SET", 
        " ", 
        RowBox[{"UP", "."}]}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"knrange", "=", "31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "IMPULSE", " ", "RESPONSE", " ", "VARIES", " ", "VERY", " ", 
      "RAPIDLY", " ", "WHEN", " ", "THE", " ", "BEAM", " ", "IS", " ", "NEAR",
       " ", "NORMAL", " ", 
      RowBox[{"INCIDENCE", ".", " ", "IN"}], " ", "THE", " ", "CODE", " ", 
      "BELOW"}], ",", " ", 
     RowBox[{
     "THE", " ", "NUMERICAL", " ", "INTEGRATION", " ", "OF", " ", "THESE", 
      " ", "BEAMS", " ", "IS", " ", "DONE", " ", "FOR", " ", "A", " ", 
      "HIGHER", " ", "SAMPLING", " ", "RATE", " ", "THAN", " ", "THE", " ", 
      "OTHER", " ", 
      RowBox[{"BEAMS", ".", " ", "knmid"}], " ", "SPECIFIES", " ", "THE", " ",
       "NUMBER", " ", "OF", " ", "BEAMS", " ", "AROUND", " ", "THE", " ", 
      "NADIR", " ", "BEAM", " ", "FOR", " ", "WHICH", " ", "THIS", " ", 
      "HIGHER", " ", "SAMPLING", " ", "INTERVAL", " ", "IS", " ", 
      RowBox[{"USED", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knmid", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "istart", " ", "SPECIFIES", " ", "THE", " ", "EARLIEST", " ", "DELAY", 
     " ", "TIME", " ", "IN", " ", "ns", " ", "FOR", " ", "WHICH", " ", "THE", 
     " ", "IMPULSE", " ", "RESPONSE", " ", "IS", " ", "EVALUATED"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"istart", "=", 
     RowBox[{"-", "50"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "iend", "  ", "SPECIFIES", " ", "THE", " ", "LATEST", " ", "DELAY", " ", 
     "TIME", " ", "IN", " ", "ns", " ", "FOR", " ", "WHICH", " ", "THE", " ", 
     "IMPULSE", " ", "RESPONSE", " ", "IS", " ", "EVALUATED"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iend", "=", "180"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zetab", "=", 
     RowBox[{"500", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"npoints", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"iend", "-", "istart"}], ")"}], "/", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "nsigma", " ", "SPECIFIES", " ", "THE", " ", "NUMBER", " ", "OF", " ", 
     "VALUES", " ", "OF", " ", "SURFACE", " ", "ROUGHNESS", " ", "IN", " ", 
     "THE", " ", "LOOK", " ", "UP", " ", "TABLES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsigma", "=", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sigmaint", " ", "SPECIFIES", " ", "THE", " ", "SAMPLING", " ", 
     "INTERVAL", " ", "IN", " ", "METRES", " ", "OF", " ", "THE", " ", 
     "SURFACE", " ", "ROUGHNESS", " ", "STANDARD", " ", "DEVIATION", " ", 
     "OF", " ", "THE", " ", "LOOK", " ", "UP", " ", 
     RowBox[{"TABLES", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaint", "=", "0.10"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "WHAT", " ", "FOLLOWS", " ", "NOW", " ", "ARE", " ", "FOUR", " ", 
      "BLOCKS", " ", "OF", " ", "CODE", " ", "THAT", " ", "ARE", " ", 
      "ESSENTIALLY", " ", "SIMILAR"}], ",", " ", 
     RowBox[{
     "AND", " ", "WHICH", " ", "ARE", " ", "SEPARATED", " ", "BY", " ", "THE",
       " ", "WRITING", " ", "OF", " ", "A", " ", "LOOK", " ", "UP", " ", 
      "TABLE", " ", "TO", " ", 
      RowBox[{"DISC", ".", " ", "THESE"}], " ", "FOUR", " ", "BLOCKS", " ", 
      "CORRESPOND", " ", "TO", " ", "THE", " ", "TERMS", " ", "IN", " ", 
      "THE", " ", "SERIES", " ", "REPRESENTATION", " ", "THAT", " ", "GIVES", 
      " ", "AS", " ", "PERTURBATIONS", " ", "THE", " ", "EFFECT", " ", "OF", 
      " ", "PITCH"}], ",", " ", 
     RowBox[{"ROLL", " ", "AND", " ", "HEIGHT", " ", "RESPECTIVELY"}], ",", 
     " ", 
     RowBox[{
     "WITH", " ", "THE", " ", "FIRST", " ", "BLOCK", " ", "PROVIDING", " ", 
      "THE", " ", "UNPERTURBED", " ", "LOOK", " ", "UP", " ", 
      RowBox[{"TABLES", ".", " ", "IN"}], " ", "WHAT", " ", "FOLLOWS"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "ONLY", " ", "THE", " ", "FIRST", " ", "BLOCK", " ", "IS", " ", 
       "COMMENTED"}], ";", " ", 
      RowBox[{"IN", " ", "THE", " ", "REMAINING", " ", "BLOCKS"}]}], ",", " ", 
     RowBox[{"ONLY", " ", "DIFFERENCES", " ", "ARE", " ", 
      RowBox[{
      "IDENTIFIED", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "NOTE"}], " ", "THAT", " ", "THIS", " ", "CODE", " ", "ASSUMES", " ", 
      "THAT", " ", "PITCH", " ", "AND", " ", "ROLL", " ", "ARE", " ", 
      RowBox[{"SMALL", ".", " ", "IF"}], " ", "YOU", " ", "WANT", " ", "THE", 
      " ", "RESULT", " ", "FOR", " ", "A", " ", "LARGE", " ", "PITCH", " ", 
      "OR", " ", "ROLL"}], ",", " ", 
     RowBox[{
     "YOU", " ", "WILL", " ", "NEED", " ", "TO", " ", "INCLUDE", " ", "THEIR",
       " ", "EFFECT", " ", "DIRECTLY", " ", "IN", " ", "THE", " ", 
      "DEFINITION", " ", "OF", " ", "THE", " ", "ANTENNA", " ", "GAIN", " ", 
      "PATTERN", " ", "gainsqr", " ", 
      RowBox[{"ABOVE", ".", " ", "IN"}], " ", "THAT", " ", "CASE"}], ",", " ",
      "HOWEVER", ",", " ", 
     RowBox[{
     "YOU", " ", "ONLY", " ", "NEED", " ", "TO", " ", "RUN", " ", "THE", " ", 
      "FIRST", " ", "BLOCK", " ", "OF", " ", "CODE", " ", 
      RowBox[{"BELOW", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "icre", " ", "EQUALS", " ", "THE", " ", "SAMPLING", " ", "INTERVAL", " ", 
     "IN", " ", "ns", " ", "WITH", " ", "WHICH", " ", "THE", " ", "IMPULSE", 
     " ", "RESPONSE", " ", "IS", " ", "SAMPLED"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"WITHIN", " ", "THIS", " ", "BLOCK"}], ",", " ", 
     RowBox[{
      RowBox[{
      "THERE", " ", "ARE", " ", "THREE", " ", "REPEATED", " ", "SUB"}], "-", 
      RowBox[{"BLOCKS", " ", "OF", " ", "INTEGRATION"}]}], ",", " ", 
     RowBox[{
     "IDENTIFIABLE", " ", "BY", " ", "THE", " ", "CALL", " ", "TO", " ", 
      RowBox[{"Monitor", ".", " ", "THE"}], " ", "FIRST", " ", "SET", " ", 
      "DOES", " ", "THE", " ", "BACKWARD", " ", "LOOKING", " ", "BEAMS"}], 
     ",", " ", 
     RowBox[{
     "THE", " ", "SECOND", " ", "THE", " ", "FORWARD", " ", "LOOKING", " ", 
      "BEAMS"}], ",", " ", 
     RowBox[{"THE", " ", "THIRD", " ", "SET", " ", "THE", " ", "CENTRAL", " ", 
      RowBox[{"BEAMS", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "CALL", " ", "TO", " ", "Monitor", " ", "INDICATES", " ", 
      "THE", " ", "CALCULATION", " ", "OF", " ", "THE", " ", "IMPULSE", " ", 
      "RESPONSE", " ", "AT", " ", "SUCCESSIVE", " ", "INSTANTS", " ", "OF", 
      " ", "ECHO", " ", "DELAY", " ", "TIME", " ", 
      RowBox[{"tor", ".", " ", "THE"}], " ", "INTEGRATION", " ", "IS", " ", 
      "PERFORMED", " ", "AROUND", " ", "A", " ", "RANGE", " ", 
      RowBox[{"RING", ".", " ", "WHEN"}], " ", "tor", " ", "IS", " ", 
      "SMALL"}], ",", " ", 
     RowBox[{
     "THE", " ", "INTEGRAND", " ", "OCCUPIES", " ", "MOST", " ", "OF", " ", 
      "THE", " ", "DOMAIN"}], ",", " ", 
     RowBox[{"BUT", " ", "WHEN", " ", "tor", " ", "IS", " ", "LARGE"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "THE", " ", "INTEGRAND", " ", "IS", " ", "EFFECTIVELY", " ", "NON"}], 
      "-", 
      RowBox[{
      "ZERO", " ", "ONLY", " ", "FOR", " ", "A", " ", "SMALL", " ", "PART", 
       " ", "OF", " ", "THE", " ", 
       RowBox[{"DOMAIN", ".", " ", "THUS"}], " ", "MOST", " ", "OF", " ", 
       "THE", " ", "CODE", " ", "IS", " ", "CONCERNED", " ", "WITH", " ", 
       "IDENTIFYING", " ", "THAT", " ", "PART", " ", "OF", " ", "THE", " ", 
       "DOMAIN", " ", "FOR", " ", "WHICH", " ", "THE", " ", "INTEGRAND", " ", 
       "IS", " ", "EFFECTIVELY", " ", "NON"}], "-", 
      RowBox[{"ZERO", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{"\.08", "\[IndentingNewLine]", 
                  RowBox[{"lowerlimitminus", " ", "=", " ", 
                   RowBox[{"-", "Pi"}]}]}], ";", "\[IndentingNewLine]", "  ", 
                 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "AND", " ", "NEXT", " ", "IS", " ", "THE", " ", "ACTUAL", " ", 
                 RowBox[{"INTEGRATION", ":", " ", 
                  RowBox[{
                  "thetaw", " ", "IS", " ", "THE", " ", "INTEGRATION", " ", 
                   "VARIABLE", " ", "EQUAL", " ", "TO", " ", "AN", " ", 
                   "ANGLE", " ", "SPECIFYING", " ", "THE", " ", "POSITION", 
                   " ", "ON", " ", "THE", " ", "RANGE", " ", 
                   RowBox[{"RING", "."}]}]}]}], " ", "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"THIS", " ", "SUMS", " ", "OVER", " ", "THE", " ", "BEAMS"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f0", "=", 
     RowBox[{"Interpolation", "[", "part1sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f0", "=", 
     RowBox[{"Interpolation", "[", "part3sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", "  ", 
                RowBox[{
                 RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
                 "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
                 RowBox[{
                  RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                  " ", "=", " ", 
                  RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
                 RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";"}], 
                "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out1", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f0", "=", 
     RowBox[{"Interpolation", "[", "part2sum1", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "SUMS", " ", "THE", " ", "THREE", 
     " ", "SETS", " ", "OF", " ", "BEAMS", " ", "TOGETHER"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f0", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "BLOCK", " ", "OF", " ", "CODE", " ", "DOES", 
     " ", "THE", " ", "CONVOLUTION", " ", "WITH", " ", "THE", " ", 
     "COMPRESSED", " ", 
     RowBox[{"PULSE", ".", " ", "IT"}], " ", "USES", " ", "FFT", " ", 
     "METHODS", " ", "TO", " ", "IMPLEMENMT", " ", 
     RowBox[{"THIS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g01", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "THE", " ", "NEXT", " ", "BLOCK", " ", "OF", " ", "CODE", " ", "DOES", 
      " ", "THE", " ", "CONVOLUTION", " ", "OVER", " ", "THE", " ", "SURFACE",
       " ", "ROUGHNESS", " ", "DISTRIBUTION"}], ",", " ", 
     RowBox[{
     "FOR", " ", "A", " ", "SEQUENCE", " ", "OF", " ", "VALUES", " ", "OF", 
      " ", "ROUGHNESS", " ", "STANDARD", " ", 
      RowBox[{"DEVIATION", ".", " ", "IT"}], " ", "USES", " ", "FFT", " ", 
      "METHODS", " ", "TO", " ", "IMPLEMENT", " ", "THIS"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g01"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g01", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"FOR", " ", "ZERO", " ", "WAVEHEIGHT"}], ",", 
     RowBox[{
      RowBox[{
      "THE", " ", "ROUGHNESS", " ", "DISTRIBUTION", " ", "IS", " ", "A", " ", 
       "DELTA", " ", 
       RowBox[{"FUNCTION", ".", " ", "THE"}], " ", "NEXT", " ", "LINE", " ", 
       "APPENDS", " ", "TO", " ", "THE", " ", "FRONT", " ", "OF", " ", "THE", 
       " ", "LOOK"}], "-", 
      RowBox[{"UP", " ", "TABLE"}]}], ",", " ", 
     RowBox[{"THE", " ", "ZERO", " ", "WAVEHEIGHT", " ", "RESULT"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes0", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes0", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   " ", 
   RowBox[{"(*", 
    RowBox[{"echoes0", ">>", "\"\<SAR Rectangular 63 beams h0\>\""}], "*)"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"echoes0", ">>", "\"\<PL h0\>\""}], " ", 
    RowBox[{"(*", 
     RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes0", ">>", "\"\<SAR Hamming 63 beams h0\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "NEXT", " ", "BLOCK", " ", "CALCULATES", " ", "THE", " ", 
     RowBox[{"cos", "^", "2"}], " ", "TERM", " ", "IN", " ", "THE", " ", 
     "PERTURBATIONS", " ", "FOR", " ", "PITCH", " ", "AND", " ", "ROLL"}], 
    "  ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out2", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f21", "=", 
     RowBox[{"Interpolation", "[", "part1sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out2", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f21", "=", 
     RowBox[{"Interpolation", "[", "part3sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out21", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum21", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out21", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out21", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f21", "=", 
     RowBox[{"Interpolation", "[", "part2sum21", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f21", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g11", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g11"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g11", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes1", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes1", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes1", " ", ">>", "\"\<SAR Rectangular 63 beams h11\>\""}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"echoes1", ">>", "\"\<PL h11\>\""}], 
    RowBox[{"(*", 
     RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes1", ">>", "\"\<SAR Hamming 63 beams h11\>\""}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"THIS", " ", "NEXT", " ", "BLOCK", " ", "DOES", " ", "THE", " ", 
     RowBox[{"sin", "^", "2"}], " ", "PERTURBATION"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out3", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum31", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out3", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out3", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f22", "=", 
     RowBox[{"Interpolation", "[", "part1sum31", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out3", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out3", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out3", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f22", "=", 
     RowBox[{"Interpolation", "[", "part3sum22", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out22", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{"h", " ", "eta"}], ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], " ", 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"roe", "^", "2"}], " ", 
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "thetaw", "]"}], "^", "2"}], 
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum22", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out22", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out22", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f22", "=", 
     RowBox[{"Interpolation", "[", "part2sum22", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f22", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g12", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "g12"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", 
         RowBox[{
          RowBox[{"samf0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"g12", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes2", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes2", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes2", ">>", " ", "\"\<SAR Rectangular 63 beams h12\>\""}], 
    "*)"}], 
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"echoes2", ">>", "\"\<PL h12\>\""}], 
    RowBox[{"(*", 
     RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes2", ">>", "\"\<SAR Hamming 63 beams h12\>\""}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "FINAL", " ", "BLOCK", " ", "DOES", " ", "THE", " ", 
     "PERTURBATION", " ", "FOR", " ", "ALTITUDE", " ", 
     RowBox[{"VARIATIONS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delh", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", "=", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"h", "+", "delh"}], ")"}], "/", "r"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part1out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"-", "knrange"}], ",", 
           RowBox[{"-", "knmid"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part1out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part1out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part1f4", "=", 
     RowBox[{"Interpolation", "[", "part1sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part3out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "knmid", ",", "knrange"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part3out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part3out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"knrange", "-", "knmid", "+", "1"}], ",", "1"}], "}"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part3f4", "=", 
     RowBox[{"Interpolation", "[", "part3sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"part2out4", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"tor", "=", 
             RowBox[{"i", "*", 
              RowBox[{"10.", "^", 
               RowBox[{"(", 
                RowBox[{"-", "9"}], ")"}]}]}]}], ";", 
            RowBox[{"zetak", "=", 
             RowBox[{"j", "*", "zeta"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", " ", 
                 RowBox[{"tor", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                   ")"}]}]}], "+", 
                RowBox[{"zetak", "^", "2"}]}], "<", "0"}], ",", "0", ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roe", "=", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"c", " ", 
                   RowBox[{"tor", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"h", "+", "delh"}], ")"}], " ", "eta"}], 
                    ")"}]}]}], "+", 
                  RowBox[{"zetak", "^", "2"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"2", " ", "Pi"}]}], ",", 
                  RowBox[{"width", "=", 
                   RowBox[{"1.2", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"zetab", " ", "/", "roe"}], "]"}]}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "\[Equal]", "0"}], ",", 
                  RowBox[{"ratio", "=", "10"}], ",", 
                  RowBox[{"ratio", "=", 
                   RowBox[{"zetak", "/", "roe"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"roe", "==", "0"}], ",", 
                  RowBox[{"theta0", "=", "0"}], ",", 
                  RowBox[{"theta0", "=", 
                   RowBox[{"ArcCos", "[", 
                    RowBox[{"zetak", "/", "roe"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ratio", "\[GreaterEqual]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"lowerlimitplus", "=", "0"}], ";", 
                   RowBox[{"lowerlimitminus", "=", 
                    RowBox[{"-", "width"}]}], ";", 
                   RowBox[{"upperlimitminus", "=", "0"}], ";", 
                   RowBox[{"upperlimitplus", "=", "width"}]}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ratio", "\[LessEqual]", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"upperlimitplus", "=", "Pi"}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "Pi"}], "+", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{"-", "Pi"}]}], ";", 
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"Pi", "-", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", "<", "1"}], " ", "&&", " ", 
                  RowBox[{"ratio", "\[GreaterEqual]", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratio", ">", 
                   RowBox[{"-", "1"}]}], " ", "&&", " ", 
                  RowBox[{"ratio", "<", "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"lowerlimitplus", "=", 
                   RowBox[{"theta0", "-", "width"}]}], ";", 
                  RowBox[{"lowerlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "-", "width"}]}], ";", 
                  RowBox[{"upperlimitminus", "=", 
                   RowBox[{
                    RowBox[{"-", "theta0"}], "+", "width"}]}], ";", 
                  RowBox[{"upperlimitplus", "=", 
                   RowBox[{"theta0", "+", "width"}]}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitminus", "<", 
                  RowBox[{"-", "Pi"}]}], ",", 
                 RowBox[{"lowerlimitminus", "=", 
                  RowBox[{"-", "Pi"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitminus", ">", "0"}], ",", 
                 RowBox[{"upperlimitminus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lowerlimitplus", "<", "0"}], ",", 
                 RowBox[{"lowerlimitplus", "=", "0"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"upperlimitplus", ">", "Pi"}], ",", 
                 RowBox[{"upperlimitplus", "=", "Pi"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"WARNING", ":", " ", 
                 RowBox[{"USER", " ", "MODIFIABLE", " ", 
                  RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
                  RowBox[{
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                   "**", "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "In", " ", "PL", " ", "mode", " ", "set", " ", "these", " ", 
                 RowBox[{"to", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "NG", "*)"}], "\[IndentingNewLine]", "  ", 
               RowBox[{"lowerlimitplus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitplus", " ", "=", " ", "Pi"}], ";", 
               RowBox[{
                RowBox[{"\.08", "\[IndentingNewLine]", "lowerlimitminus"}], 
                " ", "=", " ", 
                RowBox[{"-", "Pi"}]}], ";", "\[IndentingNewLine]", "  ", 
               RowBox[{"upperlimitminus", " ", "=", " ", "0"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**", "**", "**", "**", "**", "**", "**"}], "*", "*", 
                 RowBox[{
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                   "**"}]}], "********)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "theta", "]"}]}], "-", "zetak"}], 
                    "]"}], ",", 
                    RowBox[{"g", "[", "theta", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"theta", ",", 
                    RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], " ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "lowerlimitminus", ",", "lowerlimitplus"}],
                     "}"}]}], "]"}], "+", 
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gainsqr", "[", 
                    RowBox[{"roe", ",", "thetaw"}], "]"}], "  ", 
                    RowBox[{"d", "[", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", "thetaw", "]"}]}], "-", "zetak"}], 
                    "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", "k0", " ", "baseline", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roe", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"thetaw", "-", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], "-", 
                    RowBox[{"Sin", "[", "theta", "]"}]}], ")"}]}], "]"}]}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "thetaw", ",", "upperlimitminus", ",", "upperlimitplus"}],
                     "}"}]}], "]"}]}], " ", ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"-", "knmid"}], "+", "1"}], ",", 
           RowBox[{"knmid", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "istart", ",", "iend", ",", "icre"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2sum4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"part2out4", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"part2out4", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"knmid", "-", "1"}], ")"}]}], "+", "1"}], ",", "1"}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iend", "-", "istart"}], ")"}], "/", "icre"}]}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"part2f4", "=", 
     RowBox[{"Interpolation", "[", "part2sum4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"part1f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part3f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "+", 
        RowBox[{"part2f4", "[", 
         RowBox[{
          RowBox[{"istart", " ", "ns"}], "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampan", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "2048"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], "]"}], ",", 
         RowBox[{"pulse", "[", 
          RowBox[{"0.1", " ", 
           RowBox[{"(", 
            RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0extend", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsamf0extend", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"samf0extend", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trsampan", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "4196", "]"}], 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "10"}], ")"}]}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"sampan", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prod", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"trsampan", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"trsamf0extend", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conv", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
      RowBox[{"Fourier", "[", 
       RowBox[{"prod", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwr", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"istart", " ", "ns"}], " ", "+", 
          RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
         RowBox[{"conv", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g03", "=", 
     RowBox[{"Interpolation", "[", "pwr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samf0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g03", "[", 
           RowBox[{
            RowBox[{"istart", " ", "ns"}], "+", 
            RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "-", 
          RowBox[{"g01", "[", 
           RowBox[{
            RowBox[{"istart", " ", "ns"}], "+", 
            RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ")"}], "/", 
        "delh"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zero", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"istart", " ", "ns"}], " ", "+", 
           RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g03", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}], "-", 
             RowBox[{"g01", "[", 
              RowBox[{
               RowBox[{"istart", " ", "ns"}], "+", 
               RowBox[{"0.1", " ", "i", " ", "ns"}]}], "]"}]}], ")"}], "/", 
           "delh"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"zerosig", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "zero"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sigma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "/", "c"}], ")"}], " ", "sigmaint", " ", "j"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sampan1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "<", "2048"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}], ",", 
               RowBox[{"rough0", "[", 
                RowBox[{
                 RowBox[{"0.1", " ", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "4197"}], ")"}], " ", "ns"}], ",", 
                 "sigma"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zeroes", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0.", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"npoints", "+", "2"}], ",", "4196"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"samf0extend", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"samf0", ",", "zeroes"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsamf0extend", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"samf0extend", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"trsampan", "=", 
           RowBox[{
            RowBox[{"Sqrt", "[", "4196", "]"}], 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "10"}], ")"}]}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"sampan1", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"prod", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"trsampan", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"trsamf0extend", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4196"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"conv", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "4196", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}], ")"}], 
            RowBox[{"Fourier", "[", 
             RowBox[{"prod", ",", 
              RowBox[{"FourierParameters", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pwr", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"istart", " ", "ns"}], " ", "+", 
                RowBox[{"0.1", " ", "i", " ", "ns"}]}], ",", 
               RowBox[{"conv", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "npoints"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g1", "=", 
           RowBox[{"Interpolation", "[", "pwr", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nsigma"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes3", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zerosig", ",", "echoes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"echoes3", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", 
       RowBox[{"120", " ", "ns"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"WARNING", ":", " ", 
     RowBox[{"USER", " ", "MODIFIABLE", " ", 
      RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}]}], "********)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THE", " ", "NEXT", " ", "LINE", " ", "WRITES", " ", "TO", " ", "DISK", 
     " ", "THE", " ", "NUMERICAL", " ", "PART", " ", "OF", " ", "THE", " ", 
     "MODEL", " ", "AS", " ", "A", " ", "LOOK", " ", "UP", " ", "TABLE", " ", 
     "WITH", " ", "ENTRIES", " ", "FOR", " ", "SUCCESSIVE", " ", "VALUES", 
     " ", "OF", " ", "ROUGHNESS", " ", "AND", " ", "DELAY", " ", "TIME"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Depending", " ", "on", " ", "mode"}], ",", " ", 
     RowBox[{"change", " ", "the", " ", "filename", " ", 
      RowBox[{"appropriately", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"echoes3", ">>", "\"\<SAR Rectangular 63 beams h2\>\""}], "*)"}], 
   
   RowBox[{"(*", 
    RowBox[{"SAR", " ", "mode", " ", "filename"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"echoes3", ">>", "\"\<PL h2\>\""}], 
    RowBox[{"(*", 
     RowBox[{"PL", " ", "mode", " ", "filename"}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"echoes3", ">>", "\"\<SAR Hamming 63 beams h2\>\""}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.515496104028763*^9, 3.515496149498328*^9}, {
   3.515496351280484*^9, 3.515496351718273*^9}, {3.515496456815542*^9, 
   3.515496527573731*^9}, {3.515496580492104*^9, 3.515496650848164*^9}, {
   3.5154967054097424`*^9, 3.515496825217165*^9}, {3.515496931949819*^9, 
   3.5154969587830048`*^9}, {3.5154970008127193`*^9, 3.515497015914208*^9}, {
   3.515497100106382*^9, 3.515497404668605*^9}, {3.5154978210383883`*^9, 
   3.515497824942484*^9}, {3.515497858375709*^9, 3.515497881234404*^9}, {
   3.515497970155409*^9, 3.51549805879143*^9}, {3.515498125131435*^9, 
   3.515498360366353*^9}, 3.515498775775654*^9, {3.515498879217325*^9, 
   3.515499034709236*^9}, {3.5154990678539877`*^9, 3.515499091264365*^9}, {
   3.5154991249354353`*^9, 3.515499151416088*^9}, 3.515499405539707*^9, {
   3.515501192749812*^9, 3.515501201043469*^9}, {3.5155012616773376`*^9, 
   3.515501280934024*^9}, 3.515501372488554*^9, 3.515501652725111*^9, {
   3.5155016883083076`*^9, 3.5155016972695312`*^9}, {3.515501738902297*^9, 
   3.515501836690682*^9}, {3.5155019474029417`*^9, 3.515501990773386*^9}, {
   3.515502039842441*^9, 3.515502078425764*^9}, {3.515502112186919*^9, 
   3.515502156003956*^9}, {3.515502194014173*^9, 3.515502489599432*^9}, {
   3.515655792968363*^9, 3.515655897963221*^9}, {3.515655934210167*^9, 
   3.515655946994842*^9}, {3.515656014194841*^9, 3.5156560220584583`*^9}, {
   3.515656083550305*^9, 3.515656110034143*^9}, 3.5156561546786203`*^9, {
   3.515656292951713*^9, 3.5156563879913807`*^9}, {3.5156564219995937`*^9, 
   3.515656437061945*^9}, 3.5156565774619417`*^9, {3.515656609396636*^9, 
   3.515656667968286*^9}, {3.515656703041975*^9, 3.5156567194237623`*^9}, 
   3.515656766124291*^9, {3.515656836815136*^9, 3.515656902488792*^9}, {
   3.515656932546947*^9, 3.515656948299868*^9}, {3.515656999287771*^9, 
   3.515657067107432*^9}, {3.515657109404316*^9, 3.51565718792299*^9}, {
   3.515657332282896*^9, 3.51565743651686*^9}, {3.51565753431513*^9, 
   3.515657832167728*^9}, {3.515657889055279*^9, 3.515657937240484*^9}, {
   3.515657968324638*^9, 3.515658091798609*^9}, {3.5156581423774767`*^9, 
   3.5156582044306173`*^9}, {3.5156584433325644`*^9, 
   3.5156585806863823`*^9}, {3.5156591129551983`*^9, 3.515659130423605*^9}, {
   3.515659388367186*^9, 3.515659412352222*^9}, {3.515659450375848*^9, 
   3.515659532592469*^9}, 3.515659603366726*^9, {3.515659792202013*^9, 
   3.515659900327581*^9}, {3.515659952731409*^9, 3.515659989105094*^9}, 
   3.515660056007991*^9, {3.515660093246912*^9, 3.515660166842596*^9}, {
   3.515660217869231*^9, 3.515660218829144*^9}, {3.5156602500834417`*^9, 
   3.515660376963245*^9}, {3.515660411162406*^9, 3.515660470841935*^9}, {
   3.515660525758458*^9, 3.51566053114184*^9}, {3.515660582503138*^9, 
   3.515660607911036*^9}, {3.515661152740817*^9, 3.515661164210013*^9}, {
   3.515661205988532*^9, 3.515661227934959*^9}, 3.515661259856578*^9, 
   3.5156613436427813`*^9, {3.5156626122710733`*^9, 3.515662622921948*^9}, {
   3.515662654244792*^9, 3.51566269923796*^9}, {3.515662764948962*^9, 
   3.515662849368432*^9}, {3.515663359607514*^9, 3.515663376867951*^9}, {
   3.515663422323456*^9, 3.5156634624457493`*^9}, {3.5156635876765003`*^9, 
   3.515663589021448*^9}, 3.515663627269321*^9, {3.515663661007909*^9, 
   3.5156637394159527`*^9}, 3.5156637930795183`*^9, {3.5156639035881767`*^9, 
   3.515663921044973*^9}, {3.515663957290153*^9, 3.515663963289465*^9}, {
   3.515664017992876*^9, 3.5156640193410397`*^9}, {3.5156641202180977`*^9, 
   3.515664178164987*^9}, 3.5156643162691183`*^9, {3.515665660035932*^9, 
   3.515665663035152*^9}, {3.515666152631455*^9, 3.515666161060845*^9}, {
   3.515666458167102*^9, 3.5156665016283693`*^9}, {3.515666538833308*^9, 
   3.515666561038364*^9}, {3.5156666137819242`*^9, 3.515666664674678*^9}, {
   3.5156669060468187`*^9, 3.515666971295648*^9}, 3.515667003258651*^9, {
   3.515667174740018*^9, 3.515667179052874*^9}, {3.515667348981717*^9, 
   3.515667357764979*^9}, 3.515667422851121*^9, {3.515667495027136*^9, 
   3.5156674985708027`*^9}, {3.5156676472788897`*^9, 3.515667649448433*^9}, {
   3.515667962823824*^9, 3.515667997097547*^9}, {3.515668040185996*^9, 
   3.515668076764433*^9}, {3.515668151507264*^9, 3.515668153117828*^9}, {
   3.515669338191284*^9, 3.515669350892942*^9}, {3.5156700208590603`*^9, 
   3.5156700956287947`*^9}, {3.5156701439240923`*^9, 3.515670173741852*^9}, {
   3.5156702462329903`*^9, 3.51567024725534*^9}, 3.515670469593704*^9, {
   3.515670619451536*^9, 3.515670620728855*^9}, {3.51567087356114*^9, 
   3.515670874680497*^9}, 3.51567114052001*^9, 3.515671454406889*^9, 
   3.515671805063664*^9, 3.5156718988453197`*^9, 3.51567461130079*^9, {
   3.5156746747374697`*^9, 3.515674680824589*^9}, {3.515685240646447*^9, 
   3.515685258263543*^9}, 3.515685306917157*^9, 3.515685423446417*^9, {
   3.515736726996923*^9, 3.515736744008194*^9}, {3.515736882202867*^9, 
   3.5157368858668137`*^9}, {3.5157369453684683`*^9, 3.515737002630946*^9}, {
   3.515737340856639*^9, 3.515737380833439*^9}, {3.5157377806541367`*^9, 
   3.515737803697007*^9}, {3.515740376956777*^9, 3.515740391377859*^9}, 
   3.515740526308412*^9, {3.51574087485261*^9, 3.515740909962079*^9}, {
   3.515741006626918*^9, 3.515741037223425*^9}, {3.5157455720957003`*^9, 
   3.515745575806095*^9}, {3.5157456059116297`*^9, 3.5157456224705477`*^9}, {
   3.5157457025222178`*^9, 3.515745709517146*^9}, 3.515745819995215*^9, 
   3.515746128915063*^9, 3.51574622178929*^9, 3.5157468532102203`*^9, 
   3.515747192527976*^9, {3.515747591406253*^9, 3.515747608614398*^9}, {
   3.515759718301772*^9, 3.515759729693933*^9}, {3.515759988089261*^9, 
   3.515759994569558*^9}, {3.515760311606072*^9, 3.515760322584004*^9}, {
   3.515760440309575*^9, 3.515760531529414*^9}, {3.51576066475184*^9, 
   3.515760672736753*^9}, {3.515760880768643*^9, 3.515760881524618*^9}, {
   3.515760915096724*^9, 3.51576092445934*^9}, {3.515761697053841*^9, 
   3.515761698108527*^9}, 3.515761920143606*^9, 3.5157622511858063`*^9, {
   3.5157625027600737`*^9, 3.515762503405876*^9}, {3.5184291508915567`*^9, 
   3.518429160448699*^9}, {3.51861327560638*^9, 3.518613328891626*^9}, 
   3.51861844245011*^9, {3.5193850865449038`*^9, 3.519385105259985*^9}, 
   3.519385277606029*^9, 3.519391468585589*^9, {3.5210933798123283`*^9, 
   3.5210933962479057`*^9}, {3.521093453633881*^9, 3.52109349444317*^9}, {
   3.5210946588402853`*^9, 3.521094700981801*^9}, 3.521094739095024*^9, {
   3.5210948679222107`*^9, 3.521094888669132*^9}, 3.5210961588181143`*^9, {
   3.5210967185261927`*^9, 3.521096733013101*^9}, {3.521096835776966*^9, 
   3.5210969316232843`*^9}, {3.52109704867945*^9, 3.521097196309169*^9}, {
   3.521097230676124*^9, 3.521097258505887*^9}, {3.521097855434773*^9, 
   3.521097860060626*^9}, {3.521097895263051*^9, 3.521097907328603*^9}, {
   3.521097968072967*^9, 3.52109805327995*^9}, {3.521098141209262*^9, 
   3.521098145986524*^9}, {3.5210983193553953`*^9, 3.521098322177978*^9}, {
   3.521098353072262*^9, 3.521098357807642*^9}, {3.521099509663163*^9, 
   3.521099517703116*^9}, {3.521099547727479*^9, 3.521099674657055*^9}, {
   3.521101822347871*^9, 3.5211019183668833`*^9}, {3.521102235942152*^9, 
   3.521102272666346*^9}, 3.521102485744646*^9, 3.521102530374342*^9, 
   3.521102828879282*^9, 3.521105605686521*^9, {3.52118100844051*^9, 
   3.52118103494169*^9}, {3.521181087456065*^9, 3.5211811048677998`*^9}, {
   3.521192785343821*^9, 3.521192798125957*^9}, {3.521203179303115*^9, 
   3.521203197972115*^9}, {3.521205277721571*^9, 3.521205282133932*^9}, {
   3.5212152370310287`*^9, 3.521215261470613*^9}, {3.521215325628908*^9, 
   3.521215364022368*^9}, {3.521218536636606*^9, 3.5212185560912247`*^9}, {
   3.521220866597843*^9, 3.521220892028755*^9}, {3.521277592931569*^9, 
   3.521277599547017*^9}, {3.52334869094523*^9, 3.5233486945522633`*^9}, 
   3.5284534501881723`*^9, 3.5284535288093853`*^9, {3.528453573485911*^9, 
   3.528453661343608*^9}, {3.5284537047727413`*^9, 3.528453736177889*^9}, {
   3.5284537688803463`*^9, 3.528453802077166*^9}, {3.5284538458182*^9, 
   3.528453884041647*^9}, {3.528459127115532*^9, 3.528459148612048*^9}, {
   3.528459191909628*^9, 3.528459306687847*^9}, {3.5284593445142183`*^9, 
   3.528459419719838*^9}, 3.528460339017084*^9, {3.528460369924755*^9, 
   3.5284604003531103`*^9}, {3.528462185278585*^9, 3.528462186059991*^9}, {
   3.5284622162728443`*^9, 3.528462287600769*^9}, {3.5284629041295137`*^9, 
   3.5284630213426332`*^9}, {3.528463230931856*^9, 3.528463395318369*^9}, {
   3.5284634434261103`*^9, 3.528463452647113*^9}, {3.5284634888234177`*^9, 
   3.52846349191042*^9}, 3.5284635357815733`*^9, {3.528463727215082*^9, 
   3.528463731733924*^9}, {3.528463786113894*^9, 3.528463799443843*^9}, {
   3.528466271763154*^9, 3.528466302134081*^9}, {3.52846637139144*^9, 
   3.528466504327694*^9}, {3.528467531763872*^9, 3.52846756352661*^9}, {
   3.528467859566617*^9, 3.52846786030963*^9}, {3.5284907525206833`*^9, 
   3.528490784394211*^9}, {3.528609082767376*^9, 3.528609089599114*^9}, 
   3.5286102107420893`*^9, {3.5286105118123493`*^9, 3.528610517886154*^9}, 
   3.528611524710408*^9, {3.528611565055792*^9, 3.528611658711721*^9}, {
   3.5286117495314302`*^9, 3.528611753572937*^9}, {3.52861263837055*^9, 
   3.528612647947386*^9}, {3.528613590744814*^9, 3.5286136114487057`*^9}, {
   3.528615217026223*^9, 3.528615245803746*^9}, {3.528615281409237*^9, 
   3.528615304329337*^9}, {3.5286156267573423`*^9, 3.528615643535913*^9}, {
   3.52861656813097*^9, 3.528616574022826*^9}, {3.528616715212943*^9, 
   3.528616715745164*^9}, 3.5286168442137403`*^9, 3.528619077768298*^9, {
   3.5286192528741817`*^9, 3.528619308270259*^9}, {3.52861947445816*^9, 
   3.528619553969985*^9}, {3.528619846451778*^9, 3.528619851010841*^9}, {
   3.5286203707363358`*^9, 3.52862039446984*^9}, {3.5286209799640102`*^9, 
   3.5286209969420843`*^9}, {3.5286214118276167`*^9, 3.528621432639242*^9}, {
   3.52862191484402*^9, 3.528621939228897*^9}, {3.528622285388783*^9, 
   3.528622302997924*^9}, {3.528622668086989*^9, 3.528622672626255*^9}, {
   3.5286257318905354`*^9, 3.528625905260508*^9}, {3.5286260431474857`*^9, 
   3.5286260472268763`*^9}, 3.528626198443654*^9, {3.5286267124788303`*^9, 
   3.52862671309578*^9}, {3.5286269924433823`*^9, 3.528627006008219*^9}, {
   3.528627242746305*^9, 3.528627249387505*^9}, {3.528627504904559*^9, 
   3.528627505838077*^9}, {3.528644709830933*^9, 3.528644719903716*^9}, 
   3.5286449648489723`*^9, {3.528645355673154*^9, 3.528645403546397*^9}, 
   3.5286455138326607`*^9, {3.5286456945789957`*^9, 3.528645708373333*^9}, {
   3.528645865676517*^9, 3.528645875681754*^9}, {3.528646524277804*^9, 
   3.528646599580608*^9}, {3.528650608275622*^9, 3.5286506101258173`*^9}, {
   3.528651622061694*^9, 3.528651627481578*^9}, {3.528651716401659*^9, 
   3.5286517235813837`*^9}, {3.528651754265719*^9, 3.528651757672708*^9}, {
   3.52869311217583*^9, 3.5286931232296877`*^9}, {3.528693176145794*^9, 
   3.528693179882845*^9}, {3.528693213880589*^9, 3.5286932257948303`*^9}, {
   3.528697192527348*^9, 3.528697207179769*^9}, {3.528697283144153*^9, 
   3.528697340231691*^9}, {3.528697406942621*^9, 3.52869749079469*^9}, 
   3.5287007826373158`*^9, {3.528701982279889*^9, 3.528702001465667*^9}, {
   3.528702044652479*^9, 3.5287020898984613`*^9}, {3.52870274650109*^9, 
   3.528702796600779*^9}, {3.528702921929538*^9, 3.528702928959017*^9}, {
   3.5287029709892817`*^9, 3.528703023365521*^9}, {3.5287031410608807`*^9, 
   3.528703200686873*^9}, 3.528703549685376*^9, {3.528703674139077*^9, 
   3.528703768681168*^9}, {3.528704127829911*^9, 3.528704221662591*^9}, 
   3.528704282604609*^9, {3.5287043170766287`*^9, 3.52870439470756*^9}, 
   3.5287044752445307`*^9, {3.528704528059586*^9, 3.5287045618525467`*^9}, {
   3.528704616864245*^9, 3.52870464630967*^9}, {3.52870471720126*^9, 
   3.5287047825147533`*^9}, {3.528704823599968*^9, 3.528704842912033*^9}, {
   3.528705184842555*^9, 3.5287051881808577`*^9}, {3.528706659997571*^9, 
   3.528706665114995*^9}, {3.528710757115138*^9, 3.528710818431251*^9}, 
   3.528712866321169*^9, {3.52878250574104*^9, 3.52878252392083*^9}, {
   3.528782588338345*^9, 3.528782793976869*^9}, {3.528782850908862*^9, 
   3.5287829047160673`*^9}, {3.528782951629311*^9, 3.528782959736553*^9}, {
   3.528783077968442*^9, 3.528783078961878*^9}, {3.5287833494016447`*^9, 
   3.528783511433688*^9}, {3.528783542117281*^9, 3.528783608284964*^9}, {
   3.528783647948126*^9, 3.5287837939842653`*^9}, 3.528784575453944*^9, {
   3.5287849150698967`*^9, 3.528784943943536*^9}, {3.528819875601866*^9, 
   3.528819898997925*^9}, {3.5291494558007812`*^9, 3.5291494677426033`*^9}, {
   3.5291498130669622`*^9, 3.529149816334527*^9}, {3.52914993493475*^9, 
   3.5291499380976877`*^9}, {3.529150887622643*^9, 3.529150891809832*^9}, {
   3.529151250347857*^9, 3.529151255299712*^9}, {3.529151365604075*^9, 
   3.529151369447962*^9}, {3.5291514493439627`*^9, 3.5291514705340347`*^9}, {
   3.5291515721283827`*^9, 3.5291515879500217`*^9}, {3.529151930318048*^9, 
   3.529151994635723*^9}, {3.52915208228515*^9, 3.529152111603569*^9}, {
   3.529152160120593*^9, 3.529152287569373*^9}, {3.529154052833702*^9, 
   3.5291541674263277`*^9}, {3.52915425656667*^9, 3.529154274375388*^9}, {
   3.529154449630601*^9, 3.5291544581898746`*^9}, {3.52915454570903*^9, 
   3.529154555308913*^9}, {3.5291546624425993`*^9, 3.5291546698765097`*^9}, {
   3.529155139610425*^9, 3.529155176606374*^9}, {3.529155661467154*^9, 
   3.529155684779582*^9}, {3.529156039235121*^9, 3.529156067192027*^9}, {
   3.5293072536857367`*^9, 3.529307298137765*^9}, {3.529312814495343*^9, 
   3.529312821786593*^9}, {3.529318367330422*^9, 3.529318379891724*^9}, {
   3.5293184388010473`*^9, 3.529318653851577*^9}, 3.529318687833156*^9, {
   3.529320948437397*^9, 3.5293209706271973`*^9}, {3.529326404397769*^9, 
   3.529326407188408*^9}, {3.5293264421207848`*^9, 3.529326539246595*^9}, {
   3.529327412758999*^9, 3.529327437276369*^9}, {3.529327498518293*^9, 
   3.529327530383168*^9}, {3.529327595527802*^9, 3.529327671166376*^9}, {
   3.529327710733425*^9, 3.529327906515565*^9}, {3.529327956208671*^9, 
   3.529328157694911*^9}, 3.529331750541798*^9, {3.529331790985186*^9, 
   3.529331815171466*^9}, {3.529408273239997*^9, 3.529408343336643*^9}, 
   3.52948490145466*^9, 3.529586349659568*^9, {3.529593561826153*^9, 
   3.529593631330681*^9}, {3.5297618601861973`*^9, 3.52976196182626*^9}, {
   3.59004957444214*^9, 3.590049674320869*^9}, {3.5900497817815237`*^9, 
   3.590050089319837*^9}, {3.590050177437586*^9, 3.590050276741997*^9}, 
   3.5900503280521297`*^9, {3.5900503604340477`*^9, 3.590050742325436*^9}, {
   3.590050856397376*^9, 3.590051208442842*^9}, {3.590051244853063*^9, 
   3.590051304263579*^9}, {3.590051342340474*^9, 3.590051844066038*^9}, {
   3.5900518772548428`*^9, 3.590052087121571*^9}, {3.590052181022422*^9, 
   3.590052229564169*^9}, {3.590052261042511*^9, 3.590052408365066*^9}, {
   3.590052487025482*^9, 3.590052602183083*^9}, {3.590052654894951*^9, 
   3.5900527050304203`*^9}, {3.590052765763001*^9, 3.590053176272037*^9}, {
   3.590053219706134*^9, 3.590053333709778*^9}, {3.590077873521262*^9, 
   3.5900778748401413`*^9}, {3.590078125610531*^9, 3.590078130641815*^9}, {
   3.590137454109568*^9, 3.5901375251538877`*^9}, {3.5902230957410297`*^9, 
   3.590223316601674*^9}, {3.590223568910942*^9, 3.590223722141643*^9}, 
   3.590223933030911*^9, {3.590224002163494*^9, 3.590224195513894*^9}, {
   3.590224244289555*^9, 3.5902242463783703`*^9}, {3.5902244386770687`*^9, 
   3.590224497381166*^9}, {3.590224543299828*^9, 3.590224705745573*^9}, {
   3.590224744780533*^9, 3.590225083936329*^9}, {3.590225145793448*^9, 
   3.590225391353436*^9}, {3.590225423563868*^9, 3.590225494614128*^9}, {
   3.590499998358035*^9, 3.590500005854748*^9}, {3.590500062281437*^9, 
   3.590500094390738*^9}, {3.5905001769041843`*^9, 3.590500196210487*^9}, 
   3.590500270562593*^9, {3.590500334183487*^9, 3.59050034906425*^9}, {
   3.590500659651369*^9, 3.590500700527958*^9}, {3.590500760743272*^9, 
   3.590500794581601*^9}, {3.5905008424195547`*^9, 3.590500899524432*^9}, {
   3.590500976573674*^9, 3.590501040887536*^9}, {3.59050113089885*^9, 
   3.590501222309634*^9}, 3.5905012611600513`*^9, 3.590501292097145*^9, {
   3.590501322627693*^9, 3.590501330585494*^9}, {3.5906000252546377`*^9, 
   3.5906000541859426`*^9}, {3.590601269965214*^9, 3.590601270254654*^9}, {
   3.590601731572424*^9, 3.5906019819618807`*^9}, {3.590602020997113*^9, 
   3.590602021951126*^9}, {3.5915278125448523`*^9, 3.591528087272461*^9}, {
   3.591541974335814*^9, 3.5915419752769833`*^9}, {3.591550196695491*^9, 
   3.591550318643647*^9}, {3.592312065682488*^9, 3.592312242154763*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "1", ",", "12", ",", "30", ",", 
   "55.244523`8.494864202239064"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.59231225525144*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592312260006214*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592312260155301*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592312260308406*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592312260331066*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5.0000000000000004`*^-8"}], ",", 
          "1.8000000000000002`*^-7"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
      "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592315245463283*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
5Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[3, 25000000]}, {0., 1.502907510797155*^-8}}, {{-5.*^-8, 
    1.2*^-7}, {0., 1.502907510797155*^-8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592315251813427*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "1", ",", "13", ",", "20", ",", 
   "52.701762`8.474400110380707"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592315252702918*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315252807507*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315253013933*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315253203114*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315253234571*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.4740107515971788`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315951030736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.1429510744678375`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315951172142*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.0102201103797355`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315951310409*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592315951341854*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.59231658147173*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592316581611287*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592316581748397*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923165817798977`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5.0000000000000004`*^-8"}], ",", 
          "1.8000000000000002`*^-7"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
      "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592317544083785*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlPc/1nsfxxFO2RnZ2VJ2l933/cm44rIv13VRlz1CRmbWIeMokqJkne4y
ysgpCh2njA/JKFKKrCI5GbmJZB4n3d0/PB+vx/MPeD3lvENpvmwsLCy5P/n/
Gr1JiF8ZDsTL1uSCOtEeotpyif1ZfyA2Paq5LaXdQ8g+8cq6+TwQ8786999G
qx6C44F5KaUpEMtvtbOmJfYQ/ZcFuouKAnEFZBrsmesh/CzLBK19A3EJb/fj
gLZe4lpbb9XtlQDsp2cd8zKuj1iokRhh8AbggYa/k7YK+ok25qJps/AprFoY
Ka2MBohc9rZqBSl/vDvYZ+jm6yHC6HywgPAdP8ydRL1qPT9CTHKIR7Lr+GE/
nppcX6d3RFpa59vVVl9cYvxNOkNuglD/JcJg2toXe0oEuyvXTBKNX7hDpMZO
4o95D806U6YIylD5bfqpk5hb97eMgeufiKGWo6MX132wwsGXNz6zzRI+5aN8
7ed8sI9sOrm38zOhEfSnN2OPD+7ElYk8hovEltbVhpnL3tik/b3o2evLxIRQ
0qQm1RuHJHCKszZ8JTrWg7niBL1xIY06bz+zQmQ3U9y5C7xweUp3hWrmGiGo
OzIR4eaFG5gJQk1z60R+tb/HmIIXPs43LOPitklIKG98MJn3xIKau5zs57eI
oqI0z6oHnniUg4ud9eo2IS+676NAjCeW8lda2KF9J8qzy71iwROfo8p+/KL9
g2CyZnRm5XrgWE6/ndsVrFDU//nTI1EPvGP4ien9gQ2miq3Y/77ujjVZdXnl
1dnhQOhdBd797rj92kNnsascEIx4zPRL3bB0aRT9Os8vUMt72ttL0Q27lgvI
CJXuhvX3fSmZla6YvIeHY9WeC5Ljs9s+VLvg+z1q5pVsfJCf32BYGOaCqe0V
Ua7f+eBe7XgdleSCU7ou2t77wQ8js6rlTx4544DM396t8u4FbcazjNtPmVil
f/prpKsQUEKX2FzTmLg18K4LaVsI3C/uSxC2ZOKZVFPf4iJhuNh2MuT8yxOY
2Jq1WPomAlNqrHT/0eO4lFH49D/vxCB//Lk8KjmOb2z8c88jTxyssnJWhP2P
4zk7x2lOhgTULynktK864e87tv4Rk5Jwrs78tbSAE17fobzaNpABAx/+0tUh
R7yuOWF0gU8WFoRGwnpvOuJAMZHpuFRZYEQFCMSp/vTST5dto+VAyeCS/aA5
A4f2DWm4pSjA5nBUzchuBu5Irk85KKYIPTEevOM9dFxX6E1er1OEsL8O907b
0fG+8PmqhVUlaNYbNd9wouF2Jy2bvnsqkD3UXr4tRsMHnn6zl/A7CN7R99hZ
3jngXfNrhpKKh2B3Q1L7bg8H7LFYO3OlRhUYuspIwp+KmRq5JmM/NKAzsPYb
oU7F6c9CZg690YRg4zha64w9Tj/cM36ToQVa+ypUrH7Y4d7Mz4qbh7Xh8ZMf
gx5atri28hF9ipcEN9T2GZc322DXd8IJ0pkkSCxQuztPscFUTltHdm4dMD3N
TInyssYr002dW4K60CNWr56ZY4nZKIKOOWR9yJ1vCBKVs8QRdPoli7f64Nbc
WHX7PgUr3n1fPHzKAJY92pWaX1jgnMJrbncKDWFf5WvpRU5zPFC3/LRLkoDJ
2LcucXnHsP/B7/lCHQRUWY3+zqF4DF/SyL0cHApAfJkU2W9CxtLuClLHXyHw
0l3mtY83xeVDX03sxozhJK9QczuYYsuE7wPn+Ezg1LRuoB6LKZ5iWZcmmZlA
aF58l/R5E7woxK2xUW0CZ9c4kxayjHF9xGCOZIYpaAcdmRQ6BnjB/P5gliMZ
SoLyyzKu6WIOprzkE1MK8FG7nVQnpfC28OiasQ4VBPRW1g58kcAKh+g3JE9Q
QUhKOk/xXzEsJxz9eSyeCmJzEQPSYiKYrOt8dLmdCmYsUCJbwoX/fVYv1GTn
AJQXORPizZyYzX1/6K5wB7AtnJMSGmHDE0Gzehs5DlDtqULill1viWpdYcVv
HeBEIu2hI8sUpNcZvH7hSANx/jeTx65swleDuay0HBqkhrZEagmwoyaNne76
FzT4dXjvBoxwo4DnSmck2OnwSIbUotS/F/VvFe+/aECHevp4otpDEdQYK/L7
eAAdatLTjUmF4mi8a2xpu4AObzYWvWQfyCJx9TsHI+fpcG1V7dJyiiJ6LJUq
Oq/BAMbXoIY2ugrS6BgQr/RngPCXPyavKKkhZ78Ks4I8Bryd/8zltaGJdppO
uT18zADVlfr7yX0k5Hvea//LWQYsfFkZpRbro+bU21eYGwz4Qwc5K7citPxy
s2DtNQN0WsiLZ5dM0ayZrnVmMAPCA3o822fMUEZHemonhQE1ItRBzgky6uRS
b1WWZ8CBEJem7BfmyCjzH8sHfXQ4KfFRY/CpBSJXnmk7XUKHki6/W2JNFKSU
/Kw7PpwOEjIRGaVVVujMneenA/npMHEm/FbwFWtkNMkvv3+SBrd6wpr0Y2yQ
s2hswt4HNFCNDl3sI9she8kYX4odDYr8GlS+L1GR90ZrjUy6AzztLbtOHWGg
4X+OGGg12UPN1oGo0zUnUFcR2X+z0Qb+6rs6XWbqilTMj5aVmVjB/PH1WlZB
T5QWI5fdumwBu6VECfzRC21hQ0uKmDlkkH/71eOOD2rbTIjgziSD8Or00dw8
X9R1waRVVsIMatYJ6pCXP/IrjDpY/NUEaMmXZu8yAhAzInqE5+cfmCHKJD8U
hCKbrc8JDByF0Pv1z9V/Of0zkbtYI80QZMcYzl5YD0EfmFz9My0EeFiOVsZ6
h6HU891TKWeOgMqeI3oyx8IRi5ILo83GCKJ5xC/wH4lAveYGeezKhmDzOCwp
TTYSlUuMiaaoGEBlFdnIQvwMSvzT2dL/kD5kmOVcz2KNQha2zf8+sNODm/wc
jpTpKNR5nx5KS9MFPZnVN9bvo5H+c/Y9cc064DTiuv62PQb94Hup8DuvDmwP
moxXNcciX3W2jjY3ErzZZbN/uTYO3XL/4DHWchi03r9ib8n/Ff0xcWONk3QY
hDZf1QxkxSO3vLGImxXakNhiuRMWnYDkuCrL3qlqg8Sfc5XJzLPI6GR4AalR
C44s7xIZs09Ej0LFi3mOacGnwcIDjbpJaKyLZPDkkSYw35fo/mwuEuyodiZZ
aMJs+KCcqmQyeqVURJMa1oD/ASd0S1E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[3, 25000000]}, {0., 2.979477699705998*^-13}}, {{-5.*^-8, 
    1.2*^-7}, {0., 2.979477699705998*^-13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592317550442577*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "1", ",", "13", ",", "59", ",", 
   "11.318158`7.806350738495257"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.5923175513192663`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592317551399213*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923175516061687`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592317551812791*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.59231755184446*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.4740107515971788`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592318276521995*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.1429510744678375`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592318276661028*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.0102201103797355`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592318276801509*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592318276836432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923189321700563`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923189323092117`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592318932446959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923189324824877`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5.0000000000000004`*^-8"}], ",", 
          "1.8000000000000002`*^-7"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
      "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592319837978553*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[3, 25000000]}, {0., 7.829023240848092*^-14}}, {{-5.*^-8, 
    1.2*^-7}, {0., 7.829023240848092*^-14}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592319844343799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "1", ",", "14", ",", "37", ",", 
   "25.398204`8.157377989493867"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592319845399479*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592319845552185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923198457550488`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592319845957807*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592319845993456*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.470060310419984`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923204741206837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.1421165015644117`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.5923204742518587`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\\(\\(-1.0099196514560966`\\)\\)\\\\ \.08\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592320474381727*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592320474413033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592321038954741*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592321039086257*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\
\.08\\\\ \\(\\((\\(-\[Pi]\\))\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592321039215415*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.591528114933663*^9, 3.592321039247011*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5.`*^-8"}], ",", "1.8000000000000002`*^-7"}], "}"}], 
        "}"}], ",", "\<\"<>\"\>"}], "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.5923218222004337`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwB8QQO+yFib1JlAgAAAE4AAAACAAAAOtJ8e/LXar4dbTV9QyGJvK1J7wTI
0Gq+yP68OwA1irwgwWGOnclqviuTlZJ7S4u8BbBGoUi7ar5s1Rbe0n2NvNCN
EMeenmq+OvmW6rHxkLxmSaQSS2Vqvht0jknV/pS8k8DLqaPyab5PosqktmeZ
vOyuGthUDWm+M+Yf7FZUl7yUBMCtIxxnvpM8Z2BVKpK8LQdyOOVLZb6cLy+8
2T6CvGOl2Q7ChGO+t4s3E/JegjyPvEheC5dhvpC8IymbvKQ8WQGJxY6UX77w
54Li6Ye2PGw+DEM3oV2+HBdNwLIywDyAe4/A361bvhX12UmF6cU8MVTIiaPD
Wb6FJYbxuhnMPOIsAVNn2Ve+IQsA+D1n0jwPWfMGHctXvusFdz7SitI8PIXl
utK8V77YJSt99K3SPJbdySI+oFe+pxwJ+cXy0jxKjpLyFGdXvvhW06pQdtM8
s+8jksL0Vr4tDuETymjUPISyRtEdEFa+HbF5g0Jh1jxUdWkQeStVvurFWU6D
HNk8JTiMT9RGVL4UPfNIgxjcPHC3MsvlTlO+qBCM7dCv3jy8NtlG91ZSvljj
j4oP2eA8CLZ/wghfUb5iTXoJo/TiPFQ1Jj4aZ1C+fM/8tMXO5DwwFqYoSv9O
vhwPA/TKM+Y8ucH/1F8wTb7rRLoLUy3oPEJtWYF1YUu+Q1HxaaZz6jzKGLMt
i5JJvjt7u5653us8FqfRHe0GRr6Y7d6JmffuPGE18A1Pe0K+uqiTbqk38Dxi
oQHliFxCvjdOGmCZLvA8ZA0TvMI9Qr51nle5VyXwPGjlNWo2AEK+yzw4Ec8S
8DxvlXvGHYVBvsW3pWLL4u88ffUGf+yOQL4UGYxTlKbvPDFrO+ATRT2+Uzvw
3Rrs7zxMK1JRsVg7vmgR7MmzAe88aOtowk5sOb6hb9MElFLsPHZL9Hoddji+
83gtf4RG6jyEq38z7H83vqr+1q9i2+c8kgsL7LqJNr4L3XrmlzTlPKBrlqSJ
kzW+G2Khvod74jwmIqi30a00vuzTw6+nAuA8rNi5yhnIM76UWj+Z42DbPDKP
y91h4jK+k3ADu2IR1zy5Rd3wqfwxvpjKPT1G8NI8/CBm+s2JMb5wHlLnn9bQ
PED87gPyFjG+cC2eXu5DzTyD13cNFqQwvtpgTaj/fMg8xrIAFzoxML5fEA/Y
8irDPM9AijeY7y++laTK5xk+wDwSHBNBvHwvvr0RyFZfNro8VfebSuAJL76J
q4fnZnazPJjSJFQEly6+NHqY41BcqDzbra1dKCQuvlSKgfs3PJE8Hok2Z0yx
Lb4cvmhqJtaQvKQ/SHqUyyy+ImidpBdqt7znGtGDuFgsvu2vQAGVG8G8KvZZ
jdzlK76EQK90GvLGvG3R4pYAcyu+SLvuJU8/zbywrGugJAArvpbSAA0ZBdK8
84f0qUiNKr58KYRwbazVvDZjfbNsGiq+RJ6tTtOY2by9GY/GtDQpvlIoinnA
JeG8APUX0NjBKL5QJ0qoVovjvETQoNn8Tii+SyF3gksY5rzKhrLsRGknvoUB
4QJtq+u8DWI79mj2Jr7fyvKxyLLuvFA9xP+Mgya+ubwtquPx8LzW89US1Z0l
vvqw6a9wYfS8Gc9eHPkqJb7vDgY2Rjj2vFyq5yUduCS+Zj1HMW0j+Lwcz8gz
rRUkvo+bxSkBBPu8VPt7rQ==
     "]], LineBox[CompressedData["
1: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
B/8N94QC/Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[3, 25000000]}, {-5.998677720906146*^-15, 
     4.552534654918032*^-15}}, {{-5.*^-8, 1.2*^-7}, {-5.998677720906146*^-15, 
    4.552534654918032*^-15}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5915281145641727`*^9, 3.592321828167398*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Description", ":", "\[IndentingNewLine]", " ", 
    RowBox[{
    "THIS", " ", "CODE", " ", "PROVIDES", " ", "THE", " ", "MODEL", " ", "OF",
      " ", "THE", " ", "SARIN"}]}], ",", " ", 
   RowBox[{
    RowBox[{"SAR", " ", "AND", " ", "PULSE"}], "-", 
    RowBox[{"LIMITED", " ", 
     RowBox[{"ECHOES", ".", " ", "NOTE"}], " ", "THAT", " ", "THE", " ", 
     "ACTUAL", " ", "MODELS", " ", "\[IndentingNewLine]", "DEPEND", " ", "ON",
      " ", "THE", " ", "LOOK", " ", "UP", " ", "TABLES", " ", "THAT", " ", 
     "ARE", " ", "READ", " ", "IN", " ", "AT", " ", "THE", " ", 
     RowBox[{"START", ".", " ", "THESE"}], " ", "ARE", " ", "NUMERICALLY", 
     " ", "CALCULATED", " ", "USING", "\[IndentingNewLine]", "THE", " ", 
     "SAME", " ", "VALUES", " ", "OF", " ", "THE", " ", "CONSTANTS", " ", 
     "AS", " ", "APPEAR", " ", "IN", " ", "THIS", " ", 
     RowBox[{"FILE", ".", " ", "IF"}], " ", "YOU", " ", "CHANGE", " ", "THE", 
     " ", "CONSTANTS", " ", "IN", " ", "THIS", " ", "FILE"}]}], ",", 
   "                ", 
   RowBox[{
   "WITHOUT", " ", "HAVING", " ", "RERUN", " ", "THE", " ", "INTEGRATION", 
    " ", "PROGRAM", " ", "THAT", " ", "GENERATES", " ", "THE", " ", "LOOK", 
    " ", "UP", " ", "TABLES", " ", "WITH", " ", "THE", " ", "SAME", " ", 
    "CHANGES"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"THE", " ", "RESULTS", " ", "WILL", " ", "BE", " ", 
    RowBox[{"INCORRECT", ".", " ", "IN"}], " ", "A", " ", "MORE", " ", "USER",
     " ", "FRIENDLY", " ", "VERSION"}], ",", " ", 
   RowBox[{
   "THE", " ", "CONSTANTS", " ", "WOULD", " ", "ALSO", " ", "BE", " ", 
    "PASSED", " ", "BY", "\[IndentingNewLine]", 
    RowBox[{"FILE", ".", " ", "I"}], " ", "AGREE", " ", "THAT", " ", "THIS", 
    " ", "PRESENT", " ", "WAY"}], ",", " ", 
   RowBox[{
    RowBox[{"ISN", "'"}], "T", " ", "A", " ", "VERY", " ", "SECURE", " ", 
    "WAY", " ", "TO", " ", "DO", " ", 
    RowBox[{"THINGS", "."}]}]}], " ", "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{
  3.590225605811021*^9, {3.590225662468236*^9, 3.590225798669176*^9}, {
   3.590501374291164*^9, 3.5905013814373837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"WARNING", ":", " ", 
    RowBox[{"USER", " ", "MODIFIABLE", " ", 
     RowBox[{"SEGMENT", "**", "**", "**"}], "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}]}], "********)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"echoes0", "=", 
     RowBox[{
     "<<", "\"\</Users/ngalin/Desktop/CryoSat2_NumericalEchoModel-master/SAR \
Rectangular 63 beams h0\>\""}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"echoes1", "=", 
     RowBox[{
     "<<", "\"\</Users/ngalin/Desktop/CryoSat2_NumericalEchoModel-master/SAR \
Rectangular 63 beams h11\>\""}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"echoes2", "=", 
     RowBox[{
     "<<", "\"\</Users/ngalin/Desktop/CryoSat2_NumericalEchoModel-master/SAR \
Rectangular 63 beams h12\>\""}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"echoes3", "=", 
     RowBox[{
     "<<", "\"\</Users/ngalin/Desktop/CryoSat2_NumericalEchoModel-master/SAR \
Rectangular 63 beams h2\>\""}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"echoes0", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/SAR Hamming 63 beams h0\>\""}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes1", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/SAR Hamming 63 beams h11\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes2", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/SAR Hamming 63 beams h12\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"echoes3", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/SAR Hamming 63 beams h2\>\""}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes0", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/PL h0\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes1", " ", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/PL h11\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes2", "=", 
     RowBox[{"<<", " ", "\"\</Users/ngalin/PL h12\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoes3", "=", 
     RowBox[{"<<", "\"\</Users/ngalin/PL h2\>\""}]}], ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "********)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "DO", " ", "NOT", " ", "CHANGE", " ", "THE", " ", "VALUE", " ", "OF", " ",
      "THESE", " ", "CONSTANTS", " ", "OR", " ", "NAMES", " ", "OF", " ", 
     "THESE", " ", 
     RowBox[{"FUNCTIONS", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"istart", "=", 
     RowBox[{"-", "50"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iend", "=", "140"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"icre", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"npoints", "=", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"iend", "-", "istart"}], ")"}], "/", "0.1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsigma", "=", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", "=", 
     RowBox[{"c", "/", 
      RowBox[{"(", " ", 
       RowBox[{"13.575", " ", 
        RowBox[{"10", "^", "9"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k0", "=", 
     RowBox[{"2", " ", 
      RowBox[{"Pi", "/", "lambda"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"del", "=", 
     RowBox[{"7200.", "/", "18182"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta", "=", 
     RowBox[{"Pi", "/", 
      RowBox[{"(", 
       RowBox[{"64", " ", "k0", " ", "del"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaint", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ns", "=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2.99792458", " ", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "720000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "6380000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammabar", "=", "0.012215368000378016`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammahat", "=", "0.0381925958945466`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma1", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "+", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma2", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "/", 
          RowBox[{"gammabar", "^", "2"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"gammahat", "^", "2"}]}]}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h0approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes0", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h11approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h12approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"echoes3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sar51echoapproxv3", "[", 
     RowBox[{
     "sigma_", ",", "tor_", ",", "pitch_", ",", "roll_", ",", "delh_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pitch", "/", "gamma1"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roll", "/", "gamma2"}], ")"}], "^", "2"}]}], ")"}]}]}], 
       ")"}], 
      RowBox[{"h0approx", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pitch", "^", "2"}], "/", 
           RowBox[{"gamma1", "^", "4"}]}], ")"}], 
         RowBox[{"h11approx", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"roll", "^", "2"}], "/", 
           RowBox[{"gamma2", "^", "4"}]}], ")"}], " ", 
         RowBox[{"h12approx", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}]}], 
       ")"}]}], "+", 
     RowBox[{"delh", " ", 
      RowBox[{"h2approx", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"sigma", "^", "2"}], "]"}], ",", "tor"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f0approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes0", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f11approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f12approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f2approx", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"sigma", "=", 
               RowBox[{"sigmaint", " ", 
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}]}]}], ",", 
              RowBox[{"tor", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"istart", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "0.1"}]}], ")"}], " ", 
                "ns"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"plechoes3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", "tor", "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"nsigma", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "npoints"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plechoapproxv2", "[", 
     RowBox[{
     "sigma_", ",", "tor_", ",", "pitch_", ",", "roll_", ",", "delh_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pitch", "/", "gamma1"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"roll", "/", "gamma2"}], ")"}], "^", "2"}]}], ")"}]}]}], 
       ")"}], " ", 
      RowBox[{"f0approx", "[", 
       RowBox[{"sigma", ",", "tor"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"c", " ", 
        RowBox[{"tor", "/", 
         RowBox[{"(", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"h", "/", "r"}]}], ")"}]}], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pitch", "^", "2"}], "/", 
           RowBox[{"gamma1", "^", "4"}]}], ")"}], 
         RowBox[{"f11approx", "[", 
          RowBox[{"sigma", ",", "tor"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"roll", "^", "2"}], "/", 
           RowBox[{"gamma2", "^", "4"}]}], ")"}], " ", 
         RowBox[{"f12approx", "[", 
          RowBox[{"sigma", ",", "tor"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"delh", " ", 
      RowBox[{"f2approx", "[", 
       RowBox[{"sigma", ",", "tor"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "END", " ", "OF", " ", "CONSTANTS", " ", "AND", " ", "FUNCTIONS", " ", 
     "BLOCK"}], "  ", "*)"}], " ", "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "THIS", " ", "CODE", " ", "ILLSTRATES", " ", "THE", " ", "USE", " ", "OF",
      " ", "THE", " ", "MODELS"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pitch", "=", 
     RowBox[{"0.1", "*", 
      RowBox[{"Pi", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"roll", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delh", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"SOME", " ", "SAR", " ", "MODE", " ", "EXAMPLES"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "roll", ",", "delh"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sarHam01", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", "tor", ",", 
         RowBox[{"0.05", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "roll", ",", "delh"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tor", ",", 
         RowBox[{
          RowBox[{"-", "40"}], "ns"}], ",", 
         RowBox[{"120", "ns"}], ",", 
         RowBox[{"1.5625", "ns"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<sarHam01.txt\>\"", ",", "sarHam01"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", "pitch", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sarHam06", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"sigma", ",", "tor", ",", "pitch", ",", 
         RowBox[{"0.05", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tor", ",", 
         RowBox[{
          RowBox[{"-", "40"}], "ns"}], ",", 
         RowBox[{"120", "ns"}], ",", 
         RowBox[{"1.5625", "ns"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<sarHam06.txt\>\"", ",", "sarHam06"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{
         RowBox[{"0.5", "i"}], ",", " ", "tor", ",", "pitch", ",", "roll", 
         ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sarHam11", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{
         RowBox[{"0.5", "i"}], ",", "tor", ",", "pitch", ",", "roll", ",", 
         "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tor", ",", 
         RowBox[{
          RowBox[{"-", "40"}], "ns"}], ",", 
         RowBox[{"120", "ns"}], ",", 
         RowBox[{"1.5625", "ns"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<sarHam11.txt\>\"", ",", "sarHam11"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"0.", ",", " ", "tor", ",", "pitch", ",", "roll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], " ", "20000"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "40"}], " ", "ns"}], ",", " ", 
       RowBox[{"120", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], "}"}]}]}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sarHam16", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"sar51echoapproxv3", "[", 
        RowBox[{"0.", ",", "tor", ",", "pitch", ",", "roll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "20000"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tor", ",", 
         RowBox[{
          RowBox[{"-", "40"}], "ns"}], ",", 
         RowBox[{"120", "ns"}], ",", 
         RowBox[{"1.5625", "ns"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<sarHam16.txt\>\"", ",", "sarHam16"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"SOME", " ", "PULSE"}], "-", 
     RowBox[{"LIMITED", " ", "EXAMPLES"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "roll", ",", "delh"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"sigma", ",", " ", "tor", ",", "pitch", ",", 
         RowBox[{"0.05", " ", "i", " ", 
          RowBox[{"Pi", "/", "180"}]}], ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{
         RowBox[{"0.5", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", " ", "tor", ",", "pitch", 
         ",", "roll", ",", "delh"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plechoapproxv2", "[", 
        RowBox[{"0.", ",", " ", "tor", ",", "pitch", ",", "roll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], " ", "20000"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"tor", ",", 
       RowBox[{
        RowBox[{"-", "50"}], " ", "ns"}], ",", " ", 
       RowBox[{"140", " ", "ns"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2.0", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}]}], "}"}]}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.590225573482934*^9, 3.590225575670396*^9}, 
   3.590225680165053*^9, {3.5902257918988657`*^9, 3.590225913290474*^9}, {
   3.590226012810783*^9, 3.590226037364781*^9}, {3.590500352850472*^9, 
   3.5905003559898453`*^9}, 3.5905013913444443`*^9, {3.5915422996347322`*^9, 
   3.59154230565084*^9}, {3.5915423425304613`*^9, 3.591542344675528*^9}, {
   3.59154238733673*^9, 3.591542399998551*^9}, {3.591542451334976*^9, 
   3.591542469958687*^9}, {3.5915484093938293`*^9, 3.5915484115938797`*^9}, {
   3.591548454704961*^9, 3.591548490726763*^9}, {3.591712981621243*^9, 
   3.59171301041276*^9}, {3.592326413157733*^9, 3.592326507839134*^9}, {
   3.592326549959586*^9, 3.592326561249794*^9}, {3.5926733223062963`*^9, 
   3.592673415793521*^9}, {3.592673486605103*^9, 3.592673711427148*^9}, {
   3.5926737528414392`*^9, 3.5926738769319*^9}, {3.592674140876769*^9, 
   3.592674142242741*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "11", ",", "1", ",", "16", ",", "29", ",", 
   "25.623776`8.16121811146282"}], "}"}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326565626708*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
D3Xm+RecTXFwgIcgIiUQDx8aGjTfGuLgf1OPlPY=
     "]], LineBox[CompressedData["
1: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
ERz8D9b1sXY=
     "]], LineBox[CompressedData["
1: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
mApRt620E+f2wv8Ap3CVJQ==
     "]], LineBox[CompressedData["
1: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
MSuUJ8LwP6o3H4k=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 1.5000000000000002`*^-8}}, {{-4.*^-8, 
     1.2*^-7}, {0, 1.5000000000000002`*^-8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326571980914*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwVlnc81f8Xx0Uho7Kzrk3qkr0/x173Xtl7z6IiEjIvpWySIiSiKCszkbfy
lVEIWSkzu6RkpNDP76/zeD7OOa/HOX+cIeDmZ+ZJSUFBceEABcX/ba12R1vK
VU/EFaX1XdazDTOaZlXsC/BEJ4N91bxD2rD5SLcnTBc8kTjFf7ktiW0YZ+Nu
coaTJ8r9YIj6qtuwSCk562xtT0Qitt1PpnyDGfAWLD1i9ETh47fvtJa8wT5t
hh5pLvBAOImrG7PMHVhgRid5L9sDCcy8lV4/2YEdkWH/pZ7hgfzio3OktDsw
jYtVI603PJAOVb+xTGAHVvRlIb/zvAeysD9v5zbagfn2WcgOynsgZo1k+sYn
nRjlU0mbr13u6DKHsVhIwFuMtpImLafVHTlVXXJxuP0WO1I71UFsckcXaZ16
Y2rfYtwoXbGszB0hGsGxrK23mNzAJvvF1P18ur9nd8jvMK8/aOi7hTtyNcum
1ynoxi78y2R8YOSO2j/20+a3d2MBB/11jfXckWDAewrCt24s6ohQXaWiO+pJ
cWVKVOrBsgRvZlzickdyThujI4M92FuCsfnapBvKxWQe6PO+x/qMTyQ+HHVD
V/Mstyb132PDFgf+M+t3QzELcQYDAe+xL041MjWtbsjozP2Yjq732E4AB3Pg
Izd0xbfShwr6MMmcyb4NHzdUL8ZVIr/dh6V/9TuzveGKrlZ86Jq/M4BpMYWm
iay6on4kc7u0cgD7qXB9wHTRFVHJ2YQ87BrATGKyrJ6OuaJuQ1/XE3sD2BHO
1072La7o+fvc4ALvD1i8HrNfc5wrmpKTF6ghDGJKF3iqlqJdkTep+FX/2UFs
8ZboL7YwV3Q0l+34ydhBTG9cJdj3oitye6c3Hv9qEDsY6B7FZ+aK7D6EirKo
DGHkgtrUaG5XpEz97FOt0jAm1YH6y1ldkeQ9TcNi22Fs8lsnyxijK5qxuN85
FjqMgdJ4pgyFK6JNi22gRsPYTu+h/C+zLujduZbISP0RLHjH6pluhQsS7Z+J
Njk7ivlab/cd1nRB6sbM0z/Hx7BquhJ7GxUXpDNrP8RH8wnbaraafyzrgjpM
DG7lSn3CyMK1f7VFXRBlRwlD7PVPWPpPX9FIeheU+LbKVETqM+bL0bU1W+qM
3LTKkVbmOLYVIcoYk+eMeo3r7arejGPk2WuCfLecEdeUn2To+jiWXgVGtkHO
aPx0mx+v+QT2nFj7sEfDGRX5rk0i1kmMgvzAqH7ICZ08/d9LGsspLH5+x828
0wndT1d1UvObwpiN7EJ+NDqhMw8iPhfGT2HCXGyFJ/Od0Ixa0zBDyxRmWJvw
O89nn78dzzPBT2Ppi1cKb/5zRP3LhC+rx2YwEVPSto24I8pWgyrSoVks7sar
ex+4HFHw6c1FP/FZ7FuTnMoZBkf0fCole8JoFqsW5Q3TXnVA1Ad+CxZkzmKw
s7IjUeeAFmZlhXsl5zCb4lQKKk0HRHP16vlzF+axps9UBREyDoiWXZA66848
hmMO0fwt5IAqVZZzcS3z2Fy4S8wKtQO6HjJYL8uygAWYSR8c7bZHLmUj5ukt
C1jS7gBNuY09cu6Yr30jvoStyuiXiBHsEZPF1KVmmyXM7FyTwUNVe/Q8rHmO
I24J4/xQGJ+Js0fv+ZaXtxaWsMclgfQxs3YIl8OCv1q2jLWYsx+1vmSHZpgk
ivCG37C1J7bsB+Js0ZZ3nJ/1yCpWwi/17nKoLXo21urARvsDc8ykJs9fsEWR
2sPh9cI/sM7rNUvvTG3RezWVQwVOP7A8Z8bmu9y26BZ1sYXw0A+MyPbaHV9p
g/ZW59SNe35iFEmZxx8U2KBeMzLZe+UnVk/p28OUYYOGIwO/tjKuYYI/uBS3
QmzQwE0mJXnjNez320C6Vi0bFDJxP1hkaA0rIp+osh62Rnf/GzEuXPmF2W3t
eb7t3Gd+h+ivTOvYUd8hLqzJGi36l/SHKqxjofYx1wXzrVHkQa2Pl8jrmKnC
Z+sVb2v0LJSSv4tjA9v7mroXs2uFzP492Su02MSsrbeIFcJWqBnfwKJIv43N
584m7rFZoU+lqZGe2DYWNNP/7gyNFUJl7St7ftvY3YtlxNUlS1TfuoeChrex
wWuuRKlKS8TwYuX3nZI/mOmzd4RqZUvkvxhRHuS2g01tNCRQnrJE4h46J3tz
drBLqo/fmvFYIjomJsqCoR0srZ1M+LVngWzquv+8JOxivZ/lCXJtFig/sLvu
q8oeRjycb1h/xgLRRhJ56bgoYOxMcjy1hgVaMbbo6lOhAJ+M0C4raQv0atL4
3bg9BSTwWRpusezrZf873pNHAZ3ydIZKH82R5vZxLaYTB0DXLdCg0d0cqXT9
aX5hQAnqTQb6KMQM8S3onHLrOAi/uaOOm/uYIc2VyGj/nwehOrxuacHeDEn3
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
JZZ42ePgMAdB8BQ3GQKmVUVXrHHwP1xilUs=
     "]], LineBox[CompressedData["
1:eJwVVnc4Ff4XFhUqsmV0zUj2Xn2OuMZ1r71DNkVGRghFpMQ1klJWRKWIrG9F
PlISkYwoIkVmkZCR9fP76zzv8z7nOed5zxRyC7DwpKWhofHdQUPzf1tNfNuU
cs4Tv+uO9rid9hoZf+dQ7QzyxPIfJSW37r5G4xfcHrL6emI70r6CSzWvEU/t
RnKGkyfWNN/57PfAa3RBTsk2i7iNux/pm4o3IdLBgql7TJ5YoLFT+GJzE/qy
FMFcX+CBNb72tjkINaOQjJaYzSwPHHEsmf2kWjNiVuBa0MrwwMNMO/JyTZvR
Mb+KT68ue+DGCuU3yReaUdHoRH7LaQ/cWnGAJ+5rM/LvtFL8qOyBTwx8Ztr5
4C2ifSRj97PVHfvmV3iFO7YihnL6tOxX7vhL5hna1chWxFz97S2lzh1rDDft
ep7divhwumppqTv+a0L3bPVLK1LqXuLyS3XHJ5Xvl6c6v0Ne/3DvrJU7Drpx
2PdhcBvy3cpkumPsjv3c6LQDM9tQ0M5APVN9d+zg74jj6tpQNLNITbmqO3ad
KMJJO9vRLeErGWd43XHfU+uto1nt6B3Z1HJ+2A1fZnO+3fLxPeo0PZx097Mb
pg7Hp1/feI/6rHa8tuhyw8p16aXVYh1o1KlKoeqVGx5l/9W9dq4DrQdxs4Xc
c8Ptt44UlIt+QDLZw51/fdww2/f4xhy9TpT+M8Bk9a8rLhxwUOnq7EI6rBFp
h3674n5Pp+MXprrQH5VL3eaTrvizrUKIA203Mou9ZfNowBWLVfiTHih1I2ae
RieHBlf8NPXf3WvZ3eiqPltAfYIr7qiN7uEK7kFqvvwVUxddsSMjD8tqSg+a
vCa2wBnpipUWjBLZSnqQ/pBGmL/fNs/MzTIz2oN2hrhHC1i44jKGj7LGdh9R
TEF16kU+V/zswLj9QaNeJPcWdz3mcMXPq/1JD0/3ouFfLewDTK74x06/yOCk
XgRqQ5kKNK4YQrPtm9p60XrHrvzRHy6Y0T4zy920D4Wt2zzRK3PBuRkfXy+5
fUL+tqudjNouWNlvfkc97keVe4od7DRcsK/B3f8kxvvRcr3N+H1FF7xYLPH+
O9MAihGtXiOKuWDH2/ixitMASv/jL3ZhrwumFXfNj6f9gvy5W5d/lDjjNY7Z
NjP7QbR8XowpNs8ZS+V37mq6PIhifsQJC1xzxp25TinJVYMovQKMj4c640SF
ZEcx5iH0lFJ99/0xZ5zgP5cQ+3YI0cTcMf6v1wmfUVRaiKYMo6vj626WLU64
gkvGveT8MGIztg+fq3XC5+T5hdSeDCNRXs7CI/lOuDJ2nffo3m/IsDpxJc/H
CVvUMn7oDv6G0ifPFl7ZOoEbyt7dfGDyHR0yN1q1kziBi5uFFlKkR1HC5Ze3
e3hPYI4n+XSHzEbRrzolDZN9J/BL4ikduuBRVCl2MJL42xFbsP4eyXo+imB9
Zl26xhELKTFIGpJ/ILsHqTR02o543EKJQzNiDNUN0hWcV3DEmgHSy0UFY4jA
Fq69IuKIq3uO7nJrHUNjUS6xM7sdsdQ+nfDPPOMoyEJ+5+d2ByxMFxj7Do8j
6kY3/WM7B/yDfoTowjOJfisYFIuTHbBWMjsy159EFqfqSHc1HXC+sHBmfvAk
4ukpvJpJcMAek8tHT3yYRPeLQ/bG/rDHThGPjrglTaEGS679tmfs8dhzjwXg
+onmHx7n2pFwHF8OWZvajJpFxYJybcERxzF/x3FLh6pZdCJzd8y473EMb3GL
0PQsarlUNdVmfhw3LLrZz9n9RnnOTPU3+Y7jzXS+tL6Dc4jC2eguVW6HB6+X
bant/YNoqJkH7hTYYdXX0iMzEn/Qf7T+71kz7DC/YpXAMOkPEp7jVV0Ot8P3
np6khl/5g1behex5pWOHf107ZZNBP4+KYg5X2PbZ4hRuyxP97AvIfnnT812L
Ld7wzIunqiyg/f69vKjOFjuG2+bHHV9AEQ6xl4TzbXFC0fc7WvkLyFxl0HbG
2xbHS7M+W5dbRJs/UzdjN2xwekqf3JbzX2Rru0wpE7XBPe80O8RXltF4zo+k
TU4bfOn6jvfCh1dQ6EhXmwm9Dd5fWEFzyW4F3fQrpfyessYxbXtwVO0K+hjn
SpErt8YmOimsbnGryPxJG7lSfZuPJ7r2Sqyhb3+fJdJKWuM3sgkD913W0BnN
++8s+K3xh7kc/tnMNZTWHENe2LTCtG/37RihX0cdg8pkpSYrPFIJqZEz64jC
mG/4n4kVnrWSvmTfuYkGTJKv7j5mhTvrk17S7t9CPhkRrTbyVni3UxZJ3mQL
JQpYGy6zb/svqd441LGFWpT3GKr1W2LH/iRFPR8a0HMLIdW6W+LwTOPVQxd2
gFYdyQCHW+Ce2ujdId/oYIUv+oCljwVu2JXtX8SwEyqjaqYmHCywj18H9Yj8
ThADYSqrlgV+dvAts2bcTmBuXOv02GWB1VwtqXGSu+Brc5n93nRzPFAkouGd
vBtuiY9J5seZ4+7j7ew2dbvBIoFvQ+msOTZV7G26N7Ubmg0T7jjZmWOLV8Ab
aEAPj9tdf1QQzHFo17M3H+gZIKqbw9+uxAwblfCPBucwgooiRWsmxwxfVDkw
vdzJCHPXL7LEpphhToHLGjO79oCH9WxlSaAZRt4fHsoG7gHK57fLm6pm2Oln
sbKc8V5QfvGXlnLVFJ/sWptl4WeCoJ5GibE6Y/ym8oPMSAoLJHIvLG7mG+N6
LfqjtOUsUOgg+vLAZWPsqG3V6vGBBT6OXrYxMjPGqtPrHxdYWEFlkRJX9cMI
05eeGCdnssIaR9/gRSYj/BPFz3pXsAHHcfri7HkKRgx28+u9bCCVqxZc84mC
5a975w/+YwOnQ9mMUwUU/MbzaeklPXZ4qeyiYqZCwQkwn5v4lR0u2UynEpzJ
+D9CgNo+QU7IyeJzUNMl4ytFfV31hpxQ89VIzEKCjI0rwwreBnPCuFf5i/gF
Q7w1cJdrooUTSGEhU7+uGGKpP3FxvmFcwHRrU6fuCQn7L9MRbMa54WY/25It
rQH2Cuhny2DjA/e6wE9SY/p4+mSNEDbmA7nczmc7WvSxfe2+uNCrfNDqkhJZ
kqyPb0hbld2i5Yf1CcYdWwf0MTUUpjvX+MF1iWbffVk9/CFiPf3aXgGQ+ew8
E8Gmh5lkHq+fNhOAf89xh+lfXfzYz/7e3A0ByDgfdW21Vhf79TxSjmEVhOad
K1zG+rpYdoDu8rO7giDF/lto0ZGIF39R39X0CcHqojFdqxYRF//K9p3bFILm
vtIfucJEHGqLzl8TFwbnLJ8HBpM6+A3tv5W9EcKQLjQulR2sgwOdZgroRUVg
WXZIVSdRGz9Ms+tyShaFuNs3swUDtLBxYW19QaM4eLkNlT9S08Lm9OXOu5fE
gSQp2qREq4WLr1W+XTpyGJjrK36RbgD25I9Zjr15GLK+taPAOoQt5Fx140Ik
oEKc7lsj/VH80ZTLisNEEjLmDBcpXZr4dsAzOg2qJIQ+T2Poy9LEPOJH5ve3
ScJRCkF+WloTJ1EFCZ/IUtDirx7LZqWB1W4KRQtYSsNwTYCoe74arn9g81zm
qiy8uvCf2oy3Gubrd2mq7JGFIoMNozBFNZyUnLKLul8OfPoTzyY1q2Lpl3UX
yY5ysLR+r7nqlwoeOc5V6LomB0y6g6d2qitjpqcflJrMFWBun8j5FFplLPTo
vgJNtAJ093pfO9CuhMlXss51lCrArZPLz6WclfBL3SdXJfcogmgS217reEXs
kuQ4JdmuCJrdpMf3uuRxKr00m3+AMjTTV+/WyZHHOW511IF7ymCBBFy+esnj
qBLe7yuDyuBT/JeNe10O94c5KVkaq0DWhbvhCWJy2NTLZrlaRRUWrVeu9C1J
YfcVlvRr0uqwr7FDYz9VCj8Jv9U3FqAOolL3ZgyEpLBEUMqzHVXqYEVrYfmc
IonlvFxr0jQ1oKqshJCTL4HNXGY86Ww0IYjeucaVLIZriZxvNcoRJAYpn8oa
PoT9qCy9+RsI7g7t5esJOYRL/oxCjRFAd9WzGN07olh3NDtk4BeAvAubkfii
MH5QnMFuxHsMvgcmvenXFMCe8Ucp5/214etHO8G5EVbcLeagWSutC+W3glQ1
1lgwhUdHivuELsQ4Uk0usbNgQ92Y10SqLui0RK/KJezD2orxZ35P6ULLuHHl
RfIu7PO3A1oL9MDH/+I3zkg6XDRJ3DPYoQd7l6qZH5XswC87Wp7Er+lBzh61
viKe9fonlbINFy31wSy1OJV69Gd9tL5phfOGPvQ9DiUNbY7Wm+YtJZ8WM4Bn
t67SOsb21zs+KL/Sb2IAMd6/uxgKS1BXLbX8de42jhp/OPNkFo1mTLxRUiTB
hgw13GR5Hv1ey7lQZUOCWoFD/GI3l5DKUk2V9zkSKO2wde/t2UCFdEOXT78g
AYfb0Mpt8d0Q9Hvc2kHNEIIGHr7btUwPWl/dNo5YG0KXRWhOYDMjtLssXuUK
NIQU4v5jhp5MQFKZslO/bwgzdV9Ya5T2A0981aZvgyGI8X4MZIllgfTmT241
nwzhUno+McqcDeySaptjdpGhquOylII6OxS7ObnT8pFhZI8f56QgB8wqZR68
KUsG7Tj1Ccs5TuB+kemzaE2GMw0CnYyfuaDRy7214SQZ8td2PW9o4AYf1mia
O+Fk2AzuTpRM5YGIaboTuZlkkH7yLPh7KC9MZ521b7hHBsdfeY6ZTnzQpoP/
/askA/VwvJ6xPj9IH7LgsGggQ53HaRk6mYPQMBLE+/YdGabzzbmfcxLANNab
5NhLBt4hVZqADQKMBJbEcAyTwZCHMCU6JgBrZ254z0+Q4cURWm8/L0FQXBrS
XP1Nho+ksydIA4KggE8ySC2T4afXpLmIiRB0L+WYpWyQgTbeQX+zUQiMaIfi
RegowFvYodGvLAylr2e9f9NTQKFRW7b6oTC42jK9+ruXAuThapHUgyIgNS2Q
oLGfAm4b4gd8rolA+pMdLY2sFDjHl71Pb5cogMftklR2CmzKrJ9wDhSFhjuO
kM1BgVidE+XnhkRBKID14T5OCmy/QjQZhodAT8grdmKbp3oLWJTVHALa/m/e
stuY5XxMYYuQGLweqt8zyUaBG2nfF0eSxWD3UzMezu14vEU6+hurYpD9849J
LTMF8p4WZnJ7iUNZdLnvl+18Rdp2Tsl3i0P2bJNiFAMFir96ahjBYdirreWT
v5MCUvPNSV6PDoP/AVIPhYYCFbsOD8VwScDTn9kKsWtkUOG5KpMdKwFzTI8N
DJbIUCs1HV0zKwETKZzv8+bI0GRZKjzdfASsxn2W2X+QgXSSKWSnoiScH2Sc
Uxsiw/sI/zeEO5LQRji2urldv74CuVOWYVJQeiUnMqqZDFO/qx+/EJcB6Ymu
p7mFZPCn49rquy4D9N2/eKSyyDDPFWb2Z0sGcu+fiQhNI8M6Ul849FkWDvtM
51CiyEDf7JRj0CQH49F2cyRzMrwz3f/G6p8cmJhGPmfU3+6v/oYZVzl5cCml
MuZqkIFlRlArKkce+gfDiHoi2/3EMfr9SYgCBF0yXv4ybwhSbifFeQ8pwUWx
7lPfqYZgvhlQ+SteFQKvJi7d/o8EpUZvyuJeqsKPkq1dEw9IsDubt4R3TRWs
/Wm9FW9vz7fqm0LSGTWQt7pB+z6SBMKBvDeK7NXhwlyyIqc2CeZHm8IcZTXh
EOmThV+7AWS08qD2zwDxN2pL6yb14fS776O9nERwsrb65aatB7qaEVq3FIgw
+mUFCSnrAX8pW7a9KRH0Tt65MX1YD94nEy2GE4iATeXV81j0QNb83svJNSI0
Na9GJXzThYVPp3LXvm/vzdWUWLdYXYgc+20jVKYPYaHt9lvviZBEs9nqu61T
taDiP+84HcCzXevguq1LeOXd4xE6MD94T5Z1W+eydXkZ80AdsH9ufKOmggx5
LrIdts46cDgo12WTnwKp/3psXmnqQPPo0eXUBQokExlZdy9pA+3bSNGqfGMY
H/jWxHNGG+qboxqizptB8F0/Fo5zx2B99oMxA9UMHBeTqBKBx+Aot8jg9Swz
YI45YqXvfQxenGxdefTUDGQJtwtvHN/GDFwK/X/MwJb5k22ixjGoJZcXKXuZ
g7pLuHLimhY87fh+ddbEAqgzgUrZbFpQ0adv5SJoBX5rJ+95eCHIq1ftWJC2
AjGzpawsewTUosOkK5pWIPSiWXnABIFX0J6jZTZWsKEprxCqioCfuUNknWoF
cZrLkoKMCBL0rBcyV61A7q3xC8Wyo+Bc7Z7+odsazqp+kOPb0gSm9JhOiLcF
hxK9TqZaDRB8ZN+weN0WtOjzbG6Va4DSK6WyR3dtgcjZnS15TwPs5yeTuF7a
wsi5JA3fNA0otjA3mP1nC5xcds+sTmoAkV0Y556xgzwvmsxaLg04l/G6ZN3h
OCyHSI/kRqrD2M3dV2oVHOBoDsfAvIMadFzP/CGp7QBJDuHpaZZq8CztsE6u
qQO47uevVKKoQWIieSPa1wFwke++NA01kLmQEqx33wFqzziHpvOoQagnl0sn
jyPMVancf/lZFRiUxNTHaU5s35GlxlsOqiDVpfeT9YMTLO/j+TkZqAJ+DhF8
lVyucF1Lr1LwjxLQLoR9lZh2g+42oSdnkhWB4iLNeSfPA471bC3SBigA5VSD
cCzZCwr2TDx2C5cHxhth76t4T8Ei8aDouyQ5iMyc+DnS5g3d9eHf0pNloRSf
f+BScBpQr/W0GpMMZMTMqRv5+0HFi/13Vp5KgdwBvmPK/AEg9PmN43SGJOhN
1wSqhJ2Bhcab0qVBR8BIUWOj0ywQFOaWuwPCJaC8VSpEWCwI+Pb6XhDLOAyB
QZXq2UzBEMtc0m74WByYdnM8Tx8LBq4EvZPro2LAUMpwpeJDCBSZiT+icovB
0NF+ZtNHZ8HE9VSPk8chYOY7EFsYEwpO96qVyrEo5O2dJgp4h0Ho2Od6SU5R
YJjIbODRCQfPSvuVV9Ei0PXx81VN6XPgEXb9QPG4MCztT9Di4IiA8ZrV3Fg7
YfirzF5++mcEfPqYk5w5IASW/vJ+0x8j4R01sr7OTgiSrkmOTZRFAbrAfVVz
TBAItBmknEvnYSav9chYuCCwxKf+C/O9APxcCZUWDIIwOO/l1a0bDcZLY/K0
BgLQ+mD47C1SNKQrhUukEgXgP0e7eCejaOCa31fFf0wA0poNi6Yto2GF+XSk
uroAELOkRmjdo0FJ9MDgOUkBeKQ9f0LxYjREkDwwJ4sAhKWdt86oj4aMqc4j
z/sJ4KG35GHfGA0Pc/7x2PURwOyff4jgm2hwmh+5sdxNgCMeLtdL26PBn/a5
glo7Ab6qEruavkRDHEvhcgMmgO4wg/Hf1WiQ7aN3nyokgHzGRce6jWjg81hZ
SssnQKroRs1Lmhgg3HZhU88lQFT/2TeXd8ZAXanr18SbBLAhnvzBti8GLt00
eK10lQDtuSK//jLFAAs/Q9K3eAIQV4YXPu+PAW6C8GdqLAHkHtvR3WGPgW9q
mTsmIglwn55zbyxnDKgpXR/KCCcAv1sXmyd3DNjRSwPxLAHSXyTzknhioELk
qMh8IAEYucnCknwxQHM9j1rgT4D/ARkVkQA=
     "]], LineBox[CompressedData["
1:eJwVVnc01v8XNxIRRTY99n7sTZ9rPMbzWNl7r8pXZJf5pDSkNBTZohLKbuFt
hBBCEpWMpGTvrZ/fX/e8zrnnnnvPeb1e9yXgGWjpQ0VBQeFPSUHx/1pFeN98
64IPamI9ga34NmGmY6yqPcE+CBM6fUH1fBM2Gev5jNnfB1EaDoWkXW/CuN7u
3kxx9UEv00+UVpU0YbFySnbpBB90c9XK13WlCSMez5t6zOiD/B7W89Rff4d9
W4tkqsvzRjuP7FyVPzZjoSlt5L10b3Snmfpl/0QzxqTAvqyV4o3G3Ml5mVvN
mPbZ8i9NV7zRUHDymaeiLVjBz9+5bf95o8+Sgwtl5BYsoMdasV/ZG+HjjjD3
nWjFqIpk7KfbvZD3Pc0k/S/vMbpS2tsZTV7I4Wm+cf/Ke4ypavS9cY0XWmW4
diWbpQ3jQXdVS0q80I9fQTW/zdowpb419rPJXkiYoX3UpaMN891Cn+esvZBo
w3ySX1c75v8vlTHH1AvVC5Qm78y1Y8EHgvRPGnihceVrKf1HO7A4JqHqUlUv
pChHHetg04GlCV5NOcfthayVwzM6xjqwDqOTVksjnqg7UPXOT7pOrOek+I1H
g56IKW8nW1y2Exuwpnxn2euJfMs+/YdsOrGfrpUKlU2eiLep4dmP/E5sJ5iD
JfSxJxrMYbWn0uvCZDJGelb9PJF4e46cY0o3dnc60Gxz1QNd4KxSmqztwXSZ
I2+LzHugOF7lzwz9PdiiyuU+iz8eSKXOK8B1ugczj0+zLfrqgQZ1AkWSuHsx
Jq5GV6d6D8SnMsHCFtWLXTdgCay75oHMws0oTuj3YWr+vOVTFz1QbDHOxMut
D/tzR3SZLcoDHdA45YIu9GEGwxoRAWc90LW+s4nMpX3YgVCvOD5LD2Rv9eqQ
Gu8njJxXlXyRxwP1+nwYGqfox+Teo97nrB4ommls9DyuHxuZaTv2ldEDcbcl
65JO9GOgNpyqQOGBxCxn89PP92M73TS5Pyfc0f3zdxvpV/qxiB3bMv0X7qj4
sBj/hbXPWIDdZs8hHXd0Z3dD9gl+EKugL3Sy13BH2n0HlrIsBrH1OtvJJ4ru
SGVR3vp7+CBGFq7aJoi6oxCHo86yTYPY3cUA0VgGd2QQJlSo5TyEBXC0r08U
u6GAz8Ti1Oyv2HqMKGN8thviili9pdf2FSNPXBLku+OG+hhHDXWXvmJ3y8HU
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
     "]], LineBox[CompressedData["
1:eJwVl3c01f8fx41Ciezdvca1JUTm52VcrnFtsrNTyEyU8XVTklFKipCUUpEV
GsbbSEYhJFGZSbKzt5/fX+/zPO/X6/l+ncc5r3OebyH3AMvTNFRUVOeoqaj+
f5YTmxtvXjqNqPXCLupO1GEmIxzKncGnkbGniDjbWh02/p/7C9ZzpxFhS5Jz
k74e463cvpHqfBoxlCzk4iXqsf/kFG0ziKcRVlG7VeldjxkcefT3KdNp5Ozl
SolcqMd+rIQz1zzyRG4ROy+DBN5jIaktlJ0MT+TpL8uLyb3HmBW4FjVTPdHF
mN2nR3XfY1p+pd8arnmieNKgRvS599iTX39yWnw9UWjTi5Ep9B7z77Q+3qPk
iS7LynMSfBsxmnxZu6lWD2Q/P502NPoBYyimv5XZ4IG+Dh3QmN3+gDGXDzeT
qzxQ1s1n5sd5mzB+lKL88qUHCmvzG3M3b8IUu1e4/JI90ItEj02v+ibMawN9
nbX2QOHdc35xRc3Yud00pocmHugd99cl7fZmLHhfkJ4ZyQOVtlhe0ZhuxqKZ
RSqKlT2Qlnek2ZJUC5YuHJcayOeBXvbaFFIKWrCPRmZWC0PuKORk1bX0d61Y
p5lE4uM+d7Qz+k7g4c9WrNea+r1llztiayZfm9ttxX45lymUNbijVTt++kD9
j9hWMDdbyFN3xLQgsLHT/xGTzRzqXPZxRxc85+3amdqwlKkA0/VlN7T4+W08
ubwD02ENvyU654ZiP/gxPR/swP6duNptMeGGVFv62m0OfMbMY9Jt8r+7ofrV
oflCl88YM2+9s2OtG5ppsG+WZujE4klsATXX3ZDrmUfPhOs7MZVzAqV/L7uh
DoW3ISz9ndjEbbFFzgg3FBXoefvov06MNKAW5u/nhka5ycarQl3YvhCPaLyl
G7ItI5R/ie3CKI/Kky/zu6ErMy52+227Mblm1FXI4YZC89LZuIK7saHpFvbv
THvzZu/HOd3oxkBlIE2Byg3VikSkxjd2Y1sd+3N+jbki38aSxfNKX7CwLZsS
vSJXZKr6/d43oR7M33a984C2KzKjEvMtFO/FXh187min5orQ1StxkYa92GqN
zXjecVeUIOkmluTbi1EI5ZtEMVdkQJ/NHVDSi6X88xf7j9EVWVWsnbXCvmH+
3K2rYwUu6PWVGiduzz5sNUqMKSbbBaX0EFYUEvowytgVYfxtFyQgt+SQXtKH
pZSCiX2oC8KpD0zp7PRhb8jlj9u1XFAb/WSf+IN+jIry0OT1V2fkPdBUUP73
OxY/vuVu1eKMzvCzDpVx/MDYTBwuzlc6owI1vDqd1g+MwMeZK5XjjFQaM97k
pf3ADMsT1rJ99u4/kr+NG/3EUiYu5MbtnkLMA3cGxusHMFEL43U7yVPo6/j6
h2MRw9j1a3X3v/CdQud5khc60oex6SpFNdNDp9BA2XR9weth7JXYkQjinBMy
ZDsXKbg4jMHWzNbRCifEkl7MRBcwgtk9S6ai1XZCxpoJ94jnR7Gqn7SPohSc
UFESLpX67iiGY7uovSbihJpF9K7RvRnFfke6xszQOaEhbvqSP5ujWLCl/L6+
Nkfk8cpxjDv+F5a03U1faOeIZHIfalWUjmFzCvrPxY0cUV7+pJxU3xhmebbK
4LG6I1rwTcuc2xnDeL/kxqfhHJGBTwLR3+Q3lvc8hDFmzAFthNXVkmd/Y7VW
XIdtAx1Q0hcuArvWH2zhhT0X9XV7VL3VFVQiMYk9F5T7dD7cHjFNeh2Ssp3E
TqXRUcbP2aMI2fW17dhJrOVq2d9PFvYonXy77s3YJJbtwlRzj98emelYn7ie
N4WROes9ZIrtEM/3jW1DjRmMKimN5+EjO6RfPZbZGDiDvabxb2dNtUO0E1JL
T5/OYMLzfMqrF+2QjP8p6hyWWWztY8jBBh07dOuLQV/c1Cz2hCJRattriwoT
8qumHeYxh9Wd0x9bbJFRWHBT8sV57LD/Vz6syhbliAllnbs3j4U7xlwVzrFF
elBo+rV7HrM48dN2xtsWbWTlZfub/sN2ppJ3YrZt0IZd+j4RiwXM1naVXESw
QeOrw3MrcUvYeNZY4g6nDVIdUtscL1nCQke7PpnS2yCDNz29R78vYff8XpLn
/p5E6pc9hd4fXcZ6rriR5YpPIqsmJ1fh/mXMouST0SvVk+jyaNUXH+1VbHj5
bQKN9Ek0a53KLBm4igWq5320FDiJ8uOdgPxwFbvVRDFa3LFGdm39I2hnFev4
qWSk2GiNhMKH2CMa1jDygRzD16bW6PW3EA0G5w3su+mNeDota1R6ZGv63J0N
zCc1vNVG3hq9rRWOIbZuYAn4k4ar7NboWtrMfqMTm1iL0kFDlX4rdLbsfW8v
5xam5x5iUOlhhcxqSP7tU9uYZpWBPrpoicbX1VcvbVPBGn80j5WPJUqorP9U
iKeGV5EVf/84WqJq+o/yUjrUIAbCSayalojYIWyzG0cNzPWbnZ77LRGbDe7r
UW4aGGwqcmBMsUCyuM5AJV1aSBf/LZ1zxQK9yXhFq+tLC5bX+bcVL1ggQljO
8bwUWmgyvP7Q2c4CcX65ZXx2lBYK29zGSnEWSD7XA63G7oPIbg5/uwJz5JAb
0j05sB9OHCdrzmSZI3HzWOGkg3Qwf+cyS8xNc6RSOKZ0Q5kOPE/OvioIMkfH
CM9WS1PogNzXvLqjbI4GcvM6H5jQg1L1Mg053gyRbpO1WnsZIPhLveTvKhPU
u33AMQ47BAnci0s7OSZoyXCUninkEOQ6Eup4rpmg91xiszQFh6Dn1zUbY3MT
tPGGOprIxwQnlshXysaMEdspv1uKO0ywydH78zKTMWLxGptt+HkYOOzpn2cu
kBHrteUVTyYWkHmgcr7iGxldrI7hfSHDAs6imQf+PiKj703f45d9WaBOyfWE
+QkyOriM5yueYYGrNpPJOBcj9Gq5543kDitkZfA7qugaobGH5q1RQmxQMWgs
ZilphIIqeqQF9Nhg3Ku4OnbREN396JmidoMNDMJC/k7HGaILdEamrELswJS+
o1NVYoC6m721P9lywL1+thVbGn0kyhgaq0nPDR5VQd9kfpNQ6mseXRNVbpB7
0PmWuoWEGujqy7p9uaHV9WZEwQ0SKum7dsComxu2/hyg3uUhIWUePi3Wpzzg
tkJ1KO+YHrIWoqEQPfhAts9lJpxND3nOWWmFPuCDjXeow2xZF00eamdU6eOD
1KjI2+uVuqi2fr9KgBk/NO1b4zIh6aJrMxI833UFQIZ9TmjJiYg+aVGWJE1w
sL5kQtuqSUT/HnN28N/GQVPvy7EHwkQUkV766N1XHLhk+DzTn9BB5kJG+dRu
eEgRGpfJPK+DJtl5G6m0BGH12ICyToI22t8n+GYuUAiu3L+XKRigie4/8l97
SCCAl/tAcb6KJgqpq5ZrMSeAgTShUZFGE40Vn7x8OooAzDWl0wZ3ASnHBIjQ
9REgY7gNC6rCUGlfoRTLHVEoFacdrqfXQHZSMkW/hcQhdd5widyljgyY+X+p
2IhD6LtbDL0Z6uhPpNgDfKI4aJBx8pNH1dGanmhwyYo4tPirxrBZq6Hm+ZFC
/FcJGKoIIHjkqKBby06fnEqloOG/1yoz3iqI9Qyt5oF5KXiiv20cdlwF/e01
YAs+Jg0+/QkXEpuUUfqS6ZHYEmlY2XraVDZ9AiWFlZYeqJYBJt2fZ/epKiHZ
Bl7LxE1ZmD8kEnWTRgnxN64K3tQ/Bt1fvW/ztCmipIGN87GpxyD9zOo7GRdF
pDyoPVTCIweERDbGk7HH0dWou5aPquRAvdug8GmXPIq7Xxb1kF8BmujL6XSy
5BFh9YKviaECWGJ410EveaT+Q34qOUwBfJ4vs3FvyaHOqPen+78qQMZ/jy9e
F5NDqltv3xTcPw5LJ9fieldk0Eumf4VhmkpwqL5D7XCSDHLV/pvEHaYEBJmn
M/pCMmghhCLrXKwE1jSWVu/I0igxUuvwsNAJKCsqwGXlSCJ/rDi7mFkZguld
KtyMxJDzXJjdCzpVSAhWOpsxJIoehdd7uRiowuMBRv4vIaJovc5Z/1mCKnSX
vaXoPiSgb2XNhsMsaiDvymYsviSM/naKOd8UUYeRoMQP/ep4NCMz97P5FAaD
PXaC86OsyE33sovvlhYUpwcrq22yIBtVmhYRgjZQnJJMr7KzIOFmf7dysjbo
tESvy10/hFxuPg8hZWhDy7jJq8tG+5FPiMB8nKIO+PhfHuaMoEWHbrb0Ozro
AONKOXN+ATUSCtbP64vWgayDKr1PeLdqPCZ6qipadcA8+XlyksZUTfyyxHFX
OyL0FoYaDOz8qpmw8GMZCCfC2/R4GqeY/pqeFuLP3iwiULznuhhyC7AHp90E
jw7t6cjxFzMls5gLtarKqJMubMsmXTRdXcAGQzNqGsJ1oRIvKiB2bwUjj3vl
bqXpgiK1rcfXL9uYYc4Pa/9OXeBwH1i7L04HVt92j/9T0YPg7y8+7l+lB166
zTNECz3osgzNCmo6ADcIorPfzurBTeJhLcPTTJBpbKVdf1cPZqp+sFYoHgbB
9Qt07AV6IMbXE8QSwwKKQS5HHtXqwdWUHGKkBRu8jXt6LGBcD8o6rskoqLID
y9zyVuGaHowe9OOcEOSAWhmBIbGDJNC+ovrHap4TsveWuFmKBIG1+M4DfVyw
znrBdU6VBDmb+9/V1nLDVNDquqUBCXbOdydIJ/NC+HKEfKc7CY6WvD0/EsoH
Jpa7YtP+JHCaznZKc+YHaY1v9gbhJEiSiNUzIQlAEKOn6fhVElR5+srSyh6B
fezZjC03STCZY8H9jhMHN88Oes+lkYBvQJkqYBsHV6dq25xzSGDIi/tL+I2H
gI620zzPSVAtRePt5yUIOzzRw7hiEvQYXDhl8F0QdF8LNYdUkGDKa8JCxFQI
ZvyaqY9UkYAm1pG0Uy8EcbGivnx1e/65HWr9SsKQ7bkmGNhIAoV67WPlL4TB
y3yYKNRCAqOhcpHkIyJwR9RHUP4TCdy3xXl8botA231Bttx2Elzizzykt58A
ha+zb4R/3uMhu3XKJYgAgfbcpvmdJIjROVV8aYAAV4Dqjn0XCfaiEFWqoehe
Pbtt4p5O8sZbFlWIQtK0X5bOnmaJouS2CInBD9od/5i9/ru3RpZGb4iBgpDJ
qMmeP98THdL2uhg4tAozP997P/tNbhq3lzg0xNWwpO7NJ/Jp31/5bnEYyExm
4GwlwfPB02rGIAGuk0d4ZJtIILPQlOiVLwGrmbdcRhtIULpfYoDCJQnr5x7s
KtaS4ARvvGxmjCRoRgdwSu7xqpSZjK6YlYSDVlqV9a9J0Gj1UniySQq2Ul/t
TL8kgcEZppB9x6WB/Te+IvYZCdrD/T/gHkrDs6+Kwp8fkaD3kdxZqzAZ2Lc7
shJ9lwR/58oLq8VlQWh2ovLFJRL403Lt9t6RBekix1KeYBIscIWZ/9uVBVEB
h3pTHxJsYaqLon3H4PeMURSfwx6/Jucs/UY5ED6SqBCiTIKPZoc/WG/IQYbR
VKyr7B7P/toZNzl5+PRDtERMdI/njKBmZJY8FBrWDhqw7fHj+DVSEqIAKdNn
Gnin9EDG/Yw4n6giSJenPXRL1wOLnYBX07HKQGF0vXRkUhdeGn8oulKnDO0K
Q8Gig7pAl8lXwLepDMwtk5dluvf2W/lDrkGgCqxRb2qpVeqCcBDf3ScOqjBl
f57eI0EXFn41hjkdU4cf/02GGknrQmorL9bWB6A5eEjyehARfD+O/PrKSYRQ
e2GOLm4d0FUP10xXIAK+PSq2nUkHBF6yZTqYEYGQ+2Kim1YH2m8QLYeuE8FS
XM9vbU4bjlk8rZvYJEKWT0FrYYs2LH47+2BzRBc2o+g/VEdoQ8TvORuhIhIY
M8S8NpjQgkSqndZzJCO4eIrzzkyZJqDZri1wMwJhliFpvqeasPDz6THWSCM4
I8mRa3VPExzemdytKDUCTgXC+vRFTZAIfuC6I0CG8mX70TegCU2/NFaTF8kw
y12i/qQNgKY5glCWYwKe875RSf8wqGmKrI2MMgfz+J6JM6c0YGv2swlDkjkM
1x/yCjHXAA1ukZ93MszB4dO9L0lEDag+07qW/8YcknfH9Eck9zQDl0L/P3MQ
+8XHzb2qDpVGxU+UvCygtoxtM/+OOrzpGImfNbUEUrk3m/BXNSjtJVm7ClrD
sNfU9mSoKmTXKHcsHrUGt5uIQd9PFZKeSBjEqVtDB0fMVr6HKngFH9QosrGG
a+PnohLMVUGAuUNkK8kampZLdvKkVOG63snFtHVrMPN8Jmo2rAIu5R4pn7tP
gsUdZ29JCxVgSqF0QqwtkMQ1T1D0lUEw36F26Y4tZAgMhC2BMig2KBblP7aF
Jy6DfwJOKIPDwkQiV50t3JrnVIgUVYbnlhb6sxu28Fp8JfkvrTIQ2YXRg0A7
+Dz1vY2l4QRcSn1fsOVoD7sX3qm4Ek/A73t0cZUKjmAweHDrmp0SdNxJG5PW
doRezXW3YgsleHtLQueBmSPIC3YfHDBSgoQEo+3oc46wT93msAGmBLL/3Tyv
l+cIF/uyTJyElSD0NJdrJ68TCEhYCF2aUQQGRTHVcapTIKdTNOMWpwgyXXpT
rJ+dIchTqu9ny3Hwcwznf8XlBpU1HbvhyQpAsxg2KDnpDu4CqqbH/eWB7HqU
82G2J+CjB0ZuxMoB+ezex8rICxgEDd+Ohx+DA3fD2sv4zsJk3otZo82jEJH2
Z2r0kzew67qUM+3lq5co6pnrI1/ge8T2uPyqNKRS5lWN/f0gJsuyAQKlQI6H
X0tJIADCL+XWOV6VBL3JiqATYYHQFPxTfj1dAoyPq213mgdBjch96v52cShu
lQkRFgsGRrWbZBsOcQgKfqWayXQeGJ/hvSPtxICJjuNdyu/zQAn8kBNYLgoM
LxniSj+HgGrikncykygMaPQzm+VfgImcRi/6iL38ys8Tk0sJhR2f6FbSoghk
M04S8d5hsJkX8oP3rAgw/Emr5dW5CFL7DK0lZ4Shq6cvXv3oJbgjVUv3y18Y
Vg5f1+TgCAcPs2Ebh3UhWFZiL/adCgem8tzItVtCYOUv7zfZEwHGv7dH6EWF
IPG29O8/RZFAycg1qmsUBBxNqkHW1ShouD0pccxHEFhikzfCzv0H7gE5WCuj
IPxc8PLq1o2Gj99vdMz74aH12dCFdINoKHpSXcngi4fXTnaxzsbRsCDGxy10
Fg+3mgyfTFpFg2lxHt7KHQ/EDJlRGo9ouL7b6lttg4d87YVTxy9HQ2eF+Ldc
TTyE3Yo6mVoTDd/lqTw+sOLBU2/F06E+GhqOcR+ZYsaD+YZ/iOCHaND4F0pk
PYQHKU/XOy/bokH4C2+PMx0eBpWJXY0/oiGxuWl7ZwMHukMMJsvr0ZB5Mu64
1RgO5FMvO1Vt7/kn1t2OHsFBMmG7oo6KAjElH21fDuIgsv/Ch2v7KJAkqMFH
348DG+KZMbZDFBCejQqqb8dB2wOR6WUmCrz5hKP/9xEHxLWhxb7DFIhze04j
1IIDuUI72ofsFGixr5WKacBBHj0nYwwnBTJo12zKanEg4N7FdpqbAq8eB0+M
VeMgpfoGnwEvBYq+MA5xVeLgALeRsDT/Xr38MzXDNzj4H3TJpUk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 1.5000000000000002`*^-8}}, {{-4.*^-8, 
     1.2*^-7}, {0, 1.5000000000000002`*^-8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326573022997*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
1LonGMJP42Afj6GwpEAsCNimRX+0wcH/AJMbUNY=
     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1:eJwVl3c81d8fx60iobJHXZKMSPb+vI3rXnvPXOsaRbZEZFNkZ6QkI6WSklW+
5CgjojIyUmaikJJLZPW7v7/O4/l4nMd5vM/79Xq9H+ccdQuw9KSjoaE5S0tD
8/+1Dt/ZnhHuibjlEk8lBHVjJtOcyn3BniiI3BwRkduNzUW7PTzk64k06Ofy
yp93Y3yNO+m5zp7oFaM0vni3G4uWUbArwHsiOuLOrlBmD6Z/pHT+Hqsnmjz2
JmK88S32+U8EW3OpB9K1+fNdWrsXC8ntit0t8ECp1o1i/T69GJscN0Uz1wPt
vfAht/F6L6blVz3SesUDhTS0Z3su9WJ3Z76VdPl4oDWPSjyPWR/m32ctP6jo
gTyFqkYPMfZjdBXS9otv3NHJA6efGF8fwJiqGLNutbqj4vbrExs1Axhb3VSn
UZM7+p2QlD7WO4AJoGzlykp3FEIxjzJm/oApDPzh9st0R/um3bzG4z5gZzbR
0E9r6n6RcS4schDz/ZfPWmzijvoTLqDSwkEsmCGIYEZ0RwmRYTXE5kEshu1Y
fZWyO1I96Dho9W8QuyGclBvI747W/GQbU68MYd2GZlYrk25IWzC5e6t0GOsz
E0+989ENJbOqST15PYwNW9O2Wfa7oct30LuKxWFsxrlWrrbVDY13yERdVhrB
toN52EPuuaEUoa3oD70jmPStyb61c27oVDim539oFMteDDD9u0ZGC5ypVe+H
PmM6hyKyjv8io5nI6hNMdGPYb6XEAYvvZLS85eyeLz2GmcffsK34REa6ke8m
/ksew9j4XjmTWshoI3xtQVh7HLtKZA9oTiaj11z6ORJtE5iK7+Hq+TgySmH2
YONem8C+XxOlcF0io81hJjEPsUmMOK4W5u9HRv7RbGTx9EmMIcQ9RtCSjGpu
P+qolZ7CYkvrMuMEyOjHSH1gM9M0JtOJ+h9zktG+Faut3yLT2OSPLo5PrGSU
6C110Fl7GgOV8Xw5GjJqV7K7PxExjW2/31My89UVKUx6O2csT2Nh27ZPCU9c
ESb5X+Ohb18wf7u/ffu0XVHbj3IzKYZZrIb5AclezRXVRiw9zBCbxdabbefK
5V0R95f8o0pGs1isSN0WXtQVsesyF9nmzGLZv/1Fo/e7IkWznrgl0TnMn+fN
+tdHLmiS1/bWKukbth4lyhpf5ILiPf/FLSV8w2K/JggLXnNBM4YvvitUfsOy
q8HkdKgL+rnq97x65xv23KjuzjstFyR9c9Hkwt3vGE1sscmzIWdEqTUJb6Bd
wK7ObbtZdTmjXPXMt9+kFzB2E4eLy43OKPSzg12g4wImws9VdqLEGSn+ObCa
2bCAGdSlbBSdc0bV81f7j1xYxLK/XyhL+ueEgnp5yo/QLGHHLYz/2ks4Ie/i
3zYVsstY8pWXNz/wO6F9eRzubBbL2I8mBTVTFiekHDoS/ixwGasRPXIJ/8sR
xcoGyw89XcZge2n7ZL0jWmRiwTkr/Mbs72fS0Gs7Igc3GcGTBitY0xh9aZSc
I2rcenf/iN8KhmO/qL1xzBFlVzEXO15bwWYjXeOX9joi1sDAB12fVrBgS1mG
j29J6Mkum65fEAVL2xlgfGxPQuvtX00zn6xiv+T0HogZklDyiMgSGlnFLL2a
9O+ok1BKQR6bAe0axveh7Go+joS0V3VFAm3WsPIHIfvjvzqg0K+R20J0f7AW
K+4DdoEOqIt8X6fXbx1beXiamzb5NNJsrWufzN3EHgjJ9JyPOI1GiTMHIzs3
Maf8vbFzvqcR6ZfHzbjNTawrsXa+x+I0arn531oPeQsrcmFtvi5wGiXubfUP
U9zGjLheuUtV2aPlzQ+l2793MJq0fN7iUnv0FHt5s1ByF3tG5//uUK49WsT9
5a333MWEl/mV1y/ao84ffR1Wn3exje4Q5lYde5R93UrY8+0/7G6seLXdsB1i
NXVo8pihAYf1Xc/uLjvUcFpuUYWBFg74D/FjTXbosNisgOVxWoggxScKl9ih
/kX1QRsvWrBQGrNb8rZDtFvJ5rW/aWF3MXM3fscWLd8YnjJjpwc7u3WjJyK2
qO1ywFhh5h6YK/yaustliwZqTQ5+ad4DoV/6e0wZbRGdl6/ytR974LpfpdGv
eRs0tHdLUtZoLwwmkI1kqmyQ6jWtZ9msjGDxtMewRtUGFaGa4sb7TDC11pBC
J2mDXE8mUjjHmSBQvbzb8rANkpd+qDfPvg+yXscaUnat0exfXWWG2H3wfkzR
UKHdGimscF486soMRvtKDJ6ZWqOYfY7Vv1VY4JNp+tW9WtZo4VPbVEAoC5zL
jXhjK2uNoLPxT3gdC6QI2hisc1ijbvOgVCU5VuhSZDZQGbVCtg1JL4MV2IDg
FqLf6G6F3s+f3pN44iBoNunroYuWSKc8/RdKYocNgRheq3OW6B3tll11FTvU
RNbPfyNZokxl667NEXYQBeG0Q5qWVP+PWORJcADbq60+jz2WSDIy/+hWHwdM
vH7isD/bAhVkNrYIyHLBDbFZyZIEC3TmZXTBW2cusEwW2FG4YIGef0j9PZHG
Ba8Nkoud7S2QPfP1phMLXPD4LflrNc4CrZPSbIMeckPkAKe//SNzVLX2IstM
nReU5I00lwrN0XWv/bNnA3hhOSfuYHyGOdr/6pzNjzJe8LD5WfMoyBzhokek
Ndj4wOhj5/qusjnS2eMjx/ydDxRfrNEZXTVD4C9c9vupAAR/eCUx22SCrm7z
jbkUCkIKD2V1t8QEsX4fynn+SRDKSCIvea+YoLNPVJxaWIRgcOaKrbG5CTI2
qLsmbSwESqtGCbVfjVFvsGVI7Tsh2OIcHotjNUZVPJckkz4fhUTbhUyciyGK
ylvdqj4mAoUFAiQVXUO0Oceop2ooAvUTxqKWEobo38IpbDdQBObOVL24TDFA
f4Ibq7RbREA/LGT+R5IBWqpyZa1xPg6sN3Z1mp7qowqz0Q2zh6JwfZT9jx2d
Hiq9z35g008C3JuCRqRmiYggU2loUiIBMrf7Gmi7iIi4niG4OCABb1wzLj1K
J6LL9nvO7lU9Advf9tH+4yWiAtn5vP+YJIH8h4al/BQBXa+pJWzXS4EUx6+j
q454VBIdfIR8TAYSbl6/JRSgiSzqQrVzeBTgjNt4VYWKJhq8xXdyTEkB9CVF
2hXoqCwun6xuqwBszdU/9PMA2RH13TTyFKBg6i0W1IShK1ZvVYFTEarF6Kde
MWqghVTfoi0uJZisDxBxL1FB3RiH1fJxFVAf0H98r18WOVW0JxPIGvCasW6v
TqEsyh8aic6J1wBLTNB14owsKvBRopso04BzD9bYebZl0B2N9+/PzGlAQfSd
i8miMmg02lJPzQeDVZuNpOE/UsguJmc66jxAMKNLPdlQFE2dffU7BdOClGBF
r4LJ48iPzf5jgokW3BnfL/Ah5DhKMN8xOe+kBQO1DbG6xSJIxOHET4UoLZB1
ZTcWWxVGOXkvQeOFFkwHpXaMqgsiS6jzOq6iDROD9kLLXw4hUc4C3ebjOlB1
I1hZbesgMv4h3W+gqAOxjmmmiRwHEZcPT1Srrg7odMX8lUlmQVE8HAJh7jrQ
NWdSE2e4B1FSrk3NFuuAeeaDzDSNxeaktw+WijjxMPw4VH98d6bZ3Phq7Tth
PDTcuErnGD/aXO2ofvGrDB5ivX/1M5U9wvSXxJnfGFM5cu7h0tOf2AnXwOGz
CXjgdBvfuCm2F+SrQ250L+Ih+NPD7j3rjOApFWPjvIGHfsvQwqDX++DZqb8F
wwy6kIE/oGXgyQqN/eO754/oQmJ2CT7Sgh24FhiYnEx0Yff8QIpkJh9MDtTO
v7qvCyefNpyfDuUHCaFyxas1uuD4o8gx31kAzv9GnnLNutDk4SNNL30ELuyO
z0kM6MKLE3TefmeEoLX+1OeHm7oQLnCLhbBHBCL1s5gGCQTYld52cgmi8v7e
MU5TAsTrOFWFj4vAgVMtG6q2BEjzFrR8Un8cOkO6umTOEKDoeVk+zxkx+O7C
qdSbSIBjPQzzsgNiwFda/1QmjQAPJjzVjEEcKO9dGUNzCFC9R3w8lpuak5lb
QpWlBGi3qhReeH0CorJcOTpeEED/LGsIg7wkJN8wCtdtI8C7CP8OXLEkzJDw
0fffEGC4VMbLKkwKLt2ot+IdJsD8r7rHL8SkITFQdOruEgH86bn/DedIQ6iA
2YIWhQAr3GHmv/9JA76/LvHlBgG2MVXK8Y+nANt473+OngiMr50L9dpl4GiZ
uI83DxG6zQ50WG/KQAhzt5bwYSKkjbYskWVkIfHcdjsSIsLBJSHNyEJZ+FRr
TrkjQQR+zpnppyFyEEeNJK8aEcZu5zCjCjlQ/GpBu4wRoUhMV75nSg5E/dRF
H2kT4Zj6vcRZY3mwq6hOfqdPBCm3s2L8xxXAgGXyVLsNEX4u8piLkRTgZODP
3Bf2RHh6oeuiwjUFqFpO97xJIoLiVYlu0x0FMM8YTKchE2GD/dMKSV4RzjN1
70t1J0JjYYqAt7ci3KBrU930JAI8XfRNGFIE2iPL9EnniECjVpiXtV8Jjomd
6LzrS4S2NmN0W1sJ/pYZZd33J8IVk525ijAlsDi1GZIZSAT9kccHGh4rwbDS
r1THYCIwk51VOmaUIDTp3yJbCBHeLrCRB/iUQWNsqbL8AhEsdgNqflxWBg9j
4ZorF4lQadzxJOGlMgTPp6fMhxNh7y3+R/xbyiDUcyjn5CUiuM4H3K9WVAH6
Fys/LCOp9St3lOkHqkBKc2Pj6SgicF7hL5msUIFjThM4nWgi+A8GFIbOqgAp
+hLGEkOELuGOG6xCqvC8QVatgcrCQfx5dx1UoepmvhoxlgiRLQHX1PNUwaYg
1/0ZlYdZO9IHelXhWMHWZ6Y4Isg48qd4M6vBmrJwN0bllIqAKzQENfCY+G5j
Q2XQ44+RblQD7fvJc1JUXplpD3M8pQ7WOqVDWdTzjOX4Qyje6vBcuHSUh8rl
sQGBKXfVgd0GQuKp9dD0tvsenVSHJiuN/j5q/Q5H+L0b+DRgW87+MD2V63wC
PM2sNcBrPTWej3pftsZ28lyGBnwjRchwUvvhxcTvHPVGA1zfaFhTIqh62QY4
cDJgEK7pLfCc2k/cvXbbR4CBRxtzvQu13xcpfFY64Rjcd+s0Wwql+iur3Sjw
JwaD9I16Deep+k7w6TNKADwel93zJ4gIU1IBukXuAL9OpyfyUfXOfcOHvf0I
0Jxin8FO9cdPngBVdw5N0LtOivzuTfXDmXbFTRNNYAsppdw9S4RtugBp8TZN
ILrTGAy4EcHWov1Ey44maJmVpeNdifCxN41D8rAW1A2+FC90IoIc7suBVlst
GEpMkmOg+tulgyWDNUQLxM28mTmp/k/zVWY5fU0Lfg7R72exJMJcYxrTco8W
JHvFkOqNiFBgp0yL09YG87V7OAo1X5275BhvZ20QF7bGGVLzt3ovbafukjaQ
TKfWU5SIYLo6/dfomTYEJl/m6pEmAt21tJVwSR3YM2XMaoQjgk/39MwQFx7U
7QdXI/4SQFc9QvOGHB4uVrUxl64S4HAl+y0HMzycUgkUr/9FnUfpeMvJZDz8
iRuweDBLgFMW915+38KDoeUR7GUfASgjXre3pqlzlWP17GwZAS7N/rI9+oQI
fLam2xc1CWBtm1wz002EnZIT2p0qBJDqFGIr/0aE5NYYEWY5Aow/sOg4cVQP
apKzMv1FCKDpWyuvkKsH/+60+zxnIgA9JfSgXoQ+XM56zB3SqwupNLtvfImG
8KFVhOWLrS6gn/3bQDaEQm/unnIzXVgZu3fqUKQh8FZ9f3hGXxcc/jPJq682
BIftEuOPqrogHnzbdfewEahdrnp55bAuvJ7RWM+kGEHCsR47qWk80HVeEqkt
MYHqv3cmfLzw0Pw6siUyyhzsMz899gjRgephorWrkDU8G3wpPx2pBUXNyu8p
J63hEHP6AdpQLUi7K66fpG4NOpSpVZEALTgTzKzxxNYa5l9rLFwka8FhtvfH
ttOs4crGp3ELIlVngg0l/681KIi98+8+qAUude7ZvQM2YOsXt9BloQms2bF9
cNkO6PT326EeDIQqHFpWc+yAfWtjWKgFA4VWhScVd+zAVVZDJL0GA4eV76nc
L+3grucnroSbGDywtND7uWkH5Y6mIzNnMcBzCKPbgfZg+GA7NWQvNVe5bY+2
SadB3oA8/chQA2av701qlCNBnfunDMafavA+J/+rpDYJXtQya07OqEFDlrjO
bTMSJKTjRtCoGqSkGO7E+JKglWvoTl6HGkhHZ5wnlJPg9s1bMyW31SDUk9u1
j88RgkNtZ8TM1IBJQVR1jsaJ+s6OGXr9XBWk+gmLh3qdYVRKrafrtgq0pYUo
pI45Ayllk2U1TwUc9MuiGBacgaUr67lIhgoktdAcXGdwAcu4X3LXo1Xgy+Mm
hTE1F2h4FKr4n4sK3EiRjS4vdwFT7i9sW8IqQHcnI/mIpiuEe9vxGj9WBj9S
hEANNxnszTyKj/YpAR0lbEJiwQ2SKK5pu+KKYOR6kqu4yANaGQSM+Ebkwcir
RTje8AwYSQobOjyTg315Ye9q+b3g3rzprlmZLFzK/7b4pccbKGEDbh0tMlCJ
ou67lvoAb1wkReb1KciNXVY19veDHl+HbEctaZDhFdBSPBwAGbf4s0zXpICw
UB+kFBYIYTelyi5USoKxvNpOn3kQ7PuPt23u2gmoeiMVIiwaDC9IeI2PWRIQ
FFyjeov1PBT5fMNfSxcH1r2c/2XPngc+P+sR5koxYKpkSqruDQHf6HXF2E5R
GNcYZTOruAAeh/sP5P47DmwCvPFlsaHQ4CVSzqh3HIr2L+AFvcMggGJBSE4R
AaZv+S18Oheh3HOGtuzrMegf/HhV/WQ4CDBITX1WOwZ/DiRrcnJGgOQDFovA
28KwpshR5bMYAUVSOdqS7MJg5S/rtzB4CQRu7c9siD8KqdckZ789iQQZdbM+
I/qjgKPL1S9MjAJ63WfE5VQhOHg5czPMNxqSpzj4BA8KwdjKmTMDujHw4Vpg
2BcdQXhzf/LCDf0YEBSr2s+vKQjPHO0vOxvHQKsSxcBSXZD63zW4u2AVAwaK
l9ra5QUBXyD1hc49Bk4KCJVViwhChfaKk3xcDAToj41W7BWEsKwom9zmGNgA
fxu+Hhx4EP54OLyKob5TDz707MSB+aZ/iFBHDAxpRhTVtOHghIdrTuXbGPhl
U+Zn+gIHE8r4/vbPMRCzz+16+mMc6E4ymaz9jQHrtfJPElk4kM2Nc2zaiYEs
isLJ2DQcZIrs1L+kiQUZztIjI8k4iBy90HGFIRb8inAjV+JwYIs/+5WdJRb0
/9GVLwXj4O3tYz/WWGPhDWFoSj8AB/iNScrHA7FwV7z4+V0fHMg8tqcv5oiF
ag8JFWcPHJQzcu2P54qFp4NB002uODjs1s/uyRMLHtKtx/mdcJD9Ip1fny8W
1LonGMJP42Afj6GwpEAsCNimRX+0wcH/AJMbUNY=
     "]], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 1.5000000000000002`*^-8}}, {{-4.*^-8, 
     1.2*^-7}, {0, 1.5000000000000002`*^-8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326574965055*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
hvj0vVlx8D9xFqQj
     "]], LineBox[CompressedData["
1:eJwVl3c81f8fxaWyyZ659iiSvT8v45r3crOvvSmKIlJSbpSsIgmpUCEhkhTJ
28jI+NpChcrIJluhX7+/zuP5eJzHeT3O678j4nnWyoeaiorKZR8V1f/1Nb6l
8fYlH/Rx36a1J1sjZv6dU6072AelNTlh1VKN2NRVz+dsZ3yQjcsfwwRoxPje
7d5KdfVB9em2CWkBjdhVeWVyJt4HTbM/WTHqacRMBB/P5DH7oJ37PipmxU3Y
l41wlprH3oim8prY/ZgWLCT1I2Uv0xsldqoXq+a2YCyK3Ks6qd7oxvBdqrr6
Fkw3oGywIcYbjSfZ1qfvtGC54z9zPp72Rhc8dX/dDvqIBXbbKPWreCM3IZnp
NOdWjDbwSR7XcW9UdC+cKS28FcthXOYhS3uj76X48L6MVqzPKGFnmN8b/Tmk
pyr7qRVTr6lvGvvrhYx8qFLxtm0YdaGc/VyrF3LWoaH3P92O0ZXSJj9o8EK+
WYcqqVLbMZbX31qI1V6oKuXgFeuadkwApagVF3shlZ+bmTLsHZhy7wZ3QJIX
+hz7PNGvsQPz/Y0GFm280O0DtLeqDDuxNsIJ65UxT7QrcWpH9X031n1COuHJ
kCcqp/ev+2+gG/tks++DVY8nWqGe23Zd6sbGXcsVyxs8UXrVrZRw0R5sJ5iH
PSTPE50q0leljevB5B6Mda/7eyJnwgepNqdeTDmnki7fyxN1hKxRSYX1Ypp5
d3TtnD1Rmc995f6UXsy4FP/yjbknEjKo/6jR3ou5f3iWFCbviSDkzEq3bh+W
MneWtL3ugWYO/34Srt+P6bOFJ0sseaBv7CFBmZ792C/V672W0x7oDPvfCIno
fswiKsOu8LMHIi7rRgY39WMsfPWuTrUe6POunvJt0gAWZ8R+tibWAxkqtSxv
BH7CKI9fJ10T8ED0px2n3rUNYfItqOcFpwd6MXct5fCvIWxs/iPHZ2YP9Oom
+5v7PMMYqI+kK1L9yxOfe7zpPYztdB7MGZ9w/9fnNqVr32csbMfupWGJO9qQ
j/nsbvoFCyRvd9PruSMHOZU8YY1R7BVDgZO9pju6qHLpC3ZmFNussZvKV3JH
WISN2kL2KEYRf/0HL+mOZoaYcet0Y1jKr0DJq4zu6EmvSpji9zEskKd1c6LI
DUXfZBgf6f2GUVGyzd8MuKJLVxM6P5X8wOKmdjytP7qiXwZy3S7//cDYzR0v
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
AsSeY4HMI4JAz0MQlRGgwM6gfmbFkCD8D+vaNqg=
     "]], LineBox[CompressedData["
1:eJwVl3c01v/7x62MQpK9sil7z/dl3ObNfdsje2ePKGXkTiqrSEpWCVmJrAZ5
GUVEPpkhGWUm6WvL6Nfvr+s8/nn88Tznec7zEvAIsfSmICMj8yAnI/v/W497
/+72ZW/EcGumj7rhLUaYYVH5dN4b8TTVv2zpeYvNX/EoPxHojS5k7hpufHuL
cTYe3Mp08UY3zHcXvjG/w67IKtrl4LzRiW0qPNfld5gR7+OlJwzeaOi2eH6U
Swc20/jLcYHaG8WUdsarx3ZgUfaafeJk3qhmy9DMOa8De3b3c+3TNS9UnhDF
Vf2lA2M+yhhT89kLedFQ/S137sS+bEUxNj/2Qk5TUywKvu+xiMwu0mGOF5qe
uJifn/QeY5RnW9fK9EJ2LKh7v+I9ph1U87n9hhfCi2Q/urXyHiv+vlDQFeCF
nqFreoNhXVjwJ2uFISUvdM77i8StS90YTXDhE1YZL7TR+b93WdndWMGx3+x2
4l4IRdAWdzR2Y4MGKftjXF6IrJWBUH3Qjak2t3VM/fVE3T6215pufMAoKqTt
l7s9EYN5YtKzZz0YbTVNem67J4ogurKFj/ZgjPXT702aPFGs9BDFPmUvxo0y
VCorPVHC9eauc869mOLAFltQmidSUKj2nOb8iPn8QcO/rD3Rc1uR1NkXfdgH
vJnV2pQHmjWznFTn78c+mYmnFI56oFz3N/NfNPuxEWvyt5b9HqhE1hSFn+3H
vrvUyde1e6C/Yqu3EzP6sf3z7MwRTzwQ1fRYfgzVACadO/Vp098D+TVutFf9
GMAUC17Rlnh6INtiyiY+2kFM/ckdbVsnDxQaah3cKzKIGVbjnr8geCDpJwtB
f90HMbe3pWmRsh6oiOqwNGNyEMtYDiHubrqj1bd39ptWhjDdE1HpIqvuKHlV
oODu8WHsf8oJAxaL7iiPeqV4Tm4YM49/YFsx7o4Kly/gNiOHMUbONhfHFnck
XNS0do9uBEsyYA5pTnRHzvQBPcNanzHS4/q0q9zuqDTqtAJhZAyTfY/6n7G4
I2mWo0FJZOPY1M+uk+MM7shlYndh7Mw4Bqpfs+TJ3JEpOtLeFjeO7fcdKfg+
64ak9elEmSS+YJH7ts/1q9xQ9NFyy/DUCUxU0H0trNQNGehKGIs1TmAjhgGK
Dwvc0P3EqCMmixOY4t24V1sZbqirfObtof5XbO10WWtppBsKNl6VGKaZxILt
dj/R6bghUdX6ypflU1jt0TJHe3U31PJY5/aPqSlsu9l2vkTBDeH5JJg8j01j
JOH6PZyoG/rbrtSripvGMv4XLHrlmBuS8bf4UPJiGgtm796efeqKeANKnZIr
ZjAy0iPCi2EXlLoRvepZ+x1Lmt/3sOpyQU0DnRlo8DvGTHC49LvRBWn2udDL
b37HhLlYi84UuKCGKbtUP9VZzLg+eeehvwuaNW80cGydxTIWLxTd/OuMqA+j
fmqMzWEiFqa79qedkdL+nVQHk0Us8UZr9iCXM9pjs381cXkR+9mkqE6kd0Zt
OxF2y2WLWK0obzRu1QmR2ZGcy2iXMNhf2ZdqcEJTH6+xefctYfalaWSUOk5I
6+ZZy5yQZSz1YIDmmb0jGs++JM/84xe2Km9YJoZ3RBG2DltJQquYpW+TUaGG
I6pXiFkF51WMc7AoKYvPEZUkdjid71/FSsoijsXPOqAzxh9Ee1x+Yy1WbMft
Qh1QYRqR+pzN/7C18rNs5Iln0XAfz/3oa+tYGb9sT3jUWeTz139ZvHQdc86i
Js0HnkUh1mMvJHvWsa6EuqUei7PoxN/1UDmWDeyhK0Pzfe6z6O3YjMFO+QZm
wtrmKVltj9InZfgDvm1ixSTxGrsRO7TXuhU0eXkHc9g+9P7QZYdOjmDF68U7
2PHgYS6syQ65Djro4j7tYFGO8QmCBXZIWfomVb7YLmahPGG34meH2G7YVuWO
7WKHy2mH8Qe2KKbLUPQ0cQ+zs9s2qRK2RRclc2390w+x+bzZlENWW7TM9tL9
6cdD7OK3/h4ijS1S5mosu3rsL3Y/qNJkdckGyTsxmHxL/IsNXXM3ka22Qayz
9yVo9cnA4nkPvlbNBm0bK+XgLchhevNVMoWEDapkHTJ5GU4OoRolHyx5bNC8
PL7Q4j45pHeS8OuH1ujzo2tzxybIoW9CCa/4zhrJsoUbp/pRgAldgfELojVC
WfsVXrcoYZx4K4la2xrZDzeqj9ZSgn9mVLetnDVqkSbzTB2lhORTNsbbJ60R
TzF+/K0wFXQpHTVWHbNC13V9VIZbqUDfI8Ko0dMKHZEat6g9Sg1aTUaG6JIl
inKsUNXdpIUd7jgOK3/Lf/2OXZgSpYPamIalBUdLVHDMZ+S7PR2IgmDqCS1L
9Fbjix4LogPGtr1PXkcs0aJTk+zH1KMw2VnlcCzDAvVJ1aUXqtHDA7E5iYJr
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
BFYDwWvUJbzwf5sbQiw=
     "]], LineBox[CompressedData["
1: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
4mQMlPXmGdkE88D/AdIigkk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 25000000], 
      Rational[3, 25000000]}, {0, 1.5000000000000002`*^-8}}, {{-4.*^-8, 
     1.2*^-7}, {0, 1.5000000000000002`*^-8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.59232657595676*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
hcVTS3nsz6nwnZWIq/yiCto6JNMPr6iQpZgmmaKuBlc8jWKMB3bnfzXa2RSh
BicK/uBMh6nQGq7o+6VRDa5/9sv9/nbXD99pHM+SGtR5ClTrjFFh+v7LmyYa
6hC9Pz9Q4wMVFukiF4Zj1KHjOnpMO06FLXsBg8AOdZiunT6eMEEFxpJ26l+c
BpTw7uOt+kQFnjmfgWxLDZANZw/J/EwFUX1GUalsDfC4bURRmKSCQlpdYMuQ
BuRZG1qk77LmkH2zpZAmxLtecKvdZZBY+/fBSxM6hxc2i3b5cEixdVi5JhgH
P7Jx2mWnNpNC3KwmfIuh5Zrc/f8448yXfFUtiIg9+hi/yySn8wcUyVrQhse6
EnbnIZepx7e3acE33gzm3N15kxbedtvSaMOZiq5I6q6frIMJ3F/NtEEv2u6W
20cqFJyT9IzO0gautQ9bXLv+y0Z6qpgHtIEdlDtv7+ZTJxX8p5hfBy6JOm6r
v6NCV/u9rCdlOsC8Wm28vpvvK2aPUZcZHcgzjijDhnb7d6GVnlXWhadcE4oR
u30s/LZu42rVBZGRSbaq3b42sEX68m1dkA/49+T2CyrQZRXY65rqwVf+C+EV
fVQQlp387vlaDyqddMKidvs3c4sWqP2mD1liCUxX26lgV7HPD5QM4IdAw6xN
GxXclx/fGQgzgMQe/NjWfSqEX2A1X980gFRnZXbzu1Qo7iyNMuM2BPdHJlPX
dvfzj+KLgU8YQF6U/9nmfCo4bHOaZ1qbgGrlukBdCBUc94zwNIaYwOWT4dXG
Qbv5M1/9NHrRBP4TN6t7G0gFl70ycbLDJjCr+HuLwX9XX0Wv7rEHHj7zvxCO
daeCn6c3z1qIKVxxlo7LtaBCVEfDhF+OGQicGeH1kaJC4Rn7GGzkMOxXEekr
f58K8cJiFoNTdhDa3DS2zzMVgtlfpxvrOsOFvFwV6YkU+HHN4SGTkRv0nmLw
0wvdvXed3OWs1z0B/3PlXvUmBcKCslvclr1BbtWeZ+sCBfpNE3Pdl31BVrFs
DZQp8OYk6/NYsRNAzOx/1dedDIVjuL9PZE7Clk4WCBOTQdBU4tqkBBEanque
6eVKhoPr7/NFLIMgaFofV3g3CaT//stItQqBbbw8zYJXEtw+3PWOOTYMyEQt
rgz6JNiwcH7R8CocxnbmP3N6n4WdSztyyy8j4FjjZITP00QYTl5VfToZCX3W
d4vTxRPhfNF/Lfu/nYKPA72OBhlnQLL2a2TCZBQIp/1qFtlIgHS/yPFjf8hw
0T4xT9s7Ad7g7z0d+BMNVVwjU43Dp2G219LtLUsseKheSXhqfBpmTuWQIjji
oJJ9iFLxIB469wXdXWGLB9nGH6dndeMhmJhXzSR5GuoKCx0V7sTBxnikSJNU
AjR3REseVosD1/USw1n9M6AsKh/ZXhMLuRzeeaxHEiF0pOhKkFIsNFiPBD6x
Pgsvn12fkGmJAdvCIyupaknA6XG8K0MvBvREMqKWG5NgejPR81xPNHCKX7z4
Vi159140634mREN/lCFtclsy2OpueKl8IwON16HGVQMKXJWiSjvGkSGEOcpK
C6OA07Uxh/gYMrxv/u9rhBEFWjv3VZSRyXCXdQ//vCkFOmU2W39HkCHgQWf8
1yMUcChhzc8hkeEFn9GhN14UqPHKdRo9RoaCF/qj1RQKqDJHFScDGXAxxPCZ
VArkDMyfvW1IhjCpK8yy6RSo6iCkjxmQwTJu/WBpFgW6O3toNHTJ8FfufmlB
HgWE2egKvqmSwZuiRUqpoIAibkfUTpIMr1T893RWUWBRAy+XKE4Gg7HLxTs1
FDjUb21XJ0oGXrXl13H1FIg8Z8bCLEyGnvFGzfDWXb1Ljvue8pBBI2Py5e02
CtT70+ouc5GhRIs74Gc7BXjG5KKlOMkQmxVeFNBJgX9n3h9PZiXDlE6pevkT
ClynfmFpZCaDw5f+55PdFKA3dXn/mZEM6MI/P/FnFCjI9n/NxUCG/fqq2x7P
KfBJCmaM6cjwP8NOVeY=
     "]], LineBox[CompressedData["
1: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
zYkgqSrzz+UVCVhVhzgKTYnwP4oeW+w=
     "]], LineBox[CompressedData["
1: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
J46elxsPZ5Ql95zfEA7/LTjPCC48/A8yGnjT
     "]], LineBox[CompressedData["
1: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
hCM6Stsn+ynwKZP9zWwwEf4Hx4ZbHA==
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326579409327*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVVnc41t8btjKSLaPI3nuvPk9GRsgeLyE775vda494vZER8kXyVeQbKRKi
ZBxbQ1S2CqVEJVnZ8fP761z3da7r3Pf93Oc8zxHyDLLxoaKgoCBTUlD8f/04
KH/lUQkBxWSaWF55/wNTHluLmykmoO8Riio7P35gOKpatU83CEinN8vPJesn
Fi8X8Gsyi4Cmjszk6KgsYHdxUmUfUgjozi6zQ8joArZUfYdzLIKA+tZV8ErH
FrGr53JW+x0J6CHvlM0HkyWsOtmiss+SgJqyTMoz8paw4drDXi+NCUj/1pKK
6OclTJA+abBbg4B22w0Hy4jLWGP9pdpm7gN9afK/C9NWsKlpBfwzFgLqZGHQ
FHm9gtEwLgg+pSOgJL34R7uMq5iVh3d23QYeGRzR5oxPXsXmmeyD7o/h0dPb
37ZMfdcwZi02iXtv8OhEZZ3l0M01TNW7f+ruczySZ+MovN23hiU0GVqUPMWj
qF81Z3ml/2Dls5S0tx/hkbdKysa4wx/sNStq/fceHt1stbq1m/gH47mgLnfj
Bh75XDw7cXPoDwY5K19zs/DowepKofT2H8y7tbooJwWP5gkFb80F1rEaDokj
mRF45Kh7aynCZx0zbuf+SXY84F+0OTwws475/xwqJVniURHt2Rdn99exHK5s
5wTjA742febuYxvYlD/9qxgNPFLclcvuttjAaAq6E6MU8MgdSjh9L2xg0l0J
WhESeKQZZ70se3kDC+fdqgjlxqMMmpoK+6oNrOh0g3swCx6RZp7Yvu7YwDqD
QngC6fBIKYFu4vroBsbc+z0Fv+GH/ilpFlfY28DKQ9/7uo/5If+B6xkVRpvY
bUnZ+7UDfugn593CNdwmljcV95Oq1w8JB9nNthE2MbKpUHBZ/cF+xvW29YxN
zFPYL+rHdT/EXirB3vN6E+Mf/JNONPdDWwwSxKZTW1iuElvt1Y4LqEbdxe83
2zaWuGS8U1Ppi3KmObRuPdnB9P8+Ts37zxc50k/u47p2MKrDgjzR//qirSLv
GOG3OxhJZFPVIN0X/dO6MP7p+w5GdqgIHCH4Iovu4TzuE7tYcgv9zJaUL3L6
wtjzT+oulnH15Qv9Ch90IeUedSrhL5YvaJY/fNcbmRcXzVeY7GORedvvPxd5
o878JyKWuH3M6fADgd+53qhoorKd3m8f41ujv89wxRvFP3jO2ZCyj5U+720G
H29k+qYzZ+75PvYwUP9zhZg32mM2YrkpRgHdLVqyceVeKN5mzhdVUUC50vfg
tNteyJJU0O3QQAEp5QUNN/K90LmI261rrRRgmr0BdcleqIrXe0f/DQW88Wqw
nvP1QqQyySuqKxTw/rBShLWEF+JeEWoe0KKEZZxkp1iFJ+I3LHJ+9I4S7uIC
ricXeyJJai93r4+U4ICrc5/L90T9EVmxwnOU0OJ4cr/iiidKV9353rZLCVcd
rE7Keh3g/rVXeEkqELSLfKJ8whOFB8aXSSVSgYXliwencj3Q5SPzqmJa1EBp
yRRdku6BHGd7vDgMqaHewuYMZZIHOl4zGMduTQ3HLD7OdYZ4IPEtLMIQTw2z
5kuiRpYeKOCo68DVQmqINeUpNj/sgaplfblyKWig0tDvH6cEd3R9Z3Zqb4wG
xIueV5+NdEdLgmXH577SQOmK+Cu9YHcUf5x9a2yZBgqLZymk3d2R0OIR22HG
Q5C25Rm4fcodBWq/SdTVPQRvnZtz1PfPo6GUdx/OVx4CU+nyvWd/3dBJ/PIb
3Sxa0B/zViv95YaUruiqq9+mBS2yiH/apBu6701k13tIC5JTJRPOrW7ogbn/
tbw+WqDL+bd+J9YNLVD83ZVhoIPurWwCtuuKZgujRjJS6ABexoy2b7sgZ/cJ
/tpMehhP9xG2+u6CRPgzF1jv0MMlC8vA6TEX1HYG4lMe00PFkDDtXr0Lqi2v
6m4dpwf2qZdqOkEuKMOrPThElAHmVrjzGr6cQ2YBfQ9nOxggm6/e9sFrZyQg
0Ff0i4sRpKdvFWs1O6Mwug82enKM0HMn5eeL+87omdEnl2oDRtgWP5c0l+yM
7tm//PYumBG8lagei+o5o0atAlB5zQhaRlbsxQ1OCC3n9yalHIGZoIW3/9zG
ofOqzetuPMzQRuWaSryGQ4FnthkTlZmhKK9fzz4Wh4w3Z+JGzZnBvrm6jssZ
h1jahGL4SMzwgjYk9+ZRHIogfHBg+80M1bf+OBZnOCLlw+8uMg2yQHTf3tSD
aAf0SpLvnuAHVnB0C7qRjndAdY075LkfrKC6PG3pj3NArT3H3nVvs8Ivro52
OXUHZBJfcK33GBu4eyaV1izbo5Pih6gOubCB0Rad7xM/ezTAX3gj+CsbcEiw
/epwsENOC+s4OXYOIF14gr00skN1asXeG6IcsHTvXOZbdTskbDoQ/UmDAwYk
yxWmuexQRHpDKpMbB1yV1gndHbVFsQbUdj2VHLAr57Oh7miL7EjFfmHmnEAI
PGwCxrbozM6HGkYPTpioflRgqGGLTi4zabaHccIThW0tO25blLUUYp1SzAkh
SlmxIWM2KCmmlq9qjRO+qT6jrHK0QeT+VY6k8qNgF+Zm89jYBoV10w1ntx6F
rgbq/5o0bJBSfz5xcPgolKhbnH7JbYMuTvS1rFNzgbPml+RvY9ZI8Ki40ldv
Lnijw3RECGeN8B9DY9aVuKFR34MrH2eFUKj8BLbJA68KlGJPG1uh9ASooObl
hQ+LlDMralZIqvphMb02L+wVlj605LBCKpq+zoOxvHD12/NU9iLLg/e9xpV8
6BjcMe7/tplsgaQlis9bix2H7tWAOntvC+RGbz4yZXoc5ouZ4+v0LJD4auTW
u+DjIL9pedR/9yxaPeFiu9l6HJoqBg2mQ84iH+9Prypd+WCQYbykx8UcdTaV
bXk08MOfhkh/YW1zRODr9+yb4QceT17Ny9zmaCaU83g36wlwa3J+ozlohmz8
Dmn4BJ6AH4TJv5XGZujnKP2+l6IAUL+ecc5RNkX3C/I+hF4QBPHIJPHfLKYH
89I+MI8kCKaioitmv84ghr3Tnnu3BCE71if1UMUZFEPRtlo2Igh8cvNPI/nP
IL+j02cvmgiBauYvzvP0JmhoJk7nHiYMMXkbrAzzxqhS6lL9xDlh6CyiZHr8
3BhZT9QPXIwWBsvKo4foUozRihbnRkujMBBeYH+qDxkjw+eD9FHaIlDzxngZ
N2uEPjmlEZlcRGBj1PoXVY8R8uu1wZ+IFwHyrM+sA9kIGX6YHe7qEoFiqsyR
PSoj9CL2I2e4vSh8Yyh4VzFjiK5cOMNwJkYUZNlK+206DdGNw6KJNXdEoUng
SU95oiGyErx41XBJFIZPTjVYUBiir5cuPG7OFYPDEfL5t/8aID0LJ1+2XXGw
jtfMMZk0QO5mApa/ZSSg4Ip+5kqLAfpcuHAn2kUCxHIdko1iDVAp07Wu0jYJ
0K2ND1/c1kf1iS8aczMlIbnxamjBe33Ec5+nXr1bEvrbcgL1m/SRx4jg97Jt
SXAeKPfNj9JHW/H5PPQEKQj7OeAAm3ooj1/b5rWtNLSsjNvMj+khGrL7eHe2
NFBtz1jkPNVDBsX6N8YHpCGbfsPoW7ge8uQLrk63kIFKMQGNzD+66PbQVtus
qyysyEqpaI7oojpmUfuoMlnQVFVRmKnXRWHNP3PqF2WhV99YQp2oi9pNIyWi
k+Wgo21KvmX2FIoNoWSa75cHHAvzhH35KeQ+8iLjhogCLLphSb99TyHu334f
S2IU4Njev2PC84Cok+UHC3gVoeZsX2JLBSCdWLH9qDOKYHRrW8YBD8hiK0C1
K1oRQk86JaT+wFBCTTzLwGdFoM+4Ki1SiaHprdFXtdxKcPvD0+GWixj67jbM
r2epBH3RXFJLCydRasml6eouJRB9NvTO4bcOUqSoCKbtVoYmeurYpUc6aDVK
hkRmUAErnLJ4WrAOwr3S+epmrQKxG9nRrcvaKEm43Dl/XgXYjdtFHeu0kaNy
xC8FTVWoyP89sBSqjbLy8S630lRhRM1CRHRNC5mUP1ZM0lQD/ytx/a31WuiX
qZyPSa4aUI1URTiGaSEpe1YsZlUN5ImMr9PWNdFnQmbbTIs6JNe9IC5vaiDt
QeNxfKIm8FFtnkh/poHGHRm+6u5pQp21xEvRaA2UMlk9YZ6gBdNLV/hxO+oo
h9SfqpynDeG6Dc+Xm9WRL8/7vkeSOnAk+2tIeqw60k3hCivv1AFNBYNe9FcN
naQ6ZExixGAgPjQYh9TQ/NluLqVmDLwH7hxbiVdD17cmiSuhANkBFEFiFGqI
eiuDPWr3FIi3KvC2tauirnrP74UXdKHlyPkuXKIqsuW1xG2N6ML3ylbuDCpV
1N2eSN/XqQcJOwsdYl0qSLZmiOadnj5wmfH5tyWpoExp3/ytXn3Q/xHdvkKj
gpQJzuWbXw1gXOsBIaNHGR3nGJ8Miz8NgakTnOLJyohG+LKHj4AhFEpq4p3o
lNE1fxYN6igjUIy8wLH6XAmdm+tGBGVj6H2e35pxVQnN7YSnPl0zhlXfP2zt
DErIO43EdiXvDKQ9EW1xeqWIHKMtHV4TTUGQ1s53NU0RScYE6ZPdzMC8rK5J
/IgiMozu5f5ocxY+5vNdepapgBbVrSyzwixA8MtQsNghBZRRk6gYVm4JFTH6
/n+X5VAhgbIv4Jg1LDzfwuP95JDsg7WyqpfWoMhZe2FkShYlOXx7SJloA41V
Al4P+2TQ9Nsazkl6O9jdHHXn1ZdBb9L+hI5O2IGuYabblUZp1DZncbTvsT28
mNx1ci2TQtImzbjQJEcYY35vxXRZAnHnfnr9T/45OHbuukXUH3F0isM50L7e
BdzumZjPXhRHPLUKiWc/usK3U0+NW3FiCFc3OnRDzB3Wg3MhQFkEeeTHTY8O
eoJ2q9nJiQphVC3FdoY/3QviGai1DQWE0XUv8zqyiTfQloao8R8RQhGPnZRJ
gz4gU34LV9jHj9byRH8wCeGhDo7YhTbyIYpntINmFATQHou2NC07jlgYwtYX
vhDAlB5ntB3PixKPu6+hp/5AILCrOisfReE+GsjVKBhsXJkFVJUZ0CJtgYe4
GxE8M38e/cpIh3Rq09v+fiVCaNuLI7mzNOjek9LH4B8G14WStlcLKFAnauoI
iAkHuDHt+GbvdyvvPG9nSkEk+Ipg3wp8VrA6yoSvhOpYGHRx/Jnjt459seNY
nhaOAyw/ZCnj4ja2M/fKajgvDtJobOPaNSmBNb7N81N4PHhGpKTUAwPQNRQc
LmVLAJ5czjQlXUaIcamjenI6AQZq7mRU6zFBcZV6QUt4AvD/mTSxK2WFkzpV
fcljCZAqv3nWoowTCvbVU4LTE+FrC7w5cvDvML+VZh3ZkAhgdsWqr5wLhImZ
KuZTibB2gd3WpIIHKrJUWa1kSWC5jhumvc8LnJdrl+OsSfCAXGzfc/8YpBWQ
GC6FkcD9jixOv5IPjmo3hzU8I0GzwqUJiip+sHN6S3voPQm40DPntqoTwLwg
UyK4RQLfgP/kTzgKwiFGgnqvShLk1hsFxY0JAmxrxTtYJkHHzvdHHx2FYEx/
9GYbPgn40hSV/sUJgwAD6bzcv0lg+m4oZHtcGNDu7WGduiSI4Imoc3ISgdxL
krrqL5JgsLxVhcdZFNZVnrrSLicBxaI7MeK9KIT3ZyrPU5NBTo2mYdRZDFI0
tv0GjpLhapepet45ceiblO7qVCfDk8OL4WsfxKExd/TxlCEZvlhff2p7MBc1
JktKj9mRgfWm6mbdRwlonj/RFOdBBvg0psnuKgnnDByNWALJ4C8RExUyKQkb
KoWFo1FkuBl4oumtqxS0UFmxfyCTYW3XWyfLTRqWnjwZbiwgg/Bp+tjFKWng
vfCmq+QOGSzTK1vOnpeBT+YRrF/ukyF20OJv1bQMeK1SLSTXkuEB7wp2xF0W
Cv2KnP5pJMO4e178xU+y0Nnu48HSRoZDFZptr9zlINafuYeyhwzKvz/sS32W
AwF+fwh5RQZ39cu6qR7ywFTN5uj9hgyZccKJ85/lQfhBlMfnITI0d/d0GHsq
wOW51YrFMTLMM+Kp7s0oQHnIGkfOBzKkSyULJSkpAonvzLV3Uwf6+8c66kIU
gSzcWV73mQyNwVKeM7WKsHpXtV/764Efzhgq9hVFEBufNQr6RoZvT1+X6ikr
QQ4bbtdungzLNKGLwxFK0IJNa7D+IMOuNbe2X6sS0LYNXYj+SQa64pYrO1TK
MJ3Uz3NzgQzsCx7vMk2UYXckuzjkFxn4tej4hTOV4XuM7Dj9Ihkkk6v8GoaU
QYv2eILXAVYZsq434VWBJttblMkHGAQ39j+4qYDMOeEg4gE+E1BkFnRXBXyF
mJDyAbZr0rtB9UMFjlAtXO4+OP883dxMnoIq0ER5sMgdYIJdhrxUmCp0tuHv
Bx3oCbujFN3SpAqNOb8Fsw70JiyO9lhSqEEdoVE588BPuk4s2xdDNXhr9dAv
6DsZ8q8KuYanq8HetAGN2oH/OyO9FQzv1IDWZEHl80F9qoT914q41CGEkWYh
bJYMnS1P0rvuqMMSaYHWfYYM/QwuYw5z6nCY8fjtxk8H+TtQivyQ1YANV20R
imkyLC6ZNbE2akA0NQW3x0FeW9jyobt/NcA54ffz2Aky0KTnW2sYaEISndZ+
+kG+x8Q+z7sOaMIXauWiqwf5GzqFc1d+1YLcwbt5rH1ksCo/7gXS2pBlNbk6
9YIMzqvt1e+CtGG45nFleS8Zgq8xGm1ua4MkZ6KeaCcZijpKiIZsJyHFwDZ+
9uB+rkn1vZvGAOpoz53+UEYGm78sRmlmevCNcq4+6zIZbKlH2GsD9CDqe7TU
qbiD+jMUTo9l6UHpZa/939FkcDgqGiU2rAcXnEi99uEH/HKaVe0u+iDjx3FM
KYAMXq7u7BsBBhA1x0nkP0cGYmvNlFe2IZBt3HGpGmS4EWcdgY2cgV6bLLkf
K0kQfeyE8eCsFfw4gSkORyeBP9NAiq6GPeAyCQFulEnw/V+bZvpTTlDSHX/a
Mv+g33Ww3WW85Qq98rTV3RIkCLqY2eC06g4uQkyPBtoS4Y1BfI7zqifo13U+
sPRMhLcXGF9FnvCBJg4F+rMUiXBjgmqnS/QC2AOJ8N+9g/5tIPjvZ0E8qEqI
CInbJoDO5vs8PpOLUHaF04tq7TKI7Oynkk0DIHeSd57B5jI8PNM5zhAZBL+T
mV9S3YuHLWP7vpr+YGhxmx/zp46Hvet74quvQ0Cp1NknITAOhhPXFbo/h8Kg
8OPQgbexkFHwX4PM10sQjM9wp9OLBaHKL6Gxn4lA+D6jLfM0BlK8QifPrYWB
dvyw1pxoDLzVf9L9bi0cKtK3v4QUR8OP5yZOo4cj4XznJesltmiYu5RNCGGO
Av1J1+FH2VHQcfzi4z9HooHjNxadxxkF/vjc+/RCMfDrXb/UQHYkbE2G8tUJ
x0KVAuczH55IcNwsPvlDKw4eFp/kLyuIgBxm91xG83gISbmh8I0/AmrMRvy6
zC6DghW57snDcLC8Yf6HrJgATDe3jcnq4aDJl0pcrU2AvZbGF2Evw4BFICtr
VDER7p/vUst2D4M3xJOUiU2J4HFiSHFxiQgUbqdr17VJ8L6r3e1pGhECGIim
qhgJpCPPcq5eJcL7+v++hJwiQWGh5oJ8ChEeM1Jz/TIggfXPeup7SUTwfdYR
/cWcBFueOyMFsUTo4zx1+q0bCf7reauSFEiE/D6tsfskElyzvRR5yYYIVBH4
4DkyCRqvfnr42IoIQcI3GcRSSJAb8+jQmgURTKI2dUrSSbDKYHg8zIwIO+JP
S/JzSaCnVTEaeZoI7iRVQlI5CW65KnsnqxOhX86buqOCBD+LbpS/UCWC9sQ/
RXsPSHCOwoyBUYUIHIqrA1GPSMC6IKOYrUCE3slaleBGEvx5zstQJEkE5dTP
rx82kcBZZs1mWpwIxapsvj9bSLDM0oKExYgQmR5c4NtBgjZqxr/3hYgwq16i
dLeLBNoltG9/CRDBZubNq889B/q0J3qUThABXdv3EnhBgpo7j6bC+Iggo6Xw
1+UVCe5dajzWdIwI/wM/b3WU
     "]], LineBox[CompressedData["
1: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
BykNub+u7w5YOEJCLBkP/wMTNG84
     "]], LineBox[CompressedData["
1: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
Xhh8Ew8SajK7jt0He2lIrzOWjIf/Aeuwbko=
     "]], LineBox[CompressedData["
1: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
nFGR2nd4T4TQabz7sCQe/ge9Tn+H
     "]], LineBox[CompressedData["
1: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
MeEPkmqye04DSZD4zVFA6bM//A8dfVXH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.5923265833559113`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Osftml0SKOqrbvoP5MFlQ+MdizZJ8D9m97KN
     "]], LineBox[CompressedData["
1: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
4zQnwP8AdkKAlA==
     "]], LineBox[CompressedData["
1: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
MAECa0oesOLw8D8RMwpm
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwV1nc8Vf8fB3CjZURGSLIyshKpiPu29+Zyl70pZVx73mtLWkZJVpJIKIrU
p2gZhbKikAopfM2MjN/5/XUez/N5nHM+n3M+79f7iLmdt/FkYmBg8GdkYPj/
8euno0nVRX5IWWibY/beAk55YCnme6EfMtnwUE65v4AjMtWe+Jbrh0IVIx/m
vl3AxSr4zwxf8kNSz1uGOr8t4EqJMne+pPghTVYDdoV/C7i5B8W8A2F+6O+l
KD6XY4u4VMrVxQ8EPxTGd/p7Zf4i7kGyRWWHJTbeU+El1bCI661ldW8z9EMN
ViePdvQs4kT3JHx6fcoPUW1GNbPZlnANdcG1Tfx+yF/S9vWpmCXcr7125+8N
+KLTIh+5hH2XcRxqXNJ3u3yR/+KLkOCUZZyKx4eR0ne+SG1trmr9zjIu/qm+
RdETXySvGdpQ9GMZJ+B9UiE31xf1svO7k13/4gxf8v9JJPii8ViFEGbvFVxZ
0JCXy4APGruRqXWxcA1XcET+Xm2nDwqua7EIbV3DZY/E/GF664O+ddeceDi/
hks0EQu4U+eD8EGUq1L66zg3cZ+I31d8kI/oXVPhuXXcoU/LF6hmPkj+5niw
OmEDx5tq2PlGFxtfHw/+mLSBY4cb+/jVfdDeo3+nOuo2cOv3NLIbZXzQl9XT
kos8m7jPtISCrV0+aNCSgfPowCYuS4mrNrXZGwUX2LLEBG3jMibdFgcbvBEV
zR79e3cbl3Cr7oRcjTdaYq8xmxrexgWxEJ9+KPBGZTfT64slGcByrOAVd7Q3
OvFBb2s1mwFYr8j355/0RnbEYl3LBEagzRn+q6n0QoG3iM5PcphBZ/NRWvZt
L/S7UrvVooEZmFhFBSJveqF4vQpLlSFmoB9eVdG94IVsXf9TmxHeAYn25ef6
/LxQ+bnPqYr3d0Dysz3f12S8kDSRG9727wSDNmrAiJgXqhi+dr1qcyfs7v+2
1XLAC806G8kvSOyC1P8aDmaweCF1Dp9DudRdkCbuayc85Yl2mNpd8BfYDRmp
ba065Z5osSE5SSt4D5hlnyBIF3kiitdYdHTRHmAvKR5nu+6JGjcvOkp37oGL
TRFMfSmeaLPw3b1OWRbInJXR8Pb2RN9o/1UnTbHAFXx69QUpT3TNGe9bG8MG
OaKmOb2lHmhl0ZiHzsoJ4dnrQ2P5HkiuxjZw3oATSKwVIv9leaCwS9vbywmc
ILS05x5LkgdKsPnz7PU2J5S8e9sEnh5Iczm+1zpuH1Sd0xkrl/RA9sdyNzwu
ckHmj3nJx4c8EFFlRbm0hgsCiMV+r/Z7oK4nV/tP93KBsg7D0vBODySbe7Mv
UIgbGvajXTwT7og34bKCSC03vH6mJh9T5o5e5w3805rmgTKlqYD0AndkLq61
5LqfF1LKrtfn5rijbk62/34BL5hcXoGHye4oxVCpS/4aL3S511tPerkj94Ej
s3e19sMQq1KYtbQ7yvFXpVnW8ME88UiLZLkbyqgNG5yaOgClRP8ryYVuCCzZ
PXKkBMGe+NBlMscNEag+sj/dBeEZQWO7PMkN+RbGV/l+E4RUeysNeXc3VMBl
t2Q0dhBE8eGPlYXdkKjKaswbZmHosX2edG2/G/przB1taCoMybZMdkvsbqgf
GDiTrgnDtE3GYv0/V2Rzp2VBTUoEnlgXHVMbdEUzn7QlnWRFwcKytUIzyxWF
Kflufz0jBoyWeyOLLrgiPpFdFRPZYlBnYWPMmOCKSgRD2h1eioGgxdfJlkBX
tH+EzfwqnziMm81JGFi6IpHI+A+4VnGINhEoNGN1RS/9+j3CtCWgUt/nGine
BWmtMi+1XZUGqfx3D8zDXVBvFImS0CoNJQtS7doBLkivZLiqYUsa8grHGWRd
XNBLA72BvLNHIH3N7dy6pgv689ayg2AhA93kpqsnt51RE/4BMUNWDlp3R7YJ
/+eMRglWaWE+cvCiTpVh96gzcnDYPjpbJgcPOB77DyBndKzO7RtNUh4uttQY
hcc6I/1jKRbOMgpgIlu21bjphK5ITOsPmimCzoDHiZIZJ3TTJq/n7zVFUEs8
fDZ92AkpnmI/W/NFEY6MFA2SnzuhKDMyc+zJY7D76s26f9FOqDpyPCWt4xi8
Xrvsh9twREocV4MEdyoDtEX1v1x3QK9ypt3Yn6rA5wue4lZTDkizoO8IfloF
gi0sz40OOCB+alA9u8gJKO8R37VV54BWH/4Q7kk6AdwjbSfUzzsgiva4Yjvx
JEwu8GfX/6AgzSFKOut+VaDXM47pfaIgpw9W4o0WqiAU/ke+9yUF2df3F/5M
VQWbTfR64RYFlQTcd67fUoVnu72WFIkUFLP3Z4btnBpcFqqzrXhPRqQ8Mdyx
aXWQHb1VqNZERgGCrrtZj2rAm+KUP633yOhB/0sx/wANWJeiJEwmk9Hn5xne
n/5qgIcS0yMJbTLyD58QUWQFUDOw4i6sJ6HHwTn2c5Ja8P38dPe1AiLqWwkq
tijSgRdMjmnUi0SkSukhvm/TgfzsD9p20UQkIcysdX1RB+yaHjzkIxOR9Lgu
l5CRLrTuCsy6sZ+IKE5WX4eXdOHBrWVCYQYBUc4X2uY56kNkx9ZIRaQ9EtAW
TzxzzggITudzL/jaoySpNuRUYgQq86OWZ4n2qPZuvHFlvxHM8DW/VDhpj4K9
G/OttYzBxS2hpGbeDmWWjGp+5TcBg7XdXo997JCc9YLIsc+mwCPNNdNsj0eV
LhGq04WWQPd+jGszwKNpPnt/+y+WMHeXktl9Eo+San7rXWCzgs4jZYqjfHj0
culJ2XtDK0iVVQ/a6LdFBa7V9oQWK9hQ8Fw5SbBFHqNKyiUvrGFCpZHxPsEG
zRNVnO9/sQV8iJPNI0MbZLSO2ma2bOFVPfPtp6dsUEnO03EHcTwUnbTQa+O3
QbU//YJf++KBrPojeWLAGo18nch7uo6HLvW97GJEa5Rf4J5sKWkPDTqufDlE
K+SUfMjT7xYR2q8rResZWqGh6nqjxTYifJll/L5wwgq9daSfefSXCFt5JVWW
PFZIev5s3KAVCVIn3qVx51uisUQvhee7yVBs+GFiNdkCpYpcXP0eR4FPLJ+L
3jiYofiX5qTUG06gkjnD67zHCOX9vSgY+cQNorJX9rH8MkQhw0nDVz65QUs+
495H7wzR/Km73S9m3MCycv/O3SmGKP5iwQ4nCXfwa8UtP9hpiEbmOlHxVXco
ZMrs22IyQLrOIz4ngz2ANexoTsGmLjosf2F7h54XNL8YOfpsXBMtNymLdwn7
gdmdh0+l2I8hZt1AW2PZQPA6jJu47rmA053YeUmrKwQmnrwv0VZWgurgvDqG
hQiY3xE02xumBDGjYzL/mCJhw5r/tM9zJVj48YP6hycSuKddP2YaKUOM+LxC
1YlIANGV7S9Ox8Gsca34YXgk5KSKOYZeOAGfSOeaazciQZ8Uyl/5Uw2IPz6M
/P4XBVZlB91B9jS0sH6mhrBFA3nx5YOP50/D5oFbsCgYDQEX2QxW108D/suQ
RKtaNOQ3F1H1uTSg9GyrcV9oNCzJdHwcxQHMvKlkPDcbjdUzp0G6qTZEFB67
JtcTA7bMfdy1/trwgIk/7Nm3GMCz5I0OXMK810RRczYG7PdLREj2akOno8N/
B1higaygev+lgw689zCJOgyx4O7owr3irwtcrRltMXdigfq8ZsT9sj40ilCM
uXzjIORVSGX6Q324JuJv1k6Ng9C20+G1vfpQ5hfES42Pg/C+11zbAgYApgdG
buTGQczMZ728YgPwM3vVofAmDpIPMVZ2PzSEyfjlO40c8ZAbYx2G6zMG+TId
vmOu8UA9UsXDv2wMo+c8VZo948GmZ0/NHK8J+O2gZ5r6xQO7zMtft/EmEHde
fsU0OB7ovUfJrL0mkDm6VvQvMR7OybHjBj6Zgph140u+u/FgMPiWKbDbHMJs
Jqt1JuJBIlG80GTOHPC3BKs3puKBUTFWXWKfBTxvj2OrmYmHZ4knqAOWFpCn
0PqDaTkelI+VjuO6sHF2HXMSMw0OpdBaWTstQVJCbleHMA0iBYUNP41bwe3x
jue9VjQwGBJlEFixArMpR54tWxpw5x1udNxjDXM8EUyiBBrcOyAjNyVrDYyb
hBfmjjT4LKDCyRBgDU2P76pY+9LgJL/JgMK6NeQMpOhuxNGAacDscjCbDTx1
DvGrpdOgM8fSuFHIBnCzhyKck2jgyWfXpKdpA4VZm25l6TTI2u9SSEnExv88
ZfiWRYNFnlDvNA5bWF9XMdpdTgPUEy7aJWILp0fJdPMKGqRfixrkVbIFp6iC
rYz7NBDnoZkW2dqC+770vpUaGthwZyg+uW4LcY6cd2MaaVCzr2TlJ5Y7pnqs
hpZtNIjuLq2RVcFDzZ3DyfIdNDC6fNc3QB8Pg2LOZ5g/0GCUs+rLP288nDxu
q1PQTQMOzoYX3FV4cHlyfCh1gAZn93amaJ2yg+eP+5JP/aRBmUh+ubOhHZj3
kE/dGKfBNyW/tliCHdg1Oz5bnqAB3n4X2/MwO1jhA3LhFA00CiFTrcEOxO81
0etnaRBay15NbLWDUJnz1Nn/sPm+GuoK+2wHt1YeeovP00DiVyjX41U7COOv
9o1apAGbUnWWspo9UG5aRS2s0EBPN6be2tgeBM0sD+xYo0GsnWl/AMkedhcU
T+xbp8FCxCR/dYQ9BKkZSwlt0GCoReSm3FN78A20/rK2TQPevpkmk3Z76IhJ
yh5noIPFZNNX3yF7qJIyq3rPSIcWNqJw+bo93K/vYL/ITIcK/OViCXUC5Lzx
ODqwiw4/vZxadE0JoCn1N6xgNx2EI+R/uFEIQPUsM3fdQ4ert1oliqMIUDn/
uG6QhQ6REwzlh54RYOvNNG8OOx3qVjtbNd4T4InjO7fTe+kwy3privKVANcZ
zp4ZwuymqCaXt0GA2xk+r/dy0sEkPPABH44IWpz+qjpcdEhM1+w6YU6Er7kD
268xo/y9c3hHIhRwVNToctNBufme0rUYIkiEt42r8NDhbE+YzcOLRPjIUx9y
F3PZuH7wR6yvMD3T38XHSwdB1u91nIgI4u9TtCYx44Vq+o52EuEsrnPZeD8d
Mo/G/jUfIYInw3hLOWYmW0HVjC0iiOXnN5H56KDh+YtYyUEChTvvFqowh4Y9
jmgXJkFhVB9xE/PUTZumPZokyBbLb73MT4f468tv47E+NfpA0n0Is0D29U+r
riTwslq6JSJAh+or6iMBwSRoPGQZ74LZIHNk6lciCVynorhuYR5Opy275JBA
g9RE7MNMTZFgHLxLgt4DZo4sB+jAlviO3bqRBP8S/aTUMJfE+wm0tZNAMsu8
yQOzWsxeCe2vJLC5L3s4A3N3RI1i4wwJjJ2Pe1Zj9g61VVfaJsFMYlZqJ+at
oL8G9/aRwcsuImsKc/b5GzZi4mQwL9l9mUGQDvJnNZxuHCdD+hlXOg/mVz6j
vlz6ZNCfLQsSx0z2pIek2ZOBhTDvrYA51ak1IyKCDPiq6ZhTmB8TOEp988nY
+b4NJczm+NrqsSrs/vvUQmQw/7TCN5FekLH6/SV0CHOU+crbj91kSBgZW2fH
zG2S98n4Oxncsg7yrWHzu2eAG2leJMMRgdSQMcxaut+m1HZSgDuVX/Qt5gHN
hOVaPgrc16gVuov5nIYUo+wRCtweUwtKxLxTrY29RI0ChYtXpJ0w5584KyBo
SoG9E1d0VTC3H32oyHqOAmJXv7T///27ytmp07H/imlvpFuMeVV61WD9MgW0
DseBL2YpMXD6/YgCqrRLvbPY935+aMzX7Q0Fui5bxtzHjBdMDBnqp2DXtbV4
YabztGe0r1HgucwF+IjtnwP7/K/rsDmAowQvnYa5hn1f6VMhBxiQHYo+inlk
p31ThaYDyNx2fBiL7c/Tq2NT6UkO0Fr6vGcV2+8flxKXmXId4HdjZ8olzD7z
0oxR5Q4gPssgfRhzzm9/gTMdDiCnbKCljdXPwtc1A1MuR1DfMr5E2keHtMF8
m1fijjCvnGH+GatH0X5NJ3UVRxjPw8ngMVt0JYXIERxhpS3fWpcDy4tmrlK2
W47AGObHxYDV+/aMgq7yA0fok7+teIbt/+s1+U584QjfRZ7U9bDSYTOILlo2
5ggF4lsst7C8sJJYzNeScoLUeN0YLixfVpJ7s0OqnUBbmtc2Gcsns0dzKvkv
ncD/iHZIO5ZfRaPsvS0fneBcubsdO2YTVX3ufUtOIPTZxyNtiwYFU/WZFarO
UJAyYO77D8tPs9yU0WZnOOiz/vT1Eg1uhD+S2tXjDFWStSKTWN7Olna9kf/p
DKo++Vd3Y36/xcyEY3YBPUelxzpYPocQNLTSJV3ApSIkvGSGBq17qp5J+LnA
/HDpIhuW/+fPZNaTFl3A/qvm7Tt9NOiWZWok/XOBlgOprHd6aaD8O+QZidkV
Av3uqN3uocGyj+MrEo8rDCqzb9z8SIMoL/mPpOOuUPed1TcO608pru3TpGBX
eF3UlbnvDQ0KCbskyIuu4BNbgQ94RIMu3dir5EU3UGsP/fbkIvY8b7b2cGFP
IIeK4+ZUaJA7yPTvlYQ3/NCd+po2Eg8CuqI3x0R9YSSEVbQlLR7UV4eyhYzO
gK3J0KqxYjwc/redlmjiD4Np6fx3G+OgyrjlM0v4eTC50HMthC0O1gztOmo+
BEBt8SjfskcsbF3Zklp8HwgNlg7HaR9ioJf2V/H1WBC8pQxvairEQMb12/Vy
P4MBZ5IponYzGsQqfwRFj1Hh1Fgggz5nNKS4Bw1TlkJAunSBZyAyCrp1Hr/+
uBQKIzxvfgUvRsLvd0akftZwWHrjBnPukTAZfNkvkCMCDIfuJ337FgHNB888
WmaPBOdKNV0O9wg465t1b49YFJQsTcqFD4fD2nCQ0EPxaJi+gbt6xj0cCKuF
Gr/VYsBTQ2J9ZiwMrnK4ZLGZxQITToSD7hkGNaZ9Pq9M4+DgsOWhd4uhYJlr
tpx4LB4C/d2SJyNDQVUojbpYGw+zgUEb6uyhwCly6VL/MRp4bzUx5BeHQBdV
g5H2lAZhl7Q07ymGAIOTXu3f03QwfFx30OAtFfxZqCYqODqcaS0cOf+aCkN1
t38EatJhTWjmxo0WKjxiY+ab0aXDJXvxlWlEBa/G5sgfZnTo/dmsdu0JFTp4
NfW6nejwLC7XcLicCjkdagP36HSIULCwc7tABaYw34DJRDokfL3ckpZGhfPi
N1gkU+jgfGaYszaFCkYRq+pFF+jQpzxjsJ1AhX9ST4pysrDcI7ez50VTwYWu
4pdQRgdPoa5Drf5U+KDgwdxcTofa/XUCM2eocHrwWv5WBR2Y5z794PKjAs+x
xc6Iajo0lPhMkL2o8Ha49nhAAx26eJdjfjtRQTlt7H3VUzo0EV582etIhUIV
Lq8/z7A+sdDGoEShQviFgOtezXTI6v5zM5RAhfGTRUqlr7D1yhRy3rCjgs33
rvaxN3T4jT7oN9lSAV3cdhdppYMvXgM3bE0FOTXFTYd2OtzsqlnasqTC/wAj
sKTu
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326586042012*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Osftml0SKOqrbvoP5MFlQ+MdizZJ8D9m97KN
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
Q4tpXy8UnHblGimjgpr33vnLrl6oPtm22fiYCnKOcY5Q2Xnhqk0j3fMeKjje
3sHHauaFzFv+/yZGqcBa5bg3j74XqqpzNCzOUoFypeBd8SNeePxVcOfIJhVw
CQz+UlbxQpbQRL5z9ERYy0uW15Hxwl8Xr3/9sZsIHxnkYi0OemFxgL7hb34i
PEkab3bl88IFr8tRuRJEuL58kRDMRYmvutUPyhPhVMAR3XhWL3w89+V8tRoR
3D/PZZyhpfgz61Z06AgRtKxu9F/+54k5bXfQXpsIQl3HOG6ueuJgpE2fth4R
qElbdtXznjhaL8ezw4AIU7WVhc3TnpilaHXrPoW7RJ0nusY8cTYo9q0Phe/+
xyj6btgTox6/4TTQJ8I5tubAr688sSEolRynS4RgcuD9352eWBr6begApd+x
jb3LW62eSFjYr+ypSQTpsJeqjI88sSjiuEsGiQhs3+ISuWs88ZaWFXPTYSIs
2Iu1i5R7otHE1R4aVSKU2odknynyROrpLcUQJSLY2te5T+d7Ypl60oCnAhHo
7VdlDLIo+u/t1z1A2ccTO41/5WRP7G6mGemXI0KYXXI/faInnlmtk75LiQva
vbgeGOWJthXMP4YUiTBkyxjSE+SJPTOXeBIo/c7ammtIenliFacyE1L0qdvm
MV5w9MQ7q/Pn6nWIMGfz8eMvC08MVdP9GX2MCDdt+O6ZGnri68mQZhZ7Iljb
eMff1/REjwnW16neRKC1uWvApuqJk+rBAsORRGiynuOKkPHEIA/Gub8pRAix
Vph+LeqJ/PJ9dFO5ROC3jmuQ5/XE+Em7soRyIryxaiFf3u2J44aKWcUtRDhj
RbRZZvLEJb5oZZm3RJi1zFx6uOmB0nF9QyPUO6DRolhW7YMHjhFvHHkUugMC
LSb/XR3wwMrizcGijB3AYyHxaqPTA80a1PYeLt0BKeb1IU8aPLBUeFMzf3gH
KJmvaxyo9kA9sZWjk/M74LsZMJ267YFfe4fMqWmpwdSs696RXA9kuKo8ty5L
DVRmzCeKz3vgBvPLsFRtaqg3tTSkSvXAGZC9rWVNDX6mBdyeJzxwJV6lWsCL
GvaZjk63R3hgzdevhZzh1NB3TKBRKMAD+ayOxLKfpIbTx3zPpLl74LgwoY4v
jRrkj1XYTNp54O3l+C9656lh0uS3sJ6ZB9IrjXQUXKKGKyZKy2V6Hrh7+WmL
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
0ciPteYSkyZQf6BrbdWTR6e9iVIeSppwTUw1wIFWHsuVHwQ9sNME2Tg/jqVO
OSTv+0/B6bgmvOjMb8k8K4cbF/ZvBJ7VBGeuF36ihnJY6unMvZKvCUu+f3Y9
pZfD/3rcLmkUacK5BuEnDt2yeD+w6NfNm5rAT2Ptu3ROFjONfjAW3NCEBptU
tgvGspj8WGb/W0q9ye26JlEmWWz2vnKB/rwmjObzHH+cJYMpFofD35+g1H99
Ey6yUwZPfzXYEe6vCd4y50OzT0pjfZ//P0cbTSg/qRW8tSCFFsaRyZHamjDb
uR4Q4C+F2h9u/rypSJmHs9Zv6LMkhrdO/9t/SBOi3P19jtpIYkCO87aWuCY8
quTzquo5hPtPPovLlNOEv2vv3PdqHUK6D4Z9zXqaoKmb5Up+JIGis5XOJUGa
kJat67wgLYFsCnd+Kt7ShK5Pfx1cbovjjV+fPXJ+awKTRL3dy/3iuFp3vHDC
9iiYxwTZKOWI4c/HZrF+H45Cbrug1U06Mbw5O7g//KQWDLN8NGdOOoiBofnv
TTW1YZ9Ttmn8H1H8vGSnZHdIB1zvGJhMBolixUpN0+ARXShZ+mdo8UUEOQiM
HTuT9WDqSKN+i70InmOne8m6qA8SmaG64q+E8UIO8RF1viGEvhfRztMVxrsP
WIt6w4yhTviTJtUTITS9S5bal3IMVsJzIUReCE2GX4nkvDKDwy3GGh/KBfFY
F/m1mpQFnKLfcViXTxD9wqN6gnIsod2mSaU2TwBfLX5eNue2BpqSCKUDTAJI
/ZxPpqjVBozmxBQyUvhxfuupy9ZZO+CJfurxc4EPx7pLL36McoBDZdftr/Uc
wCEBmh8L9S5QB0zWkY940HHqJk0BtTscHj5hZnR7Pxp0ZJIWjniAEZ293sap
vVg4OTJq98MLBotfHB0M4sYDiX5vb9j6gKOaEumePRdq3q/0vv7GFwID2RUd
5XfjotYl3kMbAbBITJaR5+NEmXwpV9WSIDjx37wEAxMH7n2cHrtqGwLnensF
mibZMJWt9qhFRDhYurDwKcrT4+fsmF3X5KLAM2tm9zdGWsx2hXxa8WiIbO1i
yp2kxrDe3hEOwRjIFkjdWLpCQEOG36X6e+IACsbsXm3Pt/xSI7ncWjoJiU7W
Chd9pluoVnPZq74lQOyRnAM3rnxqoTvDOzv2OhFUMXAwQ+4B6fFK5Jj2jSTw
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
ir6wFSeWqmj4H4gs8jY=
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{
      Rational[-1, 20000000], 
      Rational[7, 50000000]}, {0, 2.*^-7}}, {{-5.*^-8, 1.4*^-7}, {0, 2.*^-7}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.590225921950885*^9, 3.5902259786304607`*^9, 3.5902260434488573`*^9, 
   3.591542124969117*^9, 3.5915423099480743`*^9, 3.591542347396255*^9, 
   3.591542403835289*^9, 3.59154247608926*^9, 3.591548416045518*^9, 
   3.591548501250176*^9, {3.591712967408998*^9, 3.591712994433628*^9}, {
   3.5923264893899107`*^9, 3.592326517593569*^9}, 3.592326589556913*^9}]
}, Open  ]]
},
WindowSize->{1678, 934},
WindowMargins->{{Automatic, -11}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 69, 1, 28, "Input"],
Cell[629, 23, 4601, 91, 403, "Input"],
Cell[CellGroupData[{
Cell[5255, 118, 260476, 5996, 12541, "Input"],
Cell[265734, 6116, 217, 5, 28, "Output"],
Cell[265954, 6123, 600, 11, 24, "Message"],
Cell[266557, 6136, 600, 11, 24, "Message"],
Cell[267160, 6149, 600, 11, 24, "Message"],
Cell[267763, 6162, 557, 11, 24, "Message"],
Cell[268323, 6175, 474, 15, 35, "Output"],
Cell[268800, 6192, 10705, 184, 241, "Output"],
Cell[279508, 6378, 218, 5, 28, "Output"],
Cell[279729, 6385, 519, 10, 24, "Message"],
Cell[280251, 6397, 519, 10, 24, "Message"],
Cell[280773, 6409, 519, 10, 24, "Message"],
Cell[281295, 6421, 549, 11, 24, "Message"],
Cell[281847, 6434, 525, 10, 24, "Message"],
Cell[282375, 6446, 525, 10, 24, "Message"],
Cell[282903, 6458, 525, 10, 24, "Message"],
Cell[283431, 6470, 549, 11, 24, "Message"],
Cell[283983, 6483, 518, 10, 24, "Message"],
Cell[284504, 6495, 519, 10, 24, "Message"],
Cell[285026, 6507, 519, 10, 24, "Message"],
Cell[285548, 6519, 551, 11, 24, "Message"],
Cell[286102, 6532, 474, 15, 35, "Output"],
Cell[286579, 6549, 3781, 70, 245, "Output"],
Cell[290363, 6621, 220, 5, 28, "Output"],
Cell[290586, 6628, 519, 10, 24, "Message"],
Cell[291108, 6640, 521, 10, 24, "Message"],
Cell[291632, 6652, 519, 10, 24, "Message"],
Cell[292154, 6664, 548, 11, 24, "Message"],
Cell[292705, 6677, 525, 10, 24, "Message"],
Cell[293233, 6689, 525, 10, 24, "Message"],
Cell[293761, 6701, 525, 10, 24, "Message"],
Cell[294289, 6713, 549, 11, 24, "Message"],
Cell[294841, 6726, 521, 10, 24, "Message"],
Cell[295365, 6738, 521, 10, 24, "Message"],
Cell[295889, 6750, 519, 10, 24, "Message"],
Cell[296411, 6762, 551, 11, 24, "Message"],
Cell[296965, 6775, 474, 15, 35, "Output"],
Cell[297442, 6792, 3265, 62, 248, "Output"],
Cell[300710, 6856, 218, 5, 28, "Output"],
Cell[300931, 6863, 519, 10, 24, "Message"],
Cell[301453, 6875, 521, 10, 24, "Message"],
Cell[301977, 6887, 519, 10, 24, "Message"],
Cell[302499, 6899, 549, 11, 24, "Message"],
Cell[303051, 6912, 526, 10, 24, "Message"],
Cell[303580, 6924, 527, 10, 24, "Message"],
Cell[304110, 6936, 525, 10, 24, "Message"],
Cell[304638, 6948, 549, 11, 24, "Message"],
Cell[305190, 6961, 519, 10, 24, "Message"],
Cell[305712, 6973, 519, 10, 24, "Message"],
Cell[306234, 6985, 519, 10, 24, "Message"],
Cell[306756, 6997, 549, 11, 24, "Message"],
Cell[307308, 7010, 451, 14, 35, "Output"],
Cell[307762, 7026, 4542, 84, 232, "Output"]
}, Open  ]],
Cell[312319, 7113, 2174, 40, 148, "Input"],
Cell[CellGroupData[{
Cell[314518, 7157, 30399, 858, 1576, "Input"],
Cell[344920, 8017, 531, 10, 28, "Output"],
Cell[345454, 8029, 39184, 654, 255, "Output"],
Cell[384641, 8685, 39382, 656, 255, "Output"],
Cell[424026, 9343, 52676, 878, 255, "Output"],
Cell[476705, 10223, 39138, 653, 255, "Output"],
Cell[515846, 10878, 41733, 694, 252, "Output"],
Cell[557582, 11574, 41711, 694, 252, "Output"],
Cell[599296, 12270, 49075, 816, 252, "Output"],
Cell[648374, 13088, 83051, 1372, 252, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
